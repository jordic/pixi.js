{"version":3,"file":null,"sources":["../node_modules/object-assign/index.js","../src/polyfill/Object.assign.js","../src/polyfill/requestAnimationFrame.js","../src/polyfill/Math.sign.js","../src/polyfill/index.js","../src/core/utils/canUploadSameBuffer.js","../src/core/const.js","../src/core/math/Point.js","../src/core/math/ObservablePoint.js","../src/core/math/Matrix.js","../src/core/math/GroupD8.js","../src/core/math/shapes/Rectangle.js","../src/core/math/shapes/Circle.js","../src/core/math/shapes/Ellipse.js","../src/core/math/shapes/Polygon.js","../src/core/math/shapes/RoundedRectangle.js","../src/core/math/index.js","../node_modules/ismobilejs/isMobile.js","../src/core/utils/maxRecommendedTextures.js","../src/core/settings.js","../node_modules/eventemitter3/index.js","../src/core/utils/pluginTarget.js","../src/core/utils/index.js","../src/core/ticker/Ticker.js","../src/core/ticker/index.js","../src/core/display/TransformBase.js","../src/core/display/TransformStatic.js","../src/core/display/Transform.js","../src/core/display/Bounds.js","../src/core/display/DisplayObject.js","../src/core/display/Container.js","../src/core/utils/determineCrossOrigin.js","../node_modules/bit-twiddle/twiddle.js","../src/core/textures/BaseTexture.js","../src/core/textures/BaseRenderTexture.js","../src/core/textures/VideoBaseTexture.js","../src/core/textures/TextureUvs.js","../src/core/textures/Texture.js","../src/core/textures/RenderTexture.js","../src/core/renderers/SystemRenderer.js","../src/core/renderers/canvas/utils/CanvasMaskManager.js","../src/core/renderers/canvas/utils/CanvasRenderTarget.js","../src/core/renderers/canvas/utils/canUseNewCanvasBlendModes.js","../src/core/renderers/canvas/utils/mapCanvasBlendModesToPixi.js","../src/core/renderers/canvas/CanvasRenderer.js","../src/core/renderers/webgl/managers/WebGLManager.js","../src/core/renderers/webgl/filters/extractUniformsFromSrc.js","../src/core/renderers/webgl/filters/Filter.js","../src/core/renderers/webgl/filters/spriteMask/SpriteMaskFilter.js","../src/core/renderers/webgl/managers/MaskManager.js","../src/core/renderers/webgl/managers/StencilManager.js","../src/core/renderers/webgl/utils/RenderTarget.js","../src/core/utils/createIndicesForQuads.js","../src/core/renderers/webgl/utils/Quad.js","../src/core/Shader.js","../src/core/renderers/webgl/filters/filterTransforms.js","../src/core/renderers/webgl/managers/FilterManager.js","../src/core/renderers/webgl/utils/ObjectRenderer.js","../src/core/renderers/webgl/TextureManager.js","../src/core/renderers/webgl/TextureGarbageCollector.js","../src/core/renderers/webgl/utils/mapWebGLBlendModesToPixi.js","../src/core/renderers/webgl/WebGLState.js","../src/core/renderers/webgl/utils/mapWebGLDrawModesToPixi.js","../src/core/renderers/webgl/utils/validateContext.js","../src/core/renderers/webgl/WebGLRenderer.js","../src/core/sprites/Sprite.js","../src/core/sprites/canvas/CanvasTinter.js","../src/core/sprites/canvas/CanvasSpriteRenderer.js","../src/core/sprites/webgl/generateMultiTextureShader.js","../src/core/renderers/webgl/utils/checkMaxIfStatmentsInShader.js","../src/core/sprites/webgl/BatchBuffer.js","../src/core/sprites/webgl/SpriteRenderer.js","../src/core/text/TextStyle.js","../src/core/text/Text.js","../src/core/graphics/GraphicsData.js","../src/core/graphics/utils/bezierCurveTo.js","../src/core/graphics/Graphics.js","../src/core/graphics/webgl/WebGLGraphicsData.js","../src/core/graphics/webgl/shaders/PrimitiveShader.js","../src/core/graphics/webgl/utils/buildLine.js","../node_modules/earcut/src/earcut.js","../src/core/graphics/webgl/utils/buildPoly.js","../src/core/graphics/webgl/utils/buildRectangle.js","../src/core/graphics/webgl/utils/buildRoundedRectangle.js","../src/core/graphics/webgl/utils/buildCircle.js","../src/core/graphics/webgl/GraphicsRenderer.js","../src/core/graphics/canvas/CanvasGraphicsRenderer.js","../src/core/index.js","../src/interaction/InteractionData.js","../src/interaction/InteractionEvent.js","../src/interaction/interactiveTarget.js","../src/interaction/InteractionManager.js","../src/interaction/index.js","../src/particles/ParticleContainer.js","../src/particles/webgl/ParticleShader.js","../src/particles/webgl/ParticleBuffer.js","../src/particles/webgl/ParticleRenderer.js","../src/particles/index.js","../src/index.js"],"sourcesContent":["'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","// References:\n// https://github.com/sindresorhus/object-assign\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nimport objectAssign from 'object-assign';\n\nif (!Object.assign)\n{\n    Object.assign = objectAssign;\n}\n","// References:\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// https://gist.github.com/1579671\n// http://updates.html5rocks.com/2012/05/requestAnimationFrame-API-now-with-sub-millisecond-precision\n// https://gist.github.com/timhall/4078614\n// https://github.com/Financial-Times/polyfill-service/tree/master/polyfills/requestAnimationFrame\n\n// Expected to be used with Browserfiy\n// Browserify automatically detects the use of `global` and passes the\n// correct reference of `global`, `self`, and finally `window`\n\nconst ONE_FRAME_TIME = 16;\n\n// Date.now\nif (!(Date.now && Date.prototype.getTime))\n{\n    Date.now = function now()\n    {\n        return new Date().getTime();\n    };\n}\n\n// performance.now\nif (!(global.performance && global.performance.now))\n{\n    const startTime = Date.now();\n\n    if (!global.performance)\n    {\n        global.performance = {};\n    }\n\n    global.performance.now = () => Date.now() - startTime;\n}\n\n// requestAnimationFrame\nlet lastTime = Date.now();\nconst vendors = ['ms', 'moz', 'webkit', 'o'];\n\nfor (let x = 0; x < vendors.length && !global.requestAnimationFrame; ++x)\n{\n    const p = vendors[x];\n\n    global.requestAnimationFrame = global[`${p}RequestAnimationFrame`];\n    global.cancelAnimationFrame = global[`${p}CancelAnimationFrame`] || global[`${p}CancelRequestAnimationFrame`];\n}\n\nif (!global.requestAnimationFrame)\n{\n    global.requestAnimationFrame = (callback) =>\n    {\n        if (typeof callback !== 'function')\n        {\n            throw new TypeError(`${callback}is not a function`);\n        }\n\n        const currentTime = Date.now();\n        let delay = ONE_FRAME_TIME + lastTime - currentTime;\n\n        if (delay < 0)\n        {\n            delay = 0;\n        }\n\n        lastTime = currentTime;\n\n        return setTimeout(() =>\n        {\n            lastTime = Date.now();\n            callback(performance.now());\n        }, delay);\n    };\n}\n\nif (!global.cancelAnimationFrame)\n{\n    global.cancelAnimationFrame = (id) => clearTimeout(id);\n}\n","// References:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\nif (!Math.sign)\n{\n    Math.sign = function mathSign(x)\n    {\n        x = Number(x);\n\n        if (x === 0 || isNaN(x))\n        {\n            return x;\n        }\n\n        return x > 0 ? 1 : -1;\n    };\n}\n","import './Object.assign';\nimport './requestAnimationFrame';\nimport './Math.sign';\n\nif (!window.ArrayBuffer)\n{\n    window.ArrayBuffer = Array;\n}\n\nif (!window.Float32Array)\n{\n    window.Float32Array = Array;\n}\n\nif (!window.Uint32Array)\n{\n    window.Uint32Array = Array;\n}\n\nif (!window.Uint16Array)\n{\n    window.Uint16Array = Array;\n}\n","export default function canUploadSameBuffer()\n{\n\t// Uploading the same buffer multiple times in a single frame can cause perf issues.\n\t// Apparent on IOS so only check for that at the moment\n\t// this check may become more complex if this issue pops up elsewhere.\n    const ios = !!navigator.platform && (/iPad|iPhone|iPod/).test(navigator.platform);\n\n    return !ios;\n}\n","import canUploadSameBuffer from './utils/canUploadSameBuffer';\n\n/**\n * String of the current PIXI version.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {string}\n */\nexport const VERSION = '4.2.1-tmpo';\n\n/**\n * Two Pi.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {number}\n */\nexport const PI_2 = Math.PI * 2;\n\n/**\n * Conversion factor for converting radians to degrees.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {number}\n */\nexport const RAD_TO_DEG = 180 / Math.PI;\n\n/**\n * Conversion factor for converting degrees to radians.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {number}\n */\nexport const DEG_TO_RAD = Math.PI / 180;\n\n/**\n * Constant to identify the Renderer Type.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} UNKNOWN - Unknown render type.\n * @property {number} WEBGL - WebGL render type.\n * @property {number} CANVAS - Canvas render type.\n */\nexport const RENDERER_TYPE = {\n    UNKNOWN:    0,\n    WEBGL:      1,\n    CANVAS:     2,\n};\n\n/**\n * Various blend modes supported by PIXI.\n *\n * IMPORTANT - The WebGL renderer only supports the NORMAL, ADD, MULTIPLY and SCREEN blend modes.\n * Anything else will silently act like NORMAL.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} NORMAL\n * @property {number} ADD\n * @property {number} MULTIPLY\n * @property {number} SCREEN\n * @property {number} OVERLAY\n * @property {number} DARKEN\n * @property {number} LIGHTEN\n * @property {number} COLOR_DODGE\n * @property {number} COLOR_BURN\n * @property {number} HARD_LIGHT\n * @property {number} SOFT_LIGHT\n * @property {number} DIFFERENCE\n * @property {number} EXCLUSION\n * @property {number} HUE\n * @property {number} SATURATION\n * @property {number} COLOR\n * @property {number} LUMINOSITY\n */\nexport const BLEND_MODES = {\n    NORMAL:         0,\n    ADD:            1,\n    MULTIPLY:       2,\n    SCREEN:         3,\n    OVERLAY:        4,\n    DARKEN:         5,\n    LIGHTEN:        6,\n    COLOR_DODGE:    7,\n    COLOR_BURN:     8,\n    HARD_LIGHT:     9,\n    SOFT_LIGHT:     10,\n    DIFFERENCE:     11,\n    EXCLUSION:      12,\n    HUE:            13,\n    SATURATION:     14,\n    COLOR:          15,\n    LUMINOSITY:     16,\n};\n\n/**\n * Various webgl draw modes. These can be used to specify which GL drawMode to use\n * under certain situations and renderers.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} POINTS\n * @property {number} LINES\n * @property {number} LINE_LOOP\n * @property {number} LINE_STRIP\n * @property {number} TRIANGLES\n * @property {number} TRIANGLE_STRIP\n * @property {number} TRIANGLE_FAN\n */\nexport const DRAW_MODES = {\n    POINTS:         0,\n    LINES:          1,\n    LINE_LOOP:      2,\n    LINE_STRIP:     3,\n    TRIANGLES:      4,\n    TRIANGLE_STRIP: 5,\n    TRIANGLE_FAN:   6,\n};\n\n/**\n * The scale modes that are supported by pixi.\n *\n * The PIXI.settings.SCALE_MODE scale mode affects the default scaling mode of future operations.\n * It can be re-assigned to either LINEAR or NEAREST, depending upon suitability.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} LINEAR Smooth scaling\n * @property {number} NEAREST Pixelating scaling\n */\nexport const SCALE_MODES = {\n    LINEAR:     0,\n    NEAREST:    1,\n};\n\n/**\n * The wrap modes that are supported by pixi.\n *\n * The PIXI.settings.WRAP_MODE wrap mode affects the default wraping mode of future operations.\n * It can be re-assigned to either CLAMP or REPEAT, depending upon suitability.\n * If the texture is non power of two then clamp will be used regardless as webGL can\n * only use REPEAT if the texture is po2.\n *\n * This property only affects WebGL.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} CLAMP - The textures uvs are clamped\n * @property {number} REPEAT - The texture uvs tile and repeat\n * @property {number} MIRRORED_REPEAT - The texture uvs tile and repeat with mirroring\n */\nexport const WRAP_MODES = {\n    CLAMP:          0,\n    REPEAT:         1,\n    MIRRORED_REPEAT: 2,\n};\n\n/**\n * The gc modes that are supported by pixi.\n *\n * The PIXI.settings.GC_MODE Garbage Collection mode for pixi textures is AUTO\n * If set to GC_MODE, the renderer will occasianally check textures usage. If they are not\n * used for a specified period of time they will be removed from the GPU. They will of course\n * be uploaded again when they are required. This is a silent behind the scenes process that\n * should ensure that the GPU does not  get filled up.\n *\n * Handy for mobile devices!\n * This property only affects WebGL.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} AUTO - Garbage collection will happen periodically automatically\n * @property {number} MANUAL - Garbage collection will need to be called manually\n */\nexport const GC_MODES = {\n    AUTO:           0,\n    MANUAL:         1,\n};\n\n/**\n * Regexp for image type by extension.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {RegExp|string}\n * @example `image.png`\n */\nexport const URL_FILE_EXTENSION = /\\.(\\w{3,4})(?:$|\\?|#)/i;\n\n/**\n * Regexp for data URI.\n * Based on: https://github.com/ragingwind/data-uri-regex\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {RegExp|string}\n * @example `data:image/png;base64`\n */\nexport const DATA_URI = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;(charset=[\\w-]+|base64))?,(.*)/i;\n\n/**\n * Regexp for SVG size.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {RegExp|string}\n * @example `<svg width=\"100\" height=\"100\"></svg>`\n */\nexport const SVG_SIZE = /<svg[^>]*(?:\\s(width|height)=('|\")(\\d*(?:\\.\\d+)?)(?:px)?('|\"))[^>]*(?:\\s(width|height)=('|\")(\\d*(?:\\.\\d+)?)(?:px)?('|\"))[^>]*>/i; // eslint-disable-line max-len\n\n/**\n * Constants that identify shapes, mainly to prevent `instanceof` calls.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} POLY\n * @property {number} RECT\n * @property {number} CIRC\n * @property {number} ELIP\n * @property {number} RREC\n */\nexport const SHAPES = {\n    POLY: 0,\n    RECT: 1,\n    CIRC: 2,\n    ELIP: 3,\n    RREC: 4,\n};\n\n/**\n * Constants that specify float precision in shaders.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {string} LOW='lowp'\n * @property {string} MEDIUM='mediump'\n * @property {string} HIGH='highp'\n */\nexport const PRECISION = {\n    LOW: 'lowp',\n    MEDIUM: 'mediump',\n    HIGH: 'highp',\n};\n\n/**\n * Constants that specify the transform type.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} STATIC\n * @property {number} DYNAMIC\n */\nexport const TRANSFORM_MODE = {\n    STATIC:     0,\n    DYNAMIC:    1,\n};\n\n/**\n * Constants that define the type of gradient on text.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} LINEAR_VERTICAL\n * @property {number} LINEAR_HORIZONTAL\n */\nexport const TEXT_GRADIENT = {\n    LINEAR_VERTICAL: 0,\n    LINEAR_HORIZONTAL: 1,\n};\n\n// TODO: maybe change to SPRITE.BATCH_SIZE: 2000\n// TODO: maybe add PARTICLE.BATCH_SIZE: 15000\n\n/**\n * Can we upload the same buffer in a single frame?\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {boolean}\n */\nexport const CAN_UPLOAD_SAME_BUFFER = canUploadSameBuffer();\n","/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n *\n * @class\n * @memberof PIXI\n */\nexport default class Point\n{\n    /**\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(x = 0, y = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n    }\n\n    /**\n     * Creates a clone of this point\n     *\n     * @return {PIXI.Point} a copy of the point\n     */\n    clone()\n    {\n        return new Point(this.x, this.y);\n    }\n\n    /**\n     * Copies x and y from the given point\n     *\n     * @param {PIXI.Point} p - The point to copy.\n     */\n    copy(p)\n    {\n        this.set(p.x, p.y);\n    }\n\n    /**\n     * Returns true if the given point is equal to this point\n     *\n     * @param {PIXI.Point} p - The point to check\n     * @returns {boolean} Whether the given point equal to this point\n     */\n    equals(p)\n    {\n        return (p.x === this.x) && (p.y === this.y);\n    }\n\n    /**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    set(x, y)\n    {\n        this.x = x || 0;\n        this.y = y || ((y !== 0) ? this.x : 0);\n    }\n\n}\n","/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n * An observable point is a point that triggers a callback when the point's position is changed.\n *\n * @class\n * @memberof PIXI\n */\nexport default class ObservablePoint\n{\n    /**\n     * @param {Function} cb - callback when changed\n     * @param {object} scope - owner of callback\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(cb, scope, x = 0, y = 0)\n    {\n        this._x = x;\n        this._y = y;\n\n        this.cb = cb;\n        this.scope = scope;\n    }\n\n    /**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    set(x, y)\n    {\n        const _x = x || 0;\n        const _y = y || ((y !== 0) ? _x : 0);\n\n        if (this._x !== _x || this._y !== _y)\n        {\n            this._x = _x;\n            this._y = _y;\n            this.cb.call(this.scope);\n        }\n    }\n\n    /**\n     * Copies the data from another point\n     *\n     * @param {PIXI.Point|PIXI.ObservablePoint} point - point to copy from\n     */\n    copy(point)\n    {\n        if (this._x !== point.x || this._y !== point.y)\n        {\n            this._x = point.x;\n            this._y = point.y;\n            this.cb.call(this.scope);\n        }\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     * @memberof PIXI.ObservablePoint#\n     */\n    get x()\n    {\n        return this._x;\n    }\n\n    /**\n     * Sets the X component.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set x(value)\n    {\n        if (this._x !== value)\n        {\n            this._x = value;\n            this.cb.call(this.scope);\n        }\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     * @memberof PIXI.ObservablePoint#\n     */\n    get y()\n    {\n        return this._y;\n    }\n\n    /**\n     * Sets the Y component.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set y(value)\n    {\n        if (this._y !== value)\n        {\n            this._y = value;\n            this.cb.call(this.scope);\n        }\n    }\n}\n","import Point from './Point';\n\n/**\n * The pixi Matrix class as an object, which makes it a lot faster,\n * here is a representation of it :\n * | a | b | tx|\n * | c | d | ty|\n * | 0 | 0 | 1 |\n *\n * @class\n * @memberof PIXI\n */\nexport default class Matrix\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        /**\n         * @member {number}\n         * @default 1\n         */\n        this.a = 1;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.b = 0;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.c = 0;\n\n        /**\n         * @member {number}\n         * @default 1\n         */\n        this.d = 1;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.tx = 0;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.ty = 0;\n\n        this.array = null;\n    }\n\n    /**\n     * Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n     *\n     * a = array[0]\n     * b = array[1]\n     * c = array[3]\n     * d = array[4]\n     * tx = array[2]\n     * ty = array[5]\n     *\n     * @param {number[]} array - The array that the matrix will be populated from.\n     */\n    fromArray(array)\n    {\n        this.a = array[0];\n        this.b = array[1];\n        this.c = array[3];\n        this.d = array[4];\n        this.tx = array[2];\n        this.ty = array[5];\n    }\n\n    /**\n     * sets the matrix properties\n     *\n     * @param {number} a - Matrix component\n     * @param {number} b - Matrix component\n     * @param {number} c - Matrix component\n     * @param {number} d - Matrix component\n     * @param {number} tx - Matrix component\n     * @param {number} ty - Matrix component\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    set(a, b, c, d, tx, ty)\n    {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n\n        return this;\n    }\n\n    /**\n     * Creates an array from the current Matrix object.\n     *\n     * @param {boolean} transpose - Whether we need to transpose the matrix or not\n     * @param {Float32Array} [out=new Float32Array(9)] - If provided the array will be assigned to out\n     * @return {number[]} the newly created array which contains the matrix\n     */\n    toArray(transpose, out)\n    {\n        if (!this.array)\n        {\n            this.array = new Float32Array(9);\n        }\n\n        const array = out || this.array;\n\n        if (transpose)\n        {\n            array[0] = this.a;\n            array[1] = this.b;\n            array[2] = 0;\n            array[3] = this.c;\n            array[4] = this.d;\n            array[5] = 0;\n            array[6] = this.tx;\n            array[7] = this.ty;\n            array[8] = 1;\n        }\n        else\n        {\n            array[0] = this.a;\n            array[1] = this.c;\n            array[2] = this.tx;\n            array[3] = this.b;\n            array[4] = this.d;\n            array[5] = this.ty;\n            array[6] = 0;\n            array[7] = 0;\n            array[8] = 1;\n        }\n\n        return array;\n    }\n\n    /**\n     * Get a new position with the current transformation applied.\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n     *\n     * @param {PIXI.Point} pos - The origin\n     * @param {PIXI.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {PIXI.Point} The new point, transformed through this matrix\n     */\n    apply(pos, newPos)\n    {\n        newPos = newPos || new Point();\n\n        const x = pos.x;\n        const y = pos.y;\n\n        newPos.x = (this.a * x) + (this.c * y) + this.tx;\n        newPos.y = (this.b * x) + (this.d * y) + this.ty;\n\n        return newPos;\n    }\n\n    /**\n     * Get a new position with the inverse of the current transformation applied.\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n     *\n     * @param {PIXI.Point} pos - The origin\n     * @param {PIXI.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {PIXI.Point} The new point, inverse-transformed through this matrix\n     */\n    applyInverse(pos, newPos)\n    {\n        newPos = newPos || new Point();\n\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\n\n        const x = pos.x;\n        const y = pos.y;\n\n        newPos.x = (this.d * id * x) + (-this.c * id * y) + (((this.ty * this.c) - (this.tx * this.d)) * id);\n        newPos.y = (this.a * id * y) + (-this.b * id * x) + (((-this.ty * this.a) + (this.tx * this.b)) * id);\n\n        return newPos;\n    }\n\n    /**\n     * Translates the matrix on the x and y.\n     *\n     * @param {number} x How much to translate x by\n     * @param {number} y How much to translate y by\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    translate(x, y)\n    {\n        this.tx += x;\n        this.ty += y;\n\n        return this;\n    }\n\n    /**\n     * Applies a scale transformation to the matrix.\n     *\n     * @param {number} x The amount to scale horizontally\n     * @param {number} y The amount to scale vertically\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    scale(x, y)\n    {\n        this.a *= x;\n        this.d *= y;\n        this.c *= x;\n        this.b *= y;\n        this.tx *= x;\n        this.ty *= y;\n\n        return this;\n    }\n\n    /**\n     * Applies a rotation transformation to the matrix.\n     *\n     * @param {number} angle - The angle in radians.\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    rotate(angle)\n    {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        const a1 = this.a;\n        const c1 = this.c;\n        const tx1 = this.tx;\n\n        this.a = (a1 * cos) - (this.b * sin);\n        this.b = (a1 * sin) + (this.b * cos);\n        this.c = (c1 * cos) - (this.d * sin);\n        this.d = (c1 * sin) + (this.d * cos);\n        this.tx = (tx1 * cos) - (this.ty * sin);\n        this.ty = (tx1 * sin) + (this.ty * cos);\n\n        return this;\n    }\n\n    /**\n     * Appends the given Matrix to this Matrix.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to append.\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    append(matrix)\n    {\n        const a1 = this.a;\n        const b1 = this.b;\n        const c1 = this.c;\n        const d1 = this.d;\n\n        this.a = (matrix.a * a1) + (matrix.b * c1);\n        this.b = (matrix.a * b1) + (matrix.b * d1);\n        this.c = (matrix.c * a1) + (matrix.d * c1);\n        this.d = (matrix.c * b1) + (matrix.d * d1);\n\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\n\n        return this;\n    }\n\n    /**\n     * Sets the matrix based on all the available properties\n     *\n     * @param {number} x - Position on the x axis\n     * @param {number} y - Position on the y axis\n     * @param {number} pivotX - Pivot on the x axis\n     * @param {number} pivotY - Pivot on the y axis\n     * @param {number} scaleX - Scale on the x axis\n     * @param {number} scaleY - Scale on the y axis\n     * @param {number} rotation - Rotation in radians\n     * @param {number} skewX - Skew on the x axis\n     * @param {number} skewY - Skew on the y axis\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    setTransform(x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY)\n    {\n        const sr = Math.sin(rotation);\n        const cr = Math.cos(rotation);\n        const cy = Math.cos(skewY);\n        const sy = Math.sin(skewY);\n        const nsx = -Math.sin(skewX);\n        const cx = Math.cos(skewX);\n\n        const a = cr * scaleX;\n        const b = sr * scaleX;\n        const c = -sr * scaleY;\n        const d = cr * scaleY;\n\n        this.a = (cy * a) + (sy * c);\n        this.b = (cy * b) + (sy * d);\n        this.c = (nsx * a) + (cx * c);\n        this.d = (nsx * b) + (cx * d);\n\n        this.tx = x + ((pivotX * a) + (pivotY * c));\n        this.ty = y + ((pivotX * b) + (pivotY * d));\n\n        return this;\n    }\n\n    /**\n     * Prepends the given Matrix to this Matrix.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to prepend\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    prepend(matrix)\n    {\n        const tx1 = this.tx;\n\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1)\n        {\n            const a1 = this.a;\n            const c1 = this.c;\n\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\n        }\n\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\n\n        return this;\n    }\n\n    /**\n     * Decomposes the matrix (x, y, scaleX, scaleY, and rotation) and sets the properties on to a transform.\n     *\n     * @param {PIXI.Transform|PIXI.TransformStatic} transform - The transform to apply the properties to.\n     * @return {PIXI.Transform|PIXI.TransformStatic} The transform with the newly applied properties\n     */\n    decompose(transform)\n    {\n        // sort out rotation / skew..\n        const a = this.a;\n        const b = this.b;\n        const c = this.c;\n        const d = this.d;\n\n        const skewX = Math.atan2(-c, d);\n        const skewY = Math.atan2(b, a);\n\n        const delta = Math.abs(1 - (skewX / skewY));\n\n        if (delta < 0.00001)\n        {\n            transform.rotation = skewY;\n\n            if (a < 0 && d >= 0)\n            {\n                transform.rotation += (transform.rotation <= 0) ? Math.PI : -Math.PI;\n            }\n\n            transform.skew.x = transform.skew.y = 0;\n        }\n        else\n        {\n            transform.skew.x = skewX;\n            transform.skew.y = skewY;\n        }\n\n        // next set scale\n        transform.scale.x = Math.sqrt((a * a) + (b * b));\n        transform.scale.y = Math.sqrt((c * c) + (d * d));\n\n        // next set position\n        transform.position.x = this.tx;\n        transform.position.y = this.ty;\n\n        return transform;\n    }\n\n    /**\n     * Inverts this matrix\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    invert()\n    {\n        const a1 = this.a;\n        const b1 = this.b;\n        const c1 = this.c;\n        const d1 = this.d;\n        const tx1 = this.tx;\n        const n = (a1 * d1) - (b1 * c1);\n\n        this.a = d1 / n;\n        this.b = -b1 / n;\n        this.c = -c1 / n;\n        this.d = a1 / n;\n        this.tx = ((c1 * this.ty) - (d1 * tx1)) / n;\n        this.ty = -((a1 * this.ty) - (b1 * tx1)) / n;\n\n        return this;\n    }\n\n    /**\n     * Resets this Matix to an identity (default) matrix.\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    identity()\n    {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.tx = 0;\n        this.ty = 0;\n\n        return this;\n    }\n\n    /**\n     * Creates a new Matrix object with the same values as this one.\n     *\n     * @return {PIXI.Matrix} A copy of this matrix. Good for chaining method calls.\n     */\n    clone()\n    {\n        const matrix = new Matrix();\n\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    }\n\n    /**\n     * Changes the values of the given matrix to be the same as the ones in this matrix\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to copy from.\n     * @return {PIXI.Matrix} The matrix given in parameter with its values updated.\n     */\n    copy(matrix)\n    {\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    }\n\n    /**\n     * A default (identity) matrix\n     *\n     * @static\n     * @const\n     */\n    static get IDENTITY()\n    {\n        return new Matrix();\n    }\n\n    /**\n     * A temp matrix\n     *\n     * @static\n     * @const\n     */\n    static get TEMP_MATRIX()\n    {\n        return new Matrix();\n    }\n}\n","// Your friendly neighbour https://en.wikipedia.org/wiki/Dihedral_group of order 16\nimport Matrix from './Matrix';\n\nconst ux = [1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1];\nconst uy = [0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vx = [0, -1, -1, -1, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vy = [1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1];\nconst tempMatrices = [];\n\nconst mul = [];\n\nfunction signum(x)\n{\n    if (x < 0)\n    {\n        return -1;\n    }\n    if (x > 0)\n    {\n        return 1;\n    }\n\n    return 0;\n}\n\nfunction init()\n{\n    for (let i = 0; i < 16; i++)\n    {\n        const row = [];\n\n        mul.push(row);\n\n        for (let j = 0; j < 16; j++)\n        {\n            const _ux = signum((ux[i] * ux[j]) + (vx[i] * uy[j]));\n            const _uy = signum((uy[i] * ux[j]) + (vy[i] * uy[j]));\n            const _vx = signum((ux[i] * vx[j]) + (vx[i] * vy[j]));\n            const _vy = signum((uy[i] * vx[j]) + (vy[i] * vy[j]));\n\n            for (let k = 0; k < 16; k++)\n            {\n                if (ux[k] === _ux && uy[k] === _uy && vx[k] === _vx && vy[k] === _vy)\n                {\n                    row.push(k);\n                    break;\n                }\n            }\n        }\n    }\n\n    for (let i = 0; i < 16; i++)\n    {\n        const mat = new Matrix();\n\n        mat.set(ux[i], uy[i], vx[i], vy[i], 0, 0);\n        tempMatrices.push(mat);\n    }\n}\n\ninit();\n\n/**\n * Implements Dihedral Group D_8, see [group D4]{@link http://mathworld.wolfram.com/DihedralGroupD4.html},\n * D8 is the same but with diagonals. Used for texture rotations.\n *\n * Vector xX(i), xY(i) is U-axis of sprite with rotation i\n * Vector yY(i), yY(i) is V-axis of sprite with rotation i\n * Rotations: 0 grad (0), 90 grad (2), 180 grad (4), 270 grad (6)\n * Mirrors: vertical (8), main diagonal (10), horizontal (12), reverse diagonal (14)\n * This is the small part of gameofbombs.com portal system. It works.\n *\n * @author Ivan @ivanpopelyshev\n *\n * @namespace PIXI.GroupD8\n */\nconst GroupD8 = {\n    E: 0,\n    SE: 1,\n    S: 2,\n    SW: 3,\n    W: 4,\n    NW: 5,\n    N: 6,\n    NE: 7,\n    MIRROR_VERTICAL: 8,\n    MIRROR_HORIZONTAL: 12,\n    uX: (ind) => ux[ind],\n    uY: (ind) => uy[ind],\n    vX: (ind) => vx[ind],\n    vY: (ind) => vy[ind],\n    inv: (rotation) =>\n    {\n        if (rotation & 8)\n        {\n            return rotation & 15;\n        }\n\n        return (-rotation) & 7;\n    },\n    add: (rotationSecond, rotationFirst) => mul[rotationSecond][rotationFirst],\n    sub: (rotationSecond, rotationFirst) => mul[rotationSecond][GroupD8.inv(rotationFirst)],\n\n    /**\n     * Adds 180 degrees to rotation. Commutative operation.\n     *\n     * @method\n     * @param {number} rotation - The number to rotate.\n     * @returns {number} rotated number\n     */\n    rotate180: (rotation) => rotation ^ 4,\n\n    /**\n     * I dont know why sometimes width and heights needs to be swapped. We'll fix it later.\n     *\n     * @param {number} rotation - The number to check.\n     * @returns {boolean} Whether or not the width/height should be swapped.\n     */\n    isSwapWidthHeight: (rotation) => (rotation & 3) === 2,\n\n    /**\n     * @param {number} dx - TODO\n     * @param {number} dy - TODO\n     *\n     * @return {number} TODO\n     */\n    byDirection: (dx, dy) =>\n    {\n        if (Math.abs(dx) * 2 <= Math.abs(dy))\n        {\n            if (dy >= 0)\n            {\n                return GroupD8.S;\n            }\n\n            return GroupD8.N;\n        }\n        else if (Math.abs(dy) * 2 <= Math.abs(dx))\n        {\n            if (dx > 0)\n            {\n                return GroupD8.E;\n            }\n\n            return GroupD8.W;\n        }\n        else if (dy > 0)\n        {\n            if (dx > 0)\n            {\n                return GroupD8.SE;\n            }\n\n            return GroupD8.SW;\n        }\n        else if (dx > 0)\n        {\n            return GroupD8.NE;\n        }\n\n        return GroupD8.NW;\n    },\n\n    /**\n     * Helps sprite to compensate texture packer rotation.\n     *\n     * @param {PIXI.Matrix} matrix - sprite world matrix\n     * @param {number} rotation - The rotation factor to use.\n     * @param {number} tx - sprite anchoring\n     * @param {number} ty - sprite anchoring\n     */\n    matrixAppendRotationInv: (matrix, rotation, tx = 0, ty = 0) =>\n    {\n        // Packer used \"rotation\", we use \"inv(rotation)\"\n        const mat = tempMatrices[GroupD8.inv(rotation)];\n\n        mat.tx = tx;\n        mat.ty = ty;\n        matrix.append(mat);\n    },\n};\n\nexport default GroupD8;\n","import { SHAPES } from '../../const';\n\n/**\n * Rectangle object is an area defined by its position, as indicated by its top-left corner\n * point (x, y) and by its width and its height.\n *\n * @class\n * @memberof PIXI\n */\nexport default class Rectangle\n{\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rectangle\n     * @param {number} [width=0] - The overall width of this rectangle\n     * @param {number} [height=0] - The overall height of this rectangle\n     */\n    constructor(x = 0, y = 0, width = 0, height = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = width;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = height;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.RECT\n         * @see PIXI.SHAPES\n         */\n        this.type = SHAPES.RECT;\n    }\n\n    /**\n     * returns the left edge of the rectangle\n     *\n     * @member {number}\n     * @memberof PIXI.Rectangle#\n     */\n    get left()\n    {\n        return this.x;\n    }\n\n    /**\n     * returns the right edge of the rectangle\n     *\n     * @member {number}\n     * @memberof PIXI.Rectangle\n     */\n    get right()\n    {\n        return this.x + this.width;\n    }\n\n    /**\n     * returns the top edge of the rectangle\n     *\n     * @member {number}\n     * @memberof PIXI.Rectangle\n     */\n    get top()\n    {\n        return this.y;\n    }\n\n    /**\n     * returns the bottom edge of the rectangle\n     *\n     * @member {number}\n     * @memberof PIXI.Rectangle\n     */\n    get bottom()\n    {\n        return this.y + this.height;\n    }\n\n    /**\n     * A constant empty rectangle.\n     *\n     * @static\n     * @constant\n     */\n    static get EMPTY()\n    {\n        return new Rectangle(0, 0, 0, 0);\n    }\n\n    /**\n     * Creates a clone of this Rectangle\n     *\n     * @return {PIXI.Rectangle} a copy of the rectangle\n     */\n    clone()\n    {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    }\n\n    /**\n     * Copies another rectangle to this one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to copy.\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n    copy(rectangle)\n    {\n        this.x = rectangle.x;\n        this.y = rectangle.y;\n        this.width = rectangle.width;\n        this.height = rectangle.height;\n\n        return this;\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rectangle\n     */\n    contains(x, y)\n    {\n        if (this.width <= 0 || this.height <= 0)\n        {\n            return false;\n        }\n\n        if (x >= this.x && x < this.x + this.width)\n        {\n            if (y >= this.y && y < this.y + this.height)\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Pads the rectangle making it grow in all directions.\n     *\n     * @param {number} paddingX - The horizontal padding amount.\n     * @param {number} paddingY - The vertical padding amount.\n     */\n    pad(paddingX, paddingY)\n    {\n        paddingX = paddingX || 0;\n        paddingY = paddingY || ((paddingY !== 0) ? paddingX : 0);\n\n        this.x -= paddingX;\n        this.y -= paddingY;\n\n        this.width += paddingX * 2;\n        this.height += paddingY * 2;\n    }\n\n    /**\n     * Fits this rectangle around the passed one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to fit.\n     */\n    fit(rectangle)\n    {\n        if (this.x < rectangle.x)\n        {\n            this.width += this.x;\n            if (this.width < 0)\n            {\n                this.width = 0;\n            }\n\n            this.x = rectangle.x;\n        }\n\n        if (this.y < rectangle.y)\n        {\n            this.height += this.y;\n            if (this.height < 0)\n            {\n                this.height = 0;\n            }\n            this.y = rectangle.y;\n        }\n\n        if (this.x + this.width > rectangle.x + rectangle.width)\n        {\n            this.width = rectangle.width - this.x;\n            if (this.width < 0)\n            {\n                this.width = 0;\n            }\n        }\n\n        if (this.y + this.height > rectangle.y + rectangle.height)\n        {\n            this.height = rectangle.height - this.y;\n            if (this.height < 0)\n            {\n                this.height = 0;\n            }\n        }\n    }\n\n    /**\n     * Enlarges this rectangle to include the passed rectangle.\n     *\n     * @param {PIXI.Rectangle} rect - The rectangle to include.\n     */\n    enlarge(rect)\n    {\n        if (rect === Rectangle.EMPTY)\n        {\n            return;\n        }\n\n        const x1 = Math.min(this.x, rect.x);\n        const x2 = Math.max(this.x + this.width, rect.x + rect.width);\n        const y1 = Math.min(this.y, rect.y);\n        const y2 = Math.max(this.y + this.height, rect.y + rect.height);\n\n        this.x = x1;\n        this.width = x2 - x1;\n        this.y = y1;\n        this.height = y2 - y1;\n    }\n}\n","import Rectangle from './Rectangle';\nimport { SHAPES } from '../../const';\n\n/**\n * The Circle object can be used to specify a hit area for displayObjects\n *\n * @class\n * @memberof PIXI\n */\nexport default class Circle\n{\n    /**\n     * @param {number} [x=0] - The X coordinate of the center of this circle\n     * @param {number} [y=0] - The Y coordinate of the center of this circle\n     * @param {number} [radius=0] - The radius of the circle\n     */\n    constructor(x = 0, y = 0, radius = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.radius = radius;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.CIRC\n         * @see PIXI.SHAPES\n         */\n        this.type = SHAPES.CIRC;\n    }\n\n    /**\n     * Creates a clone of this Circle instance\n     *\n     * @return {PIXI.Circle} a copy of the Circle\n     */\n    clone()\n    {\n        return new Circle(this.x, this.y, this.radius);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this circle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Circle\n     */\n    contains(x, y)\n    {\n        if (this.radius <= 0)\n        {\n            return false;\n        }\n\n        const r2 = this.radius * this.radius;\n        let dx = (this.x - x);\n        let dy = (this.y - y);\n\n        dx *= dx;\n        dy *= dy;\n\n        return (dx + dy <= r2);\n    }\n\n    /**\n    * Returns the framing rectangle of the circle as a Rectangle object\n    *\n    * @return {PIXI.Rectangle} the framing rectangle\n    */\n    getBounds()\n    {\n        return new Rectangle(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n    }\n}\n","import Rectangle from './Rectangle';\nimport { SHAPES } from '../../const';\n\n/**\n * The Ellipse object can be used to specify a hit area for displayObjects\n *\n * @class\n * @memberof PIXI\n */\nexport default class Ellipse\n{\n    /**\n     * @param {number} [x=0] - The X coordinate of the center of this circle\n     * @param {number} [y=0] - The Y coordinate of the center of this circle\n     * @param {number} [width=0] - The half width of this ellipse\n     * @param {number} [height=0] - The half height of this ellipse\n     */\n    constructor(x = 0, y = 0, width = 0, height = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = width;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = height;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.ELIP\n         * @see PIXI.SHAPES\n         */\n        this.type = SHAPES.ELIP;\n    }\n\n    /**\n     * Creates a clone of this Ellipse instance\n     *\n     * @return {PIXI.Ellipse} a copy of the ellipse\n     */\n    clone()\n    {\n        return new Ellipse(this.x, this.y, this.width, this.height);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this ellipse\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coords are within this ellipse\n     */\n    contains(x, y)\n    {\n        if (this.width <= 0 || this.height <= 0)\n        {\n            return false;\n        }\n\n        // normalize the coords to an ellipse with center 0,0\n        let normx = ((x - this.x) / this.width);\n        let normy = ((y - this.y) / this.height);\n\n        normx *= normx;\n        normy *= normy;\n\n        return (normx + normy <= 1);\n    }\n\n    /**\n     * Returns the framing rectangle of the ellipse as a Rectangle object\n     *\n     * @return {PIXI.Rectangle} the framing rectangle\n     */\n    getBounds()\n    {\n        return new Rectangle(this.x - this.width, this.y - this.height, this.width, this.height);\n    }\n}\n","import Point from '../Point';\nimport { SHAPES } from '../../const';\n\n/**\n * @class\n * @memberof PIXI\n */\nexport default class Polygon\n{\n    /**\n     * @param {PIXI.Point[]|number[]} points - This can be an array of Points\n     *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n     *  the arguments passed can be all the points of the polygon e.g.\n     *  `new PIXI.Polygon(new PIXI.Point(), new PIXI.Point(), ...)`, or the arguments passed can be flat\n     *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n     */\n    constructor(...points)\n    {\n        if (Array.isArray(points[0]))\n        {\n            points = points[0];\n        }\n\n        // if this is an array of points, convert it to a flat array of numbers\n        if (points[0] instanceof Point)\n        {\n            const p = [];\n\n            for (let i = 0, il = points.length; i < il; i++)\n            {\n                p.push(points[i].x, points[i].y);\n            }\n\n            points = p;\n        }\n\n        this.closed = true;\n\n        /**\n         * An array of the points of this polygon\n         *\n         * @member {number[]}\n         */\n        this.points = points;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.POLY\n         * @see PIXI.SHAPES\n         */\n        this.type = SHAPES.POLY;\n    }\n\n    /**\n     * Creates a clone of this polygon\n     *\n     * @return {PIXI.Polygon} a copy of the polygon\n     */\n    clone()\n    {\n        return new Polygon(this.points.slice());\n    }\n\n    /**\n     * Closes the polygon, adding points if necessary.\n     *\n     */\n    close()\n    {\n        const points = this.points;\n\n        // close the poly if the value is true!\n        if (points[0] !== points[points.length - 2] || points[1] !== points[points.length - 1])\n        {\n            points.push(points[0], points[1]);\n        }\n    }\n\n    /**\n     * Checks whether the x and y coordinates passed to this function are contained within this polygon\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this polygon\n     */\n    contains(x, y)\n    {\n        let inside = false;\n\n        // use some raycasting to test hits\n        // https://github.com/substack/point-in-polygon/blob/master/index.js\n        const length = this.points.length / 2;\n\n        for (let i = 0, j = length - 1; i < length; j = i++)\n        {\n            const xi = this.points[i * 2];\n            const yi = this.points[(i * 2) + 1];\n            const xj = this.points[j * 2];\n            const yj = this.points[(j * 2) + 1];\n            const intersect = ((yi > y) !== (yj > y)) && (x < ((xj - xi) * ((y - yi) / (yj - yi))) + xi);\n\n            if (intersect)\n            {\n                inside = !inside;\n            }\n        }\n\n        return inside;\n    }\n}\n","import { SHAPES } from '../../const';\n\n/**\n * The Rounded Rectangle object is an area that has nice rounded corners, as indicated by its\n * top-left corner point (x, y) and by its width and its height and its radius.\n *\n * @class\n * @memberof PIXI\n */\nexport default class RoundedRectangle\n{\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [width=0] - The overall width of this rounded rectangle\n     * @param {number} [height=0] - The overall height of this rounded rectangle\n     * @param {number} [radius=20] - Controls the radius of the rounded corners\n     */\n    constructor(x = 0, y = 0, width = 0, height = 0, radius = 20)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = width;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = height;\n\n        /**\n         * @member {number}\n         * @default 20\n         */\n        this.radius = radius;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readonly\n         * @default PIXI.SHAPES.RREC\n         * @see PIXI.SHAPES\n         */\n        this.type = SHAPES.RREC;\n    }\n\n    /**\n     * Creates a clone of this Rounded Rectangle\n     *\n     * @return {PIXI.RoundedRectangle} a copy of the rounded rectangle\n     */\n    clone()\n    {\n        return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rounded Rectangle\n     */\n    contains(x, y)\n    {\n        if (this.width <= 0 || this.height <= 0)\n        {\n            return false;\n        }\n        if (x >= this.x && x <= this.x + this.width)\n        {\n            if (y >= this.y && y <= this.y + this.height)\n            {\n                if ((y >= this.y + this.radius && y <= this.y + this.height - this.radius)\n                || (x >= this.x + this.radius && x <= this.x + this.width - this.radius))\n                {\n                    return true;\n                }\n                let dx = x - (this.x + this.radius);\n                let dy = y - (this.y + this.radius);\n                const radius2 = this.radius * this.radius;\n\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n                dx = x - (this.x + this.width - this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n                dy = y - (this.y + this.height - this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n                dx = x - (this.x + this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n}\n","/**\n * Math classes and utilities mixed into PIXI namespace.\n *\n * @lends PIXI\n */\nexport { default as Point } from './Point';\nexport { default as ObservablePoint } from './ObservablePoint';\nexport { default as Matrix } from './Matrix';\nexport { default as GroupD8 } from './GroupD8';\n\nexport { default as Circle } from './shapes/Circle';\nexport { default as Ellipse } from './shapes/Ellipse';\nexport { default as Polygon } from './shapes/Polygon';\nexport { default as Rectangle } from './shapes/Rectangle';\nexport { default as RoundedRectangle } from './shapes/RoundedRectangle';\n","/**\n * isMobile.js v0.4.0\n *\n * A simple library to detect Apple phones and tablets,\n * Android phones and tablets, other mobile devices (like blackberry, mini-opera and windows phone),\n * and any kind of seven inch device, via user agent sniffing.\n *\n * @author: Kai Mallea (kmallea@gmail.com)\n *\n * @license: http://creativecommons.org/publicdomain/zero/1.0/\n */\n(function (global) {\n\n    var apple_phone         = /iPhone/i,\n        apple_ipod          = /iPod/i,\n        apple_tablet        = /iPad/i,\n        android_phone       = /(?=.*\\bAndroid\\b)(?=.*\\bMobile\\b)/i, // Match 'Android' AND 'Mobile'\n        android_tablet      = /Android/i,\n        amazon_phone        = /(?=.*\\bAndroid\\b)(?=.*\\bSD4930UR\\b)/i,\n        amazon_tablet       = /(?=.*\\bAndroid\\b)(?=.*\\b(?:KFOT|KFTT|KFJWI|KFJWA|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|KFARWI|KFASWI|KFSAWI|KFSAWA)\\b)/i,\n        windows_phone       = /IEMobile/i,\n        windows_tablet      = /(?=.*\\bWindows\\b)(?=.*\\bARM\\b)/i, // Match 'Windows' AND 'ARM'\n        other_blackberry    = /BlackBerry/i,\n        other_blackberry_10 = /BB10/i,\n        other_opera         = /Opera Mini/i,\n        other_chrome        = /(CriOS|Chrome)(?=.*\\bMobile\\b)/i,\n        other_firefox       = /(?=.*\\bFirefox\\b)(?=.*\\bMobile\\b)/i, // Match 'Firefox' AND 'Mobile'\n        seven_inch = new RegExp(\n            '(?:' +         // Non-capturing group\n\n            'Nexus 7' +     // Nexus 7\n\n            '|' +           // OR\n\n            'BNTV250' +     // B&N Nook Tablet 7 inch\n\n            '|' +           // OR\n\n            'Kindle Fire' + // Kindle Fire\n\n            '|' +           // OR\n\n            'Silk' +        // Kindle Fire, Silk Accelerated\n\n            '|' +           // OR\n\n            'GT-P1000' +    // Galaxy Tab 7 inch\n\n            ')',            // End non-capturing group\n\n            'i');           // Case-insensitive matching\n\n    var match = function(regex, userAgent) {\n        return regex.test(userAgent);\n    };\n\n    var IsMobileClass = function(userAgent) {\n        var ua = userAgent || navigator.userAgent;\n\n        // Facebook mobile app's integrated browser adds a bunch of strings that\n        // match everything. Strip it out if it exists.\n        var tmp = ua.split('[FBAN');\n        if (typeof tmp[1] !== 'undefined') {\n            ua = tmp[0];\n        }\n\n        // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n        // iPhone\" string. Same probable happens on other tablet platforms.\n        // This will confuse detection so strip it out if it exists.\n        tmp = ua.split('Twitter');\n        if (typeof tmp[1] !== 'undefined') {\n            ua = tmp[0];\n        }\n\n        this.apple = {\n            phone:  match(apple_phone, ua),\n            ipod:   match(apple_ipod, ua),\n            tablet: !match(apple_phone, ua) && match(apple_tablet, ua),\n            device: match(apple_phone, ua) || match(apple_ipod, ua) || match(apple_tablet, ua)\n        };\n        this.amazon = {\n            phone:  match(amazon_phone, ua),\n            tablet: !match(amazon_phone, ua) && match(amazon_tablet, ua),\n            device: match(amazon_phone, ua) || match(amazon_tablet, ua)\n        };\n        this.android = {\n            phone:  match(amazon_phone, ua) || match(android_phone, ua),\n            tablet: !match(amazon_phone, ua) && !match(android_phone, ua) && (match(amazon_tablet, ua) || match(android_tablet, ua)),\n            device: match(amazon_phone, ua) || match(amazon_tablet, ua) || match(android_phone, ua) || match(android_tablet, ua)\n        };\n        this.windows = {\n            phone:  match(windows_phone, ua),\n            tablet: match(windows_tablet, ua),\n            device: match(windows_phone, ua) || match(windows_tablet, ua)\n        };\n        this.other = {\n            blackberry:   match(other_blackberry, ua),\n            blackberry10: match(other_blackberry_10, ua),\n            opera:        match(other_opera, ua),\n            firefox:      match(other_firefox, ua),\n            chrome:       match(other_chrome, ua),\n            device:       match(other_blackberry, ua) || match(other_blackberry_10, ua) || match(other_opera, ua) || match(other_firefox, ua) || match(other_chrome, ua)\n        };\n        this.seven_inch = match(seven_inch, ua);\n        this.any = this.apple.device || this.android.device || this.windows.device || this.other.device || this.seven_inch;\n\n        // excludes 'other' devices and ipods, targeting touchscreen phones\n        this.phone = this.apple.phone || this.android.phone || this.windows.phone;\n\n        // excludes 7 inch devices, classifying as phone or tablet is left to the user\n        this.tablet = this.apple.tablet || this.android.tablet || this.windows.tablet;\n\n        if (typeof window === 'undefined') {\n            return this;\n        }\n    };\n\n    var instantiate = function() {\n        var IM = new IsMobileClass();\n        IM.Class = IsMobileClass;\n        return IM;\n    };\n\n    if (typeof module !== 'undefined' && module.exports && typeof window === 'undefined') {\n        //node\n        module.exports = IsMobileClass;\n    } else if (typeof module !== 'undefined' && module.exports && typeof window !== 'undefined') {\n        //browserify\n        module.exports = instantiate();\n    } else if (typeof define === 'function' && define.amd) {\n        //AMD\n        define('isMobile', [], global.isMobile = instantiate());\n    } else {\n        global.isMobile = instantiate();\n    }\n\n})(this);\n","import Device from 'ismobilejs';\n\nexport default function maxRecommendedTextures(max)\n{\n    if (Device.tablet || Device.phone)\n    {\n        // check if the res is iphone 6 or higher..\n        return 4;\n    }\n\n    // desktop should be ok\n    return max;\n}\n","import maxRecommendedTextures from './utils/maxRecommendedTextures';\n\n/**\n * @namespace PIXI.settings\n */\nexport default {\n\n    /**\n     * Target frames per millisecond.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 0.06\n     */\n    TARGET_FPMS: 0.06,\n\n    /**\n     * If set to true WebGL will attempt make textures mimpaped by default.\n     * Mipmapping will only succeed if the base texture uploaded has power of two dimensions.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {boolean}\n     * @default true\n     */\n    MIPMAP_TEXTURES: true,\n\n    /**\n     * Default resolution / device pixel ratio of the renderer.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 1\n     */\n    RESOLUTION: 1,\n\n    /**\n     * Default filter resolution.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 1\n     */\n    FILTER_RESOLUTION: 1,\n\n    /**\n     * The maximum textures that this device supports.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 32\n     */\n    SPRITE_MAX_TEXTURES: maxRecommendedTextures(32),\n\n    /**\n     * The default sprite batch size.\n     *\n     * The default aims to balance desktop and mobile devices.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 4096\n     */\n    SPRITE_BATCH_SIZE: 4096,\n\n    /**\n     * The prefix that denotes a URL is for a retina asset.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {RegExp|string}\n     * @example `@2x`\n     * @default /@(.+)x/\n     */\n    RETINA_PREFIX: /@(.+)x/,\n\n    /**\n     * The default render options if none are supplied to {@link PIXI.WebGLRenderer}\n     * or {@link PIXI.CanvasRenderer}.\n     *\n     * @static\n     * @constant\n     * @memberof PIXI.settings\n     * @type {object}\n     * @property {HTMLCanvasElement} view=null\n     * @property {number} resolution=1\n     * @property {boolean} antialias=false\n     * @property {boolean} forceFXAA=false\n     * @property {boolean} autoResize=false\n     * @property {boolean} transparent=false\n     * @property {number} backgroundColor=0x000000\n     * @property {boolean} clearBeforeRender=true\n     * @property {boolean} preserveDrawingBuffer=false\n     * @property {boolean} roundPixels=false\n     */\n    RENDER_OPTIONS: {\n        view: null,\n        antialias: false,\n        forceFXAA: false,\n        autoResize: false,\n        transparent: false,\n        backgroundColor: 0x000000,\n        clearBeforeRender: true,\n        preserveDrawingBuffer: false,\n        roundPixels: false,\n    },\n\n    /**\n     * Default transform type.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default PIXI.TRANSFORM_MODE.STATIC\n     */\n    TRANSFORM_MODE: 0,\n\n    /**\n     * Default Garbage Collection mode.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default PIXI.GC_MODES.AUTO\n     */\n    GC_MODE: 0,\n\n    /**\n     * Default Garbage Collection max idle.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 3600\n     */\n    GC_MAX_IDLE: 60 * 60,\n\n    /**\n     * Default Garbage Collection maximum check count.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 600\n     */\n    GC_MAX_CHECK_COUNT: 60 * 10,\n\n    /**\n     * Default wrap modes that are supported by pixi.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default PIXI.WRAP_MODES.CLAMP\n     */\n    WRAP_MODE: 0,\n\n    /**\n     * The scale modes that are supported by pixi.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default PIXI.SCALE_MODES.LINEAR\n     */\n    SCALE_MODE: 0,\n\n    /**\n     * Default specify float precision in shaders.\n     *\n     * @static\n     * @memberof PIXI.settings\n     * @type {string}\n     * @default PIXI.PRECISION.MEDIUM\n     */\n    PRECISION: 'mediump',\n\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * Mixins functionality to make an object have \"plugins\".\n *\n * @example\n *      function MyObject() {}\n *\n *      pluginTarget.mixin(MyObject);\n *\n * @mixin\n * @memberof PIXI.utils\n * @param {object} obj - The object to mix into.\n */\nfunction pluginTarget(obj)\n{\n    obj.__plugins = {};\n\n    /**\n     * Adds a plugin to an object\n     *\n     * @param {string} pluginName - The events that should be listed.\n     * @param {Function} ctor - The constructor function for the plugin.\n     */\n    obj.registerPlugin = function registerPlugin(pluginName, ctor)\n    {\n        obj.__plugins[pluginName] = ctor;\n    };\n\n    /**\n     * Instantiates all the plugins of this object\n     *\n     */\n    obj.prototype.initPlugins = function initPlugins()\n    {\n        this.plugins = this.plugins || {};\n\n        for (const o in obj.__plugins)\n        {\n            this.plugins[o] = new (obj.__plugins[o])(this);\n        }\n    };\n\n    /**\n     * Removes all the plugins of this object\n     *\n     */\n    obj.prototype.destroyPlugins = function destroyPlugins()\n    {\n        for (const o in this.plugins)\n        {\n            this.plugins[o].destroy();\n            this.plugins[o] = null;\n        }\n\n        this.plugins = null;\n    };\n}\n\nexport default {\n    /**\n     * Mixes in the properties of the pluginTarget into another object\n     *\n     * @param {object} obj - The obj to mix into\n     */\n    mixin: function mixin(obj)\n    {\n        pluginTarget(obj);\n    },\n};\n","import { DATA_URI, URL_FILE_EXTENSION, SVG_SIZE, VERSION } from '../const';\nimport settings from '../settings';\nimport EventEmitter from 'eventemitter3';\nimport pluginTarget from './pluginTarget';\nimport * as isMobile from 'ismobilejs';\n\nlet nextUid = 0;\nlet saidHello = false;\n\n/**\n * @namespace PIXI.utils\n */\nexport {\n    /**\n     * @see {@link https://github.com/kaimallea/isMobile}\n     *\n     * @memberof PIXI.utils\n     * @function isMobile\n     * @type {Object}\n     */\n    isMobile,\n    /**\n     * @see {@link https://github.com/primus/eventemitter3}\n     *\n     * @memberof PIXI.utils\n     * @class EventEmitter\n     * @type {EventEmitter}\n     */\n    EventEmitter,\n    /**\n     * @memberof PIXI.utils\n     * @function pluginTarget\n     * @type {mixin}\n     */\n    pluginTarget,\n};\n\n/**\n * Gets the next unique identifier\n *\n * @memberof PIXI.utils\n * @function uid\n * @return {number} The next unique identifier to use.\n */\nexport function uid()\n{\n    return ++nextUid;\n}\n\n/**\n * Converts a hex color number to an [R, G, B] array\n *\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The number to convert\n * @param  {number[]} [out=[]] If supplied, this array will be used rather than returning a new one\n * @return {number[]} An array representing the [R, G, B] of the color.\n */\nexport function hex2rgb(hex, out)\n{\n    out = out || [];\n\n    out[0] = ((hex >> 16) & 0xFF) / 255;\n    out[1] = ((hex >> 8) & 0xFF) / 255;\n    out[2] = (hex & 0xFF) / 255;\n\n    return out;\n}\n\n/**\n * Converts a hex color number to a string.\n *\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex\n * @return {string} The string color.\n */\nexport function hex2string(hex)\n{\n    hex = hex.toString(16);\n    hex = '000000'.substr(0, 6 - hex.length) + hex;\n\n    return `#${hex}`;\n}\n\n/**\n * Converts a color as an [R, G, B] array to a hex number\n *\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - rgb array\n * @return {number} The color number\n */\nexport function rgb2hex(rgb)\n{\n    return (((rgb[0] * 255) << 16) + ((rgb[1] * 255) << 8) + (rgb[2] * 255));\n}\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n *\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @return {number} resolution / device pixel ratio of an asset\n */\nexport function getResolutionOfUrl(url)\n{\n    const resolution = settings.RETINA_PREFIX.exec(url);\n\n    if (resolution)\n    {\n        return parseFloat(resolution[1]);\n    }\n\n    return 1;\n}\n\n/**\n * Typedef for decomposeDataUri return object.\n *\n * @typedef {object} DecomposedDataUri\n * @property {mediaType} Media type, eg. `image`\n * @property {subType} Sub type, eg. `png`\n * @property {encoding} Data encoding, eg. `base64`\n * @property {data} The actual data\n */\n\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n *\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @return {DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nexport function decomposeDataUri(dataUri)\n{\n    const dataUriMatch = DATA_URI.exec(dataUri);\n\n    if (dataUriMatch)\n    {\n        return {\n            mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n            subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n            encoding: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n            data: dataUriMatch[4],\n        };\n    }\n\n    return undefined;\n}\n\n/**\n * Get type of the image by regexp for extension. Returns undefined for unknown extensions.\n *\n * @memberof PIXI.utils\n * @function getUrlFileExtension\n * @param {string} url - the image path\n * @return {string|undefined} image extension\n */\nexport function getUrlFileExtension(url)\n{\n    const extension = URL_FILE_EXTENSION.exec(url);\n\n    if (extension)\n    {\n        return extension[1].toLowerCase();\n    }\n\n    return undefined;\n}\n\n/**\n * Typedef for Size object.\n *\n * @typedef {object} Size\n * @property {width} Width component\n * @property {height} Height component\n */\n\n/**\n * Get size from an svg string using regexp.\n *\n * @memberof PIXI.utils\n * @function getSvgSize\n * @param {string} svgString - a serialized svg element\n * @return {Size|undefined} image extension\n */\nexport function getSvgSize(svgString)\n{\n    const sizeMatch = SVG_SIZE.exec(svgString);\n    const size = {};\n\n    if (sizeMatch)\n    {\n        size[sizeMatch[1]] = Math.round(parseFloat(sizeMatch[3]));\n        size[sizeMatch[5]] = Math.round(parseFloat(sizeMatch[7]));\n    }\n\n    return size;\n}\n\n/**\n * Skips the hello message of renderers that are created after this is run.\n *\n * @function skipHello\n * @memberof PIXI.utils\n */\nexport function skipHello()\n{\n    saidHello = true;\n}\n\n/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever makes you a jerk face.\n *\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */\nexport function sayHello(type)\n{\n    if (saidHello)\n    {\n        return;\n    }\n\n    if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1)\n    {\n        const args = [\n            `\\n %c %c %c Pixi.js ${VERSION} - ✰ ${type} ✰  %c  %c  http://www.pixijs.com/  %c %c ♥%c♥%c♥ \\n\\n`,\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff66a5; background: #030307; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ffc3dc; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n        ];\n\n        window.console.log.apply(console, args);\n    }\n    else if (window.console)\n    {\n        window.console.log(`Pixi.js ${VERSION} - ${type} - http://www.pixijs.com/`);\n    }\n\n    saidHello = true;\n}\n\n/**\n * Helper for checking for webgl support\n *\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @return {boolean} is webgl supported\n */\nexport function isWebGLSupported()\n{\n    const contextOptions = { stencil: true, failIfMajorPerformanceCaveat: true };\n\n    try\n    {\n        if (!window.WebGLRenderingContext)\n        {\n            return false;\n        }\n\n        const canvas = document.createElement('canvas');\n        let gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);\n\n        const success = !!(gl && gl.getContextAttributes().stencil);\n\n        if (gl)\n        {\n            const loseContext = gl.getExtension('WEBGL_lose_context');\n\n            if (loseContext)\n            {\n                loseContext.loseContext();\n            }\n        }\n\n        gl = null;\n\n        return success;\n    }\n    catch (e)\n    {\n        return false;\n    }\n}\n\n/**\n * Returns sign of number\n *\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\nexport function sign(n)\n{\n    if (n === 0) return 0;\n\n    return n < 0 ? -1 : 1;\n}\n\n/**\n * Remove a range of items from an array\n *\n * @memberof PIXI.utils\n * @function removeItems\n * @param {Array<*>} arr The target array\n * @param {number} startIdx The index to begin removing from (inclusive)\n * @param {number} removeCount How many items to remove\n */\nexport function removeItems(arr, startIdx, removeCount)\n{\n    const length = arr.length;\n\n    if (startIdx >= length || removeCount === 0)\n    {\n        return;\n    }\n\n    removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount);\n\n    const len = length - removeCount;\n\n    for (let i = startIdx; i < len; ++i)\n    {\n        arr[i] = arr[i + removeCount];\n    }\n\n    arr.length = len;\n}\n\n/**\n * @todo Describe property usage\n *\n * @memberof PIXI.utils\n * @private\n */\nexport const TextureCache = {};\n\n/**\n * @todo Describe property usage\n *\n * @memberof PIXI.utils\n * @private\n */\nexport const BaseTextureCache = {};\n","import settings from '../settings';\nimport EventEmitter from 'eventemitter3';\n\n// Internal event used by composed emitter\nconst TICK = 'tick';\n\nconst { TARGET_FPMS } = settings;\n\n/**\n * A Ticker class that runs an update loop that other objects listen to.\n * This class is composed around an EventEmitter object to add listeners\n * meant for execution on the next requested animation frame.\n * Animation frames are requested only when necessary,\n * e.g. When the ticker is started and the emitter has listeners.\n *\n * @class\n * @memberof PIXI.ticker\n */\nexport default class Ticker\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        /**\n         * Internal emitter used to fire 'tick' event\n         * @private\n         */\n        this._emitter = new EventEmitter();\n\n        /**\n         * Internal current frame request ID\n         * @private\n         */\n        this._requestId = null;\n\n        /**\n         * Internal value managed by minFPS property setter and getter.\n         * This is the maximum allowed milliseconds between updates.\n         * @private\n         */\n        this._maxElapsedMS = 100;\n\n        /**\n         * Whether or not this ticker should invoke the method\n         * {@link PIXI.ticker.Ticker#start} automatically\n         * when a listener is added.\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.autoStart = false;\n\n        /**\n         * Scalar time value from last frame to this frame.\n         * This value is capped by setting {@link PIXI.ticker.Ticker#minFPS}\n         * and is scaled with {@link PIXI.ticker.Ticker#speed}.\n         * **Note:** The cap may be exceeded by scaling.\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.deltaTime = 1;\n\n        /**\n         * Time elapsed in milliseconds from last frame to this frame.\n         * Opposed to what the scalar {@link PIXI.ticker.Ticker#deltaTime}\n         * is based, this value is neither capped nor scaled.\n         * If the platform supports DOMHighResTimeStamp,\n         * this value will have a precision of 1 µs.\n         *\n         * @member {number}\n         * @default 1 / TARGET_FPMS\n         */\n        this.elapsedMS = 1 / TARGET_FPMS; // default to target frame time\n\n        /**\n         * The last time {@link PIXI.ticker.Ticker#update} was invoked.\n         * This value is also reset internally outside of invoking\n         * update, but only when a new animation frame is requested.\n         * If the platform supports DOMHighResTimeStamp,\n         * this value will have a precision of 1 µs.\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.lastTime = 0;\n\n        /**\n         * Factor of current {@link PIXI.ticker.Ticker#deltaTime}.\n         * @example\n         * // Scales ticker.deltaTime to what would be\n         * // the equivalent of approximately 120 FPS\n         * ticker.speed = 2;\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.speed = 1;\n\n        /**\n         * Whether or not this ticker has been started.\n         * `true` if {@link PIXI.ticker.Ticker#start} has been called.\n         * `false` if {@link PIXI.ticker.Ticker#stop} has been called.\n         * While `false`, this value may change to `true` in the\n         * event of {@link PIXI.ticker.Ticker#autoStart} being `true`\n         * and a listener is added.\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.started = false;\n\n        /**\n         * Internal tick method bound to ticker instance.\n         * This is because in early 2015, Function.bind\n         * is still 60% slower in high performance scenarios.\n         * Also separating frame requests from update method\n         * so listeners may be called at any time and with\n         * any animation API, just invoke ticker.update(time).\n         *\n         * @private\n         * @param {number} time - Time since last tick.\n         */\n        this._tick = (time) =>\n        {\n            this._requestId = null;\n\n            if (this.started)\n            {\n                // Invoke listeners now\n                this.update(time);\n                // Listener side effects may have modified ticker state.\n                if (this.started && this._requestId === null && this._emitter.listeners(TICK, true))\n                {\n                    this._requestId = requestAnimationFrame(this._tick);\n                }\n            }\n        };\n    }\n\n    /**\n     * Conditionally requests a new animation frame.\n     * If a frame has not already been requested, and if the internal\n     * emitter has listeners, a new frame is requested.\n     *\n     * @private\n     */\n    _requestIfNeeded()\n    {\n        if (this._requestId === null && this._emitter.listeners(TICK, true))\n        {\n            // ensure callbacks get correct delta\n            this.lastTime = performance.now();\n            this._requestId = requestAnimationFrame(this._tick);\n        }\n    }\n\n    /**\n     * Conditionally cancels a pending animation frame.\n     *\n     * @private\n     */\n    _cancelIfNeeded()\n    {\n        if (this._requestId !== null)\n        {\n            cancelAnimationFrame(this._requestId);\n            this._requestId = null;\n        }\n    }\n\n    /**\n     * Conditionally requests a new animation frame.\n     * If the ticker has been started it checks if a frame has not already\n     * been requested, and if the internal emitter has listeners. If these\n     * conditions are met, a new frame is requested. If the ticker has not\n     * been started, but autoStart is `true`, then the ticker starts now,\n     * and continues with the previous conditions to request a new frame.\n     *\n     * @private\n     */\n    _startIfPossible()\n    {\n        if (this.started)\n        {\n            this._requestIfNeeded();\n        }\n        else if (this.autoStart)\n        {\n            this.start();\n        }\n    }\n\n    /**\n     * Calls {@link module:eventemitter3.EventEmitter#on} internally for the\n     * internal 'tick' event. It checks if the emitter has listeners,\n     * and if so it requests a new animation frame at this point.\n     *\n     * @param {Function} fn - The listener function to be added for updates\n     * @param {Function} [context] - The listener context\n     * @returns {PIXI.ticker.Ticker} This instance of a ticker\n     */\n    add(fn, context)\n    {\n        this._emitter.on(TICK, fn, context);\n\n        this._startIfPossible();\n\n        return this;\n    }\n\n    /**\n     * Calls {@link module:eventemitter3.EventEmitter#once} internally for the\n     * internal 'tick' event. It checks if the emitter has listeners,\n     * and if so it requests a new animation frame at this point.\n     *\n     * @param {Function} fn - The listener function to be added for one update\n     * @param {Function} [context] - The listener context\n     * @returns {PIXI.ticker.Ticker} This instance of a ticker\n     */\n    addOnce(fn, context)\n    {\n        this._emitter.once(TICK, fn, context);\n\n        this._startIfPossible();\n\n        return this;\n    }\n\n    /**\n     * Calls {@link module:eventemitter3.EventEmitter#off} internally for 'tick' event.\n     * It checks if the emitter has listeners for 'tick' event.\n     * If it does, then it cancels the animation frame.\n     *\n     * @param {Function} [fn] - The listener function to be removed\n     * @param {Function} [context] - The listener context to be removed\n     * @returns {PIXI.ticker.Ticker} This instance of a ticker\n     */\n    remove(fn, context)\n    {\n        this._emitter.off(TICK, fn, context);\n\n        if (!this._emitter.listeners(TICK, true))\n        {\n            this._cancelIfNeeded();\n        }\n\n        return this;\n    }\n\n    /**\n     * Starts the ticker. If the ticker has listeners\n     * a new animation frame is requested at this point.\n     */\n    start()\n    {\n        if (!this.started)\n        {\n            this.started = true;\n            this._requestIfNeeded();\n        }\n    }\n\n    /**\n     * Stops the ticker. If the ticker has requested\n     * an animation frame it is canceled at this point.\n     */\n    stop()\n    {\n        if (this.started)\n        {\n            this.started = false;\n            this._cancelIfNeeded();\n        }\n    }\n\n    /**\n     * Triggers an update. An update entails setting the\n     * current {@link PIXI.ticker.Ticker#elapsedMS},\n     * the current {@link PIXI.ticker.Ticker#deltaTime},\n     * invoking all listeners with current deltaTime,\n     * and then finally setting {@link PIXI.ticker.Ticker#lastTime}\n     * with the value of currentTime that was provided.\n     * This method will be called automatically by animation\n     * frame callbacks if the ticker instance has been started\n     * and listeners are added.\n     *\n     * @param {number} [currentTime=performance.now()] - the current time of execution\n     */\n    update(currentTime = performance.now())\n    {\n        let elapsedMS;\n\n        // If the difference in time is zero or negative, we ignore most of the work done here.\n        // If there is no valid difference, then should be no reason to let anyone know about it.\n        // A zero delta, is exactly that, nothing should update.\n        //\n        // The difference in time can be negative, and no this does not mean time traveling.\n        // This can be the result of a race condition between when an animation frame is requested\n        // on the current JavaScript engine event loop, and when the ticker's start method is invoked\n        // (which invokes the internal _requestIfNeeded method). If a frame is requested before\n        // _requestIfNeeded is invoked, then the callback for the animation frame the ticker requests,\n        // can receive a time argument that can be less than the lastTime value that was set within\n        // _requestIfNeeded. This difference is in microseconds, but this is enough to cause problems.\n        //\n        // This check covers this browser engine timing issue, as well as if consumers pass an invalid\n        // currentTime value. This may happen if consumers opt-out of the autoStart, and update themselves.\n\n        if (currentTime > this.lastTime)\n        {\n            // Save uncapped elapsedMS for measurement\n            elapsedMS = this.elapsedMS = currentTime - this.lastTime;\n\n            // cap the milliseconds elapsed used for deltaTime\n            if (elapsedMS > this._maxElapsedMS)\n            {\n                elapsedMS = this._maxElapsedMS;\n            }\n\n            this.deltaTime = elapsedMS * TARGET_FPMS * this.speed;\n\n            // Invoke listeners added to internal emitter\n            this._emitter.emit(TICK, this.deltaTime);\n        }\n        else\n        {\n            this.deltaTime = this.elapsedMS = 0;\n        }\n\n        this.lastTime = currentTime;\n    }\n\n    /**\n     * The frames per second at which this ticker is running.\n     * The default is approximately 60 in most modern browsers.\n     * **Note:** This does not factor in the value of\n     * {@link PIXI.ticker.Ticker#speed}, which is specific\n     * to scaling {@link PIXI.ticker.Ticker#deltaTime}.\n     *\n     * @memberof PIXI.ticker.Ticker#\n     * @readonly\n     */\n    get FPS()\n    {\n        return 1000 / this.elapsedMS;\n    }\n\n    /**\n     * Manages the maximum amount of milliseconds allowed to\n     * elapse between invoking {@link PIXI.ticker.Ticker#update}.\n     * This value is used to cap {@link PIXI.ticker.Ticker#deltaTime},\n     * but does not effect the measured value of {@link PIXI.ticker.Ticker#FPS}.\n     * When setting this property it is clamped to a value between\n     * `0` and `PIXI.settings.TARGET_FPMS * 1000`.\n     *\n     * @memberof PIXI.ticker.Ticker#\n     * @default 10\n     */\n    get minFPS()\n    {\n        return 1000 / this._maxElapsedMS;\n    }\n\n    /**\n     * Sets the min fps.\n     *\n     * @param {number} fps - value to set.\n     */\n    set minFPS(fps)\n    {\n        // Clamp: 0 to TARGET_FPMS\n        const minFPMS = Math.min(Math.max(0, fps) / 1000, TARGET_FPMS);\n\n        this._maxElapsedMS = 1 / minFPMS;\n    }\n}\n","import Ticker from './Ticker';\n\n/**\n * The shared ticker instance used by {@link PIXI.extras.AnimatedSprite}.\n * and by {@link PIXI.interaction.InteractionManager}.\n * The property {@link PIXI.ticker.Ticker#autoStart} is set to `true`\n * for this instance. Please follow the examples for usage, including\n * how to opt-out of auto-starting the shared ticker.\n *\n * @example\n * let ticker = PIXI.ticker.shared;\n * // Set this to prevent starting this ticker when listeners are added.\n * // By default this is true only for the PIXI.ticker.shared instance.\n * ticker.autoStart = false;\n * // FYI, call this to ensure the ticker is stopped. It should be stopped\n * // if you have not attempted to render anything yet.\n * ticker.stop();\n * // Call this when you are ready for a running shared ticker.\n * ticker.start();\n *\n * @example\n * // You may use the shared ticker to render...\n * let renderer = PIXI.autoDetectRenderer(800, 600);\n * let stage = new PIXI.Container();\n * let interactionManager = PIXI.interaction.InteractionManager(renderer);\n * document.body.appendChild(renderer.view);\n * ticker.add(function (time) {\n *     renderer.render(stage);\n * });\n *\n * @example\n * // Or you can just update it manually.\n * ticker.autoStart = false;\n * ticker.stop();\n * function animate(time) {\n *     ticker.update(time);\n *     renderer.render(stage);\n *     requestAnimationFrame(animate);\n * }\n * animate(performance.now());\n *\n * @type {PIXI.ticker.Ticker}\n * @memberof PIXI.ticker\n */\nconst shared = new Ticker();\n\nshared.autoStart = true;\n\n/**\n * @namespace PIXI.ticker\n */\nexport { shared, Ticker };\n","import { Matrix } from '../math';\n\n/**\n * Generic class to deal with traditional 2D matrix transforms\n *\n * @class\n * @memberof PIXI\n */\nexport default class TransformBase\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        /**\n         * The global matrix transform. It can be swapped temporarily by some functions like getLocalBounds()\n         *\n         * @member {PIXI.Matrix}\n         */\n        this.worldTransform = new Matrix();\n\n        /**\n         * The local matrix transform\n         *\n         * @member {PIXI.Matrix}\n         */\n        this.localTransform = new Matrix();\n\n        this._worldID = 0;\n        this._parentID = 0;\n    }\n\n    /**\n     * TransformBase does not have decomposition, so this function wont do anything\n     */\n    updateLocalTransform()\n    {\n        // empty\n    }\n\n    /**\n     * Updates the values of the object and applies the parent's transform.\n     *\n     * @param {PIXI.TransformBase} parentTransform - The transform of the parent of this object\n     */\n    updateTransform(parentTransform)\n    {\n        const pt = parentTransform.worldTransform;\n        const wt = this.worldTransform;\n        const lt = this.localTransform;\n\n        // concat the parent matrix with the objects transform.\n        wt.a = (lt.a * pt.a) + (lt.b * pt.c);\n        wt.b = (lt.a * pt.b) + (lt.b * pt.d);\n        wt.c = (lt.c * pt.a) + (lt.d * pt.c);\n        wt.d = (lt.c * pt.b) + (lt.d * pt.d);\n        wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\n        wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\n\n        this._worldID ++;\n    }\n\n}\n\n/**\n * Updates the values of the object and applies the parent's transform.\n * @param  parentTransform {PIXI.Transform} The transform of the parent of this object\n *\n */\nTransformBase.prototype.updateWorldTransform = TransformBase.prototype.updateTransform;\n\nTransformBase.IDENTITY = new TransformBase();\n","import { ObservablePoint } from '../math';\nimport TransformBase from './TransformBase';\n\n/**\n * Transform that takes care about its versions\n *\n * @class\n * @extends PIXI.TransformBase\n * @memberof PIXI\n */\nexport default class TransformStatic extends TransformBase\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        super();\n\n         /**\n         * The coordinate of the object relative to the local coordinates of the parent.\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.position = new ObservablePoint(this.onChange, this, 0, 0);\n\n        /**\n         * The scale factor of the object.\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.scale = new ObservablePoint(this.onChange, this, 1, 1);\n\n        /**\n         * The pivot point of the displayObject that it rotates around\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.pivot = new ObservablePoint(this.onChange, this, 0, 0);\n\n        /**\n         * The skew amount, on the x and y axis.\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.skew = new ObservablePoint(this.updateSkew, this, 0, 0);\n\n        this._rotation = 0;\n\n        this._sr = Math.sin(0);\n        this._cr = Math.cos(0);\n        this._cy = Math.cos(0);// skewY);\n        this._sy = Math.sin(0);// skewY);\n        this._nsx = Math.sin(0);// skewX);\n        this._cx = Math.cos(0);// skewX);\n\n        this._localID = 0;\n        this._currentLocalID = 0;\n    }\n\n    /**\n     * Called when a value changes.\n     *\n     * @private\n     */\n    onChange()\n    {\n        this._localID ++;\n    }\n\n    /**\n     * Called when skew changes\n     *\n     * @private\n     */\n    updateSkew()\n    {\n        this._cy = Math.cos(this.skew._y);\n        this._sy = Math.sin(this.skew._y);\n        this._nsx = Math.sin(this.skew._x);\n        this._cx = Math.cos(this.skew._x);\n\n        this._localID ++;\n    }\n\n    /**\n     * Updates only local matrix\n     */\n    updateLocalTransform()\n    {\n        const lt = this.localTransform;\n\n        if (this._localID !== this._currentLocalID)\n        {\n            // get the matrix values of the displayobject based on its transform properties..\n            const a  =  this._cr * this.scale._x;\n            const b  =  this._sr * this.scale._x;\n            const c  = -this._sr * this.scale._y;\n            const d  =  this._cr * this.scale._y;\n\n            lt.a = (this._cy * a) + (this._sy * c);\n            lt.b = (this._cy * b) + (this._sy * d);\n            lt.c = (this._nsx * a) + (this._cx * c);\n            lt.d = (this._nsx * b) + (this._cx * d);\n\n            lt.tx = this.position._x - ((this.pivot._x * lt.a) + (this.pivot._y * lt.c));\n            lt.ty = this.position._y - ((this.pivot._x * lt.b) + (this.pivot._y * lt.d));\n            this._currentLocalID = this._localID;\n\n            // force an update..\n            this._parentID = -1;\n        }\n    }\n\n    /**\n     * Updates the values of the object and applies the parent's transform.\n     *\n     * @param {PIXI.Transform} parentTransform - The transform of the parent of this object\n     */\n    updateTransform(parentTransform)\n    {\n        const pt = parentTransform.worldTransform;\n        const wt = this.worldTransform;\n        const lt = this.localTransform;\n\n        if (this._localID !== this._currentLocalID)\n        {\n            // get the matrix values of the displayobject based on its transform properties..\n            const a  =  this._cr * this.scale._x;\n            const b  =  this._sr * this.scale._x;\n            const c  = -this._sr * this.scale._y;\n            const d  =  this._cr * this.scale._y;\n\n            lt.a = (this._cy * a) + (this._sy * c);\n            lt.b = (this._cy * b) + (this._sy * d);\n            lt.c = (this._nsx * a) + (this._cx * c);\n            lt.d = (this._nsx * b) + (this._cx * d);\n\n            lt.tx = this.position._x - ((this.pivot._x * lt.a) + (this.pivot._y * lt.c));\n            lt.ty = this.position._y - ((this.pivot._x * lt.b) + (this.pivot._y * lt.d));\n            this._currentLocalID = this._localID;\n\n            // force an update..\n            this._parentID = -1;\n        }\n\n        if (this._parentID !== parentTransform._worldID)\n        {\n            // concat the parent matrix with the objects transform.\n            wt.a = (lt.a * pt.a) + (lt.b * pt.c);\n            wt.b = (lt.a * pt.b) + (lt.b * pt.d);\n            wt.c = (lt.c * pt.a) + (lt.d * pt.c);\n            wt.d = (lt.c * pt.b) + (lt.d * pt.d);\n            wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\n            wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\n\n            this._parentID = parentTransform._worldID;\n\n            // update the id of the transform..\n            this._worldID ++;\n        }\n    }\n\n    /**\n     * Decomposes a matrix and sets the transforms properties based on it.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to decompose\n     */\n    setFromMatrix(matrix)\n    {\n        matrix.decompose(this);\n        this._localID ++;\n    }\n\n    /**\n     * The rotation of the object in radians.\n     *\n     * @member {number}\n     * @memberof PIXI.TransformStatic#\n     */\n    get rotation()\n    {\n        return this._rotation;\n    }\n\n    /**\n     * Sets the rotation of the transform.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set rotation(value)\n    {\n        this._rotation = value;\n        this._sr = Math.sin(value);\n        this._cr = Math.cos(value);\n        this._localID ++;\n    }\n}\n","import { Point, ObservablePoint } from '../math';\nimport TransformBase from './TransformBase';\n\n/**\n * Generic class to deal with traditional 2D matrix transforms\n * local transformation is calculated from position,scale,skew and rotation\n *\n * @class\n * @extends PIXI.TransformBase\n * @memberof PIXI\n */\nexport default class Transform extends TransformBase\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        super();\n\n         /**\n         * The coordinate of the object relative to the local coordinates of the parent.\n         *\n         * @member {PIXI.Point}\n         */\n        this.position = new Point(0, 0);\n\n        /**\n         * The scale factor of the object.\n         *\n         * @member {PIXI.Point}\n         */\n        this.scale = new Point(1, 1);\n\n        /**\n         * The skew amount, on the x and y axis.\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.skew = new ObservablePoint(this.updateSkew, this, 0, 0);\n\n        /**\n         * The pivot point of the displayObject that it rotates around\n         *\n         * @member {PIXI.Point}\n         */\n        this.pivot = new Point(0, 0);\n\n        /**\n         * The rotation value of the object, in radians\n         *\n         * @member {Number}\n         * @private\n         */\n        this._rotation = 0;\n\n        this._sr = Math.sin(0);\n        this._cr = Math.cos(0);\n        this._cy = Math.cos(0);// skewY);\n        this._sy = Math.sin(0);// skewY);\n        this._nsx = Math.sin(0);// skewX);\n        this._cx = Math.cos(0);// skewX);\n    }\n\n    /**\n     * Updates the skew values when the skew changes.\n     *\n     * @private\n     */\n    updateSkew()\n    {\n        this._cy = Math.cos(this.skew.y);\n        this._sy = Math.sin(this.skew.y);\n        this._nsx = Math.sin(this.skew.x);\n        this._cx = Math.cos(this.skew.x);\n    }\n\n    /**\n     * Updates only local matrix\n     */\n    updateLocalTransform()\n    {\n        const lt = this.localTransform;\n        const a  =  this._cr * this.scale.x;\n        const b  =  this._sr * this.scale.x;\n        const c  = -this._sr * this.scale.y;\n        const d  =  this._cr * this.scale.y;\n\n        lt.a = (this._cy * a) + (this._sy * c);\n        lt.b = (this._cy * b) + (this._sy * d);\n        lt.c = (this._nsx * a) + (this._cx * c);\n        lt.d = (this._nsx * b) + (this._cx * d);\n    }\n\n    /**\n     * Updates the values of the object and applies the parent's transform.\n     *\n     * @param {PIXI.Transform} parentTransform - The transform of the parent of this object\n     */\n    updateTransform(parentTransform)\n    {\n        const pt = parentTransform.worldTransform;\n        const wt = this.worldTransform;\n        const lt = this.localTransform;\n\n        const a  =  this._cr * this.scale.x;\n        const b  =  this._sr * this.scale.x;\n        const c  = -this._sr * this.scale.y;\n        const d  =  this._cr * this.scale.y;\n\n        lt.a = (this._cy * a) + (this._sy * c);\n        lt.b = (this._cy * b) + (this._sy * d);\n        lt.c = (this._nsx * a) + (this._cx * c);\n        lt.d = (this._nsx * b) + (this._cx * d);\n\n        lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\n        lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\n\n        // concat the parent matrix with the objects transform.\n        wt.a = (lt.a * pt.a) + (lt.b * pt.c);\n        wt.b = (lt.a * pt.b) + (lt.b * pt.d);\n        wt.c = (lt.c * pt.a) + (lt.d * pt.c);\n        wt.d = (lt.c * pt.b) + (lt.d * pt.d);\n        wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\n        wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\n\n        this._worldID ++;\n    }\n\n    /**\n     * Decomposes a matrix and sets the transforms properties based on it.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to decompose\n     */\n    setFromMatrix(matrix)\n    {\n        matrix.decompose(this);\n    }\n\n    /**\n     * The rotation of the object in radians.\n     *\n     * @member {number}\n     * @memberof PIXI.Transform#\n     */\n    get rotation()\n    {\n        return this._rotation;\n    }\n\n    /**\n     * Set the rotation of the transform.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set rotation(value)\n    {\n        this._rotation = value;\n        this._sr = Math.sin(value);\n        this._cr = Math.cos(value);\n    }\n}\n","import { Rectangle } from '../math';\n\n/**\n * 'Builder' pattern for bounds rectangles\n * Axis-Aligned Bounding Box\n * It is not a shape! Its mutable thing, no 'EMPTY' or that kind of problems\n *\n * @class\n * @memberof PIXI\n */\nexport default class Bounds\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.minX = Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.minY = Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.maxX = -Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.maxY = -Infinity;\n\n        this.rect = null;\n    }\n\n    /**\n     * Checks if bounds are empty.\n     *\n     * @return {boolean} True if empty.\n     */\n    isEmpty()\n    {\n        return this.minX > this.maxX || this.minY > this.maxY;\n    }\n\n    /**\n     * Clears the bounds and resets.\n     *\n     */\n    clear()\n    {\n        this.updateID++;\n\n        this.minX = Infinity;\n        this.minY = Infinity;\n        this.maxX = -Infinity;\n        this.maxY = -Infinity;\n    }\n\n    /**\n     * Can return Rectangle.EMPTY constant, either construct new rectangle, either use your rectangle\n     * It is not guaranteed that it will return tempRect\n     *\n     * @param {PIXI.Rectangle} rect - temporary object will be used if AABB is not empty\n     * @returns {PIXI.Rectangle} A rectangle of the bounds\n     */\n    getRectangle(rect)\n    {\n        if (this.minX > this.maxX || this.minY > this.maxY)\n        {\n            return Rectangle.EMPTY;\n        }\n\n        rect = rect || new Rectangle(0, 0, 1, 1);\n\n        rect.x = this.minX;\n        rect.y = this.minY;\n        rect.width = this.maxX - this.minX;\n        rect.height = this.maxY - this.minY;\n\n        return rect;\n    }\n\n    /**\n     * This function should be inlined when its possible.\n     *\n     * @param {PIXI.Point} point - The point to add.\n     */\n    addPoint(point)\n    {\n        this.minX = Math.min(this.minX, point.x);\n        this.maxX = Math.max(this.maxX, point.x);\n        this.minY = Math.min(this.minY, point.y);\n        this.maxY = Math.max(this.maxY, point.y);\n    }\n\n    /**\n     * Adds a quad, not transformed\n     *\n     * @param {Float32Array} vertices - The verts to add.\n     */\n    addQuad(vertices)\n    {\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        let x = vertices[0];\n        let y = vertices[1];\n\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[2];\n        y = vertices[3];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[4];\n        y = vertices[5];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[6];\n        y = vertices[7];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Adds sprite frame, transformed.\n     *\n     * @param {PIXI.TransformBase} transform - TODO\n     * @param {number} x0 - TODO\n     * @param {number} y0 - TODO\n     * @param {number} x1 - TODO\n     * @param {number} y1 - TODO\n     */\n    addFrame(transform, x0, y0, x1, y1)\n    {\n        const matrix = transform.worldTransform;\n        const a = matrix.a;\n        const b = matrix.b;\n        const c = matrix.c;\n        const d = matrix.d;\n        const tx = matrix.tx;\n        const ty = matrix.ty;\n\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        let x = (a * x0) + (c * y0) + tx;\n        let y = (b * x0) + (d * y0) + ty;\n\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = (a * x1) + (c * y0) + tx;\n        y = (b * x1) + (d * y0) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = (a * x0) + (c * y1) + tx;\n        y = (b * x0) + (d * y1) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = (a * x1) + (c * y1) + tx;\n        y = (b * x1) + (d * y1) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Add an array of vertices\n     *\n     * @param {PIXI.TransformBase} transform - TODO\n     * @param {Float32Array} vertices - TODO\n     * @param {number} beginOffset - TODO\n     * @param {number} endOffset - TODO\n     */\n    addVertices(transform, vertices, beginOffset, endOffset)\n    {\n        const matrix = transform.worldTransform;\n        const a = matrix.a;\n        const b = matrix.b;\n        const c = matrix.c;\n        const d = matrix.d;\n        const tx = matrix.tx;\n        const ty = matrix.ty;\n\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        for (let i = beginOffset; i < endOffset; i += 2)\n        {\n            const rawX = vertices[i];\n            const rawY = vertices[i + 1];\n            const x = (a * rawX) + (c * rawY) + tx;\n            const y = (d * rawY) + (b * rawX) + ty;\n\n            minX = x < minX ? x : minX;\n            minY = y < minY ? y : minY;\n            maxX = x > maxX ? x : maxX;\n            maxY = y > maxY ? y : maxY;\n        }\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Adds other Bounds\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     */\n    addBounds(bounds)\n    {\n        const minX = this.minX;\n        const minY = this.minY;\n        const maxX = this.maxX;\n        const maxY = this.maxY;\n\n        this.minX = bounds.minX < minX ? bounds.minX : minX;\n        this.minY = bounds.minY < minY ? bounds.minY : minY;\n        this.maxX = bounds.maxX > maxX ? bounds.maxX : maxX;\n        this.maxY = bounds.maxY > maxY ? bounds.maxY : maxY;\n    }\n\n    /**\n     * Adds other Bounds, masked with Bounds\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     * @param {PIXI.Bounds} mask - TODO\n     */\n    addBoundsMask(bounds, mask)\n    {\n        const _minX = bounds.minX > mask.minX ? bounds.minX : mask.minX;\n        const _minY = bounds.minY > mask.minY ? bounds.minY : mask.minY;\n        const _maxX = bounds.maxX < mask.maxX ? bounds.maxX : mask.maxX;\n        const _maxY = bounds.maxY < mask.maxY ? bounds.maxY : mask.maxY;\n\n        if (_minX <= _maxX && _minY <= _maxY)\n        {\n            const minX = this.minX;\n            const minY = this.minY;\n            const maxX = this.maxX;\n            const maxY = this.maxY;\n\n            this.minX = _minX < minX ? _minX : minX;\n            this.minY = _minY < minY ? _minY : minY;\n            this.maxX = _maxX > maxX ? _maxX : maxX;\n            this.maxY = _maxY > maxY ? _maxY : maxY;\n        }\n    }\n\n    /**\n     * Adds other Bounds, masked with Rectangle\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     * @param {PIXI.Rectangle} area - TODO\n     */\n    addBoundsArea(bounds, area)\n    {\n        const _minX = bounds.minX > area.x ? bounds.minX : area.x;\n        const _minY = bounds.minY > area.y ? bounds.minY : area.y;\n        const _maxX = bounds.maxX < area.x + area.width ? bounds.maxX : (area.x + area.width);\n        const _maxY = bounds.maxY < area.y + area.height ? bounds.maxY : (area.y + area.height);\n\n        if (_minX <= _maxX && _minY <= _maxY)\n        {\n            const minX = this.minX;\n            const minY = this.minY;\n            const maxX = this.maxX;\n            const maxY = this.maxY;\n\n            this.minX = _minX < minX ? _minX : minX;\n            this.minY = _minY < minY ? _minY : minY;\n            this.maxX = _maxX > maxX ? _maxX : maxX;\n            this.maxY = _maxY > maxY ? _maxY : maxY;\n        }\n    }\n}\n","import EventEmitter from 'eventemitter3';\nimport { TRANSFORM_MODE } from '../const';\nimport settings from '../settings';\nimport TransformStatic from './TransformStatic';\nimport Transform from './Transform';\nimport Bounds from './Bounds';\nimport { Rectangle } from '../math';\n// _tempDisplayObjectParent = new DisplayObject();\n\n/**\n * The base class for all objects that are rendered on the screen.\n * This is an abstract class and should not be used on its own rather it should be extended.\n *\n * @class\n * @extends EventEmitter\n * @mixes PIXI.interaction.interactiveTarget\n * @memberof PIXI\n */\nexport default class DisplayObject extends EventEmitter\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        super();\n\n        const TransformClass = settings.TRANSFORM_MODE === TRANSFORM_MODE.STATIC ? TransformStatic : Transform;\n\n        this.tempDisplayObjectParent = null;\n\n        // TODO: need to create Transform from factory\n        /**\n         * World transform and local transform of this object.\n         * This will become read-only later, please do not assign anything there unless you know what are you doing\n         *\n         * @member {PIXI.TransformBase}\n         */\n        this.transform = new TransformClass();\n\n        /**\n         * The opacity of the object.\n         *\n         * @member {number}\n         */\n        this.alpha = 1;\n\n        /**\n         * The visibility of the object. If false the object will not be drawn, and\n         * the updateTransform function will not be called.\n         *\n         * Only affects recursive calls from parent. You can ask for bounds or call updateTransform manually\n         *\n         * @member {boolean}\n         */\n        this.visible = true;\n\n        /**\n         * Can this object be rendered, if false the object will not be drawn but the updateTransform\n         * methods will still be called.\n         *\n         * Only affects recursive calls from parent. You can ask for bounds manually\n         *\n         * @member {boolean}\n         */\n        this.renderable = true;\n\n        /**\n         * The display object container that contains this display object.\n         *\n         * @member {PIXI.Container}\n         * @readonly\n         */\n        this.parent = null;\n\n        /**\n         * The multiplied alpha of the displayObject\n         *\n         * @member {number}\n         * @readonly\n         */\n        this.worldAlpha = 1;\n\n        /**\n         * The area the filter is applied to. This is used as more of an optimisation\n         * rather than figuring out the dimensions of the displayObject each frame you can set this rectangle\n         *\n         * Also works as an interaction mask\n         *\n         * @member {PIXI.Rectangle}\n         */\n        this.filterArea = null;\n\n        this._filters = null;\n        this._enabledFilters = null;\n\n        /**\n         * The bounds object, this is used to calculate and store the bounds of the displayObject\n         *\n         * @member {PIXI.Rectangle}\n         * @private\n         */\n        this._bounds = new Bounds();\n        this._boundsID = 0;\n        this._lastBoundsID = -1;\n        this._boundsRect = null;\n        this._localBoundsRect = null;\n\n        /**\n         * The original, cached mask of the object\n         *\n         * @member {PIXI.Rectangle}\n         * @private\n         */\n        this._mask = null;\n    }\n\n    /**\n     * @private\n     * @member {PIXI.DisplayObject}\n     */\n    get _tempDisplayObjectParent()\n    {\n        if (this.tempDisplayObjectParent === null)\n        {\n            this.tempDisplayObjectParent = new DisplayObject();\n        }\n\n        return this.tempDisplayObjectParent;\n    }\n\n    /**\n     * Updates the object transform for rendering\n     *\n     * TODO - Optimization pass!\n     */\n    updateTransform()\n    {\n        this.transform.updateTransform(this.parent.transform);\n        // multiply the alphas..\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n        this._bounds.updateID++;\n    }\n\n    /**\n     * recursively updates transform of all objects from the root to this one\n     * internal function for toLocal()\n     */\n    _recursivePostUpdateTransform()\n    {\n        if (this.parent)\n        {\n            this.parent._recursivePostUpdateTransform();\n            this.transform.updateTransform(this.parent.transform);\n        }\n        else\n        {\n            this.transform.updateTransform(this._tempDisplayObjectParent.transform);\n        }\n    }\n\n    /**\n     * Retrieves the bounds of the displayObject as a rectangle object.\n     *\n     * @param {boolean} skipUpdate - setting to true will stop the transforms of the scene graph from\n     *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n     *  nice performance boost\n     * @param {PIXI.Rectangle} rect - Optional rectangle to store the result of the bounds calculation\n     * @return {PIXI.Rectangle} the rectangular bounding area\n     */\n    getBounds(skipUpdate, rect)\n    {\n        if (!skipUpdate)\n        {\n            if (!this.parent)\n            {\n                this.parent = this._tempDisplayObjectParent;\n                this.updateTransform();\n                this.parent = null;\n            }\n            else\n            {\n                this._recursivePostUpdateTransform();\n                this.updateTransform();\n            }\n        }\n\n        if (this._boundsID !== this._lastBoundsID)\n        {\n            this.calculateBounds();\n        }\n\n        if (!rect)\n        {\n            if (!this._boundsRect)\n            {\n                this._boundsRect = new Rectangle();\n            }\n\n            rect = this._boundsRect;\n        }\n\n        return this._bounds.getRectangle(rect);\n    }\n\n    /**\n     * Retrieves the local bounds of the displayObject as a rectangle object\n     *\n     * @param {PIXI.Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation\n     * @return {PIXI.Rectangle} the rectangular bounding area\n     */\n    getLocalBounds(rect)\n    {\n        const transformRef = this.transform;\n        const parentRef = this.parent;\n\n        this.parent = null;\n        this.transform = this._tempDisplayObjectParent.transform;\n\n        if (!rect)\n        {\n            if (!this._localBoundsRect)\n            {\n                this._localBoundsRect = new Rectangle();\n            }\n\n            rect = this._localBoundsRect;\n        }\n\n        const bounds = this.getBounds(false, rect);\n\n        this.parent = parentRef;\n        this.transform = transformRef;\n\n        return bounds;\n    }\n\n    /**\n     * Calculates the global position of the display object\n     *\n     * @param {PIXI.Point} position - The world origin to calculate from\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point)\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform.\n     * @return {PIXI.Point} A point object representing the position of this object\n     */\n    toGlobal(position, point, skipUpdate = false)\n    {\n        if (!skipUpdate)\n        {\n            this._recursivePostUpdateTransform();\n\n            // this parent check is for just in case the item is a root object.\n            // If it is we need to give it a temporary parent so that displayObjectUpdateTransform works correctly\n            // this is mainly to avoid a parent check in the main loop. Every little helps for performance :)\n            if (!this.parent)\n            {\n                this.parent = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                this.parent = null;\n            }\n            else\n            {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        // don't need to update the lot\n        return this.worldTransform.apply(position, point);\n    }\n\n    /**\n     * Calculates the local position of the display object relative to another point\n     *\n     * @param {PIXI.Point} position - The world origin to calculate from\n     * @param {PIXI.DisplayObject} [from] - The DisplayObject to calculate the global position from\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point)\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform\n     * @return {PIXI.Point} A point object representing the position of this object\n     */\n    toLocal(position, from, point, skipUpdate)\n    {\n        if (from)\n        {\n            position = from.toGlobal(position, point, skipUpdate);\n        }\n\n        if (!skipUpdate)\n        {\n            this._recursivePostUpdateTransform();\n\n            // this parent check is for just in case the item is a root object.\n            // If it is we need to give it a temporary parent so that displayObjectUpdateTransform works correctly\n            // this is mainly to avoid a parent check in the main loop. Every little helps for performance :)\n            if (!this.parent)\n            {\n                this.parent = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                this.parent = null;\n            }\n            else\n            {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        // simply apply the matrix..\n        return this.worldTransform.applyInverse(position, point);\n    }\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n    renderWebGL(renderer) // eslint-disable-line no-unused-vars\n    {\n        // OVERWRITE;\n    }\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n    renderCanvas(renderer) // eslint-disable-line no-unused-vars\n    {\n        // OVERWRITE;\n    }\n\n    /**\n     * Set the parent Container of this DisplayObject\n     *\n     * @param {PIXI.Container} container - The Container to add this DisplayObject to\n     * @return {PIXI.Container} The Container that this DisplayObject was added to\n     */\n    setParent(container)\n    {\n        if (!container || !container.addChild)\n        {\n            throw new Error('setParent: Argument must be a Container');\n        }\n\n        container.addChild(this);\n\n        return container;\n    }\n\n    /**\n     * Convenience function to set the position, scale, skew and pivot at once.\n     *\n     * @param {number} [x=0] - The X position\n     * @param {number} [y=0] - The Y position\n     * @param {number} [scaleX=1] - The X scale value\n     * @param {number} [scaleY=1] - The Y scale value\n     * @param {number} [rotation=0] - The rotation\n     * @param {number} [skewX=0] - The X skew value\n     * @param {number} [skewY=0] - The Y skew value\n     * @param {number} [pivotX=0] - The X pivot value\n     * @param {number} [pivotY=0] - The Y pivot value\n     * @return {PIXI.DisplayObject} The DisplayObject instance\n     */\n    setTransform(x = 0, y = 0, scaleX = 1, scaleY = 1, rotation = 0, skewX = 0, skewY = 0, pivotX = 0, pivotY = 0)\n    {\n        this.position.x = x;\n        this.position.y = y;\n        this.scale.x = !scaleX ? 1 : scaleX;\n        this.scale.y = !scaleY ? 1 : scaleY;\n        this.rotation = rotation;\n        this.skew.x = skewX;\n        this.skew.y = skewY;\n        this.pivot.x = pivotX;\n        this.pivot.y = pivotY;\n\n        return this;\n    }\n\n    /**\n     * Base destroy method for generic display objects. This will automatically\n     * remove the display object from its parent Container as well as remove\n     * all current event listeners and internal references. Do not use a DisplayObject\n     * after calling `destroy`.\n     *\n     */\n    destroy()\n    {\n        this.removeAllListeners();\n        if (this.parent)\n        {\n            this.parent.removeChild(this);\n        }\n        this.transform = null;\n\n        this.parent = null;\n\n        this._bounds = null;\n        this._currentBounds = null;\n        this._mask = null;\n\n        this.filterArea = null;\n\n        this.interactive = false;\n        this.interactiveChildren = false;\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     * An alias to position.x\n     *\n     * @member {number}\n     * @memberof PIXI.DisplayObject#\n     */\n    get x()\n    {\n        return this.position.x;\n    }\n\n    /**\n     * Sets the X position of the object.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set x(value)\n    {\n        this.transform.position.x = value;\n    }\n\n    /**\n     * The position of the displayObject on the y axis relative to the local coordinates of the parent.\n     * An alias to position.y\n     *\n     * @member {number}\n     * @memberof PIXI.DisplayObject#\n     */\n    get y()\n    {\n        return this.position.y;\n    }\n\n    /**\n     * Sets the Y position of the object.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set y(value)\n    {\n        this.transform.position.y = value;\n    }\n\n    /**\n     * Current transform of the object based on world (parent) factors\n     *\n     * @member {PIXI.Matrix}\n     * @memberof PIXI.DisplayObject#\n     * @readonly\n     */\n    get worldTransform()\n    {\n        return this.transform.worldTransform;\n    }\n\n    /**\n     * Current transform of the object based on local factors: position, scale, other stuff\n     *\n     * @member {PIXI.Matrix}\n     * @memberof PIXI.DisplayObject#\n     * @readonly\n     */\n    get localTransform()\n    {\n        return this.transform.localTransform;\n    }\n\n    /**\n     * The coordinate of the object relative to the local coordinates of the parent.\n     * Assignment by value since pixi-v4.\n     *\n     * @member {PIXI.Point|PIXI.ObservablePoint}\n     * @memberof PIXI.DisplayObject#\n     */\n    get position()\n    {\n        return this.transform.position;\n    }\n\n    /**\n     * Copies the point to the position of the object.\n     *\n     * @param {PIXI.Point} value - The value to set to.\n     */\n    set position(value)\n    {\n        this.transform.position.copy(value);\n    }\n\n    /**\n     * The scale factor of the object.\n     * Assignment by value since pixi-v4.\n     *\n     * @member {PIXI.Point|PIXI.ObservablePoint}\n     * @memberof PIXI.DisplayObject#\n     */\n    get scale()\n    {\n        return this.transform.scale;\n    }\n\n    /**\n     * Copies the point to the scale of the object.\n     *\n     * @param {PIXI.Point} value - The value to set to.\n     */\n    set scale(value)\n    {\n        this.transform.scale.copy(value);\n    }\n\n    /**\n     * The pivot point of the displayObject that it rotates around\n     * Assignment by value since pixi-v4.\n     *\n     * @member {PIXI.Point|PIXI.ObservablePoint}\n     * @memberof PIXI.DisplayObject#\n     */\n    get pivot()\n    {\n        return this.transform.pivot;\n    }\n\n    /**\n     * Copies the point to the pivot of the object.\n     *\n     * @param {PIXI.Point} value - The value to set to.\n     */\n    set pivot(value)\n    {\n        this.transform.pivot.copy(value);\n    }\n\n    /**\n     * The skew factor for the object in radians.\n     * Assignment by value since pixi-v4.\n     *\n     * @member {PIXI.ObservablePoint}\n     * @memberof PIXI.DisplayObject#\n     */\n    get skew()\n    {\n        return this.transform.skew;\n    }\n\n    /**\n     * Copies the point to the skew of the object.\n     *\n     * @param {PIXI.Point} value - The value to set to.\n     */\n    set skew(value)\n    {\n        this.transform.skew.copy(value);\n    }\n\n    /**\n     * The rotation of the object in radians.\n     *\n     * @member {number}\n     * @memberof PIXI.DisplayObject#\n     */\n    get rotation()\n    {\n        return this.transform.rotation;\n    }\n\n    /**\n     * Sets the rotation of the object.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set rotation(value)\n    {\n        this.transform.rotation = value;\n    }\n\n    /**\n     * Indicates if the object is globally visible.\n     *\n     * @member {boolean}\n     * @memberof PIXI.DisplayObject#\n     * @readonly\n     */\n    get worldVisible()\n    {\n        let item = this;\n\n        do\n        {\n            if (!item.visible)\n            {\n                return false;\n            }\n\n            item = item.parent;\n        } while (item);\n\n        return true;\n    }\n\n    /**\n     * Sets a mask for the displayObject. A mask is an object that limits the visibility of an\n     * object to the shape of the mask applied to it. In PIXI a regular mask must be a\n     * PIXI.Graphics or a PIXI.Sprite object. This allows for much faster masking in canvas as it\n     * utilises shape clipping. To remove a mask, set this property to null.\n     *\n     * @todo For the moment, PIXI.CanvasRenderer doesn't support PIXI.Sprite as mask.\n     *\n     * @member {PIXI.Graphics|PIXI.Sprite}\n     * @memberof PIXI.DisplayObject#\n     */\n    get mask()\n    {\n        return this._mask;\n    }\n\n    /**\n     * Sets the mask.\n     *\n     * @param {PIXI.Graphics|PIXI.Sprite} value - The value to set to.\n     */\n    set mask(value)\n    {\n        if (this._mask)\n        {\n            this._mask.renderable = true;\n        }\n\n        this._mask = value;\n\n        if (this._mask)\n        {\n            this._mask.renderable = false;\n        }\n    }\n\n    /**\n     * Sets the filters for the displayObject.\n     * * IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\n     * To remove filters simply set this property to 'null'\n     *\n     * @member {PIXI.Filter[]}\n     * @memberof PIXI.DisplayObject#\n     */\n    get filters()\n    {\n        return this._filters && this._filters.slice();\n    }\n\n    /**\n     * Shallow copies the array to the filters of the object.\n     *\n     * @param {PIXI.Filter[]} value - The filters to set.\n     */\n    set filters(value)\n    {\n        this._filters = value && value.slice();\n    }\n}\n\n// performance increase to avoid using call.. (10x faster)\nDisplayObject.prototype.displayObjectUpdateTransform = DisplayObject.prototype.updateTransform;\n","import { removeItems } from '../utils';\nimport DisplayObject from './DisplayObject';\n\n/**\n * A Container represents a collection of display objects.\n * It is the base class of all display objects that act as a container for other objects.\n *\n *```js\n * let container = new PIXI.Container();\n * container.addChild(sprite);\n * ```\n *\n * @class\n * @extends PIXI.DisplayObject\n * @memberof PIXI\n */\nexport default class Container extends DisplayObject\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * The array of children of this container.\n         *\n         * @member {PIXI.DisplayObject[]}\n         * @readonly\n         */\n        this.children = [];\n    }\n\n    /**\n     * Overridable method that can be used by Container subclasses whenever the children array is modified\n     *\n     * @private\n     */\n    onChildrenChange()\n    {\n        /* empty */\n    }\n\n    /**\n     * Adds one or more children to the container.\n     *\n     * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\n     *\n     * @param {...PIXI.DisplayObject} child - The DisplayObject(s) to add to the container\n     * @return {PIXI.DisplayObject} The first child that was added.\n     */\n    addChild(child)\n    {\n        const argumentsLength = arguments.length;\n\n        // if there is only one argument we can bypass looping through the them\n        if (argumentsLength > 1)\n        {\n            // loop through the arguments property and add all children\n            // use it the right way (.length and [i]) so that this function can still be optimised by JS runtimes\n            for (let i = 0; i < argumentsLength; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            // if the child has a parent then lets remove it as Pixi objects can only exist in one place\n            if (child.parent)\n            {\n                child.parent.removeChild(child);\n            }\n\n            child.parent = this;\n\n            // ensure a transform will be recalculated..\n            this.transform._parentID = -1;\n            this._boundsID++;\n\n            this.children.push(child);\n\n            // TODO - lets either do all callbacks or all events.. not both!\n            this.onChildrenChange(this.children.length - 1);\n            child.emit('added', this);\n        }\n\n        return child;\n    }\n\n    /**\n     * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown\n     *\n     * @param {PIXI.DisplayObject} child - The child to add\n     * @param {number} index - The index to place the child in\n     * @return {PIXI.DisplayObject} The child that was added.\n     */\n    addChildAt(child, index)\n    {\n        if (index < 0 || index > this.children.length)\n        {\n            throw new Error(`${child}addChildAt: The index ${index} supplied is out of bounds ${this.children.length}`);\n        }\n\n        if (child.parent)\n        {\n            child.parent.removeChild(child);\n        }\n\n        child.parent = this;\n\n        this.children.splice(index, 0, child);\n\n        // TODO - lets either do all callbacks or all events.. not both!\n        this.onChildrenChange(index);\n        child.emit('added', this);\n\n        return child;\n    }\n\n    /**\n     * Swaps the position of 2 Display Objects within this container.\n     *\n     * @param {PIXI.DisplayObject} child - First display object to swap\n     * @param {PIXI.DisplayObject} child2 - Second display object to swap\n     */\n    swapChildren(child, child2)\n    {\n        if (child === child2)\n        {\n            return;\n        }\n\n        const index1 = this.getChildIndex(child);\n        const index2 = this.getChildIndex(child2);\n\n        this.children[index1] = child2;\n        this.children[index2] = child;\n        this.onChildrenChange(index1 < index2 ? index1 : index2);\n    }\n\n    /**\n     * Returns the index position of a child DisplayObject instance\n     *\n     * @param {PIXI.DisplayObject} child - The DisplayObject instance to identify\n     * @return {number} The index position of the child display object to identify\n     */\n    getChildIndex(child)\n    {\n        const index = this.children.indexOf(child);\n\n        if (index === -1)\n        {\n            throw new Error('The supplied DisplayObject must be a child of the caller');\n        }\n\n        return index;\n    }\n\n    /**\n     * Changes the position of an existing child in the display object container\n     *\n     * @param {PIXI.DisplayObject} child - The child DisplayObject instance for which you want to change the index number\n     * @param {number} index - The resulting index number for the child display object\n     */\n    setChildIndex(child, index)\n    {\n        if (index < 0 || index >= this.children.length)\n        {\n            throw new Error('The supplied index is out of bounds');\n        }\n\n        const currentIndex = this.getChildIndex(child);\n\n        removeItems(this.children, currentIndex, 1); // remove from old position\n        this.children.splice(index, 0, child); // add at new position\n        this.onChildrenChange(index);\n    }\n\n    /**\n     * Returns the child at the specified index\n     *\n     * @param {number} index - The index to get the child at\n     * @return {PIXI.DisplayObject} The child at the given index, if any.\n     */\n    getChildAt(index)\n    {\n        if (index < 0 || index >= this.children.length)\n        {\n            throw new Error(`getChildAt: Index (${index}) does not exist.`);\n        }\n\n        return this.children[index];\n    }\n\n    /**\n     * Removes one or more children from the container.\n     *\n     * @param {...PIXI.DisplayObject} child - The DisplayObject(s) to remove\n     * @return {PIXI.DisplayObject} The first child that was removed.\n     */\n    removeChild(child)\n    {\n        const argumentsLength = arguments.length;\n\n        // if there is only one argument we can bypass looping through the them\n        if (argumentsLength > 1)\n        {\n            // loop through the arguments property and add all children\n            // use it the right way (.length and [i]) so that this function can still be optimised by JS runtimes\n            for (let i = 0; i < argumentsLength; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            const index = this.children.indexOf(child);\n\n            if (index === -1) return null;\n\n            child.parent = null;\n            removeItems(this.children, index, 1);\n\n            // ensure a transform will be recalculated..\n            this.transform._parentID = -1;\n            this._boundsID++;\n\n            // TODO - lets either do all callbacks or all events.. not both!\n            this.onChildrenChange(index);\n            child.emit('removed', this);\n        }\n\n        return child;\n    }\n\n    /**\n     * Removes a child from the specified index position.\n     *\n     * @param {number} index - The index to get the child from\n     * @return {PIXI.DisplayObject} The child that was removed.\n     */\n    removeChildAt(index)\n    {\n        const child = this.getChildAt(index);\n\n        child.parent = null;\n        removeItems(this.children, index, 1);\n\n        // TODO - lets either do all callbacks or all events.. not both!\n        this.onChildrenChange(index);\n        child.emit('removed', this);\n\n        return child;\n    }\n\n    /**\n     * Removes all children from this container that are within the begin and end indexes.\n     *\n     * @param {number} [beginIndex=0] - The beginning position.\n     * @param {number} [endIndex=this.children.length] - The ending position. Default value is size of the container.\n     * @returns {DisplayObject[]} List of removed children\n     */\n    removeChildren(beginIndex = 0, endIndex)\n    {\n        const begin = beginIndex;\n        const end = typeof endIndex === 'number' ? endIndex : this.children.length;\n        const range = end - begin;\n        let removed;\n\n        if (range > 0 && range <= end)\n        {\n            removed = this.children.splice(begin, range);\n\n            for (let i = 0; i < removed.length; ++i)\n            {\n                removed[i].parent = null;\n            }\n\n            this.onChildrenChange(beginIndex);\n\n            for (let i = 0; i < removed.length; ++i)\n            {\n                removed[i].emit('removed', this);\n            }\n\n            return removed;\n        }\n        else if (range === 0 && this.children.length === 0)\n        {\n            return [];\n        }\n\n        throw new RangeError('removeChildren: numeric values are outside the acceptable range.');\n    }\n\n    /**\n     * Updates the transform on all children of this container for rendering\n     *\n     * @private\n     */\n    updateTransform()\n    {\n        this._boundsID++;\n\n        this.transform.updateTransform(this.parent.transform);\n\n        // TODO: check render flags, how to process stuff here\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n        for (let i = 0, j = this.children.length; i < j; ++i)\n        {\n            const child = this.children[i];\n\n            if (child.visible)\n            {\n                child.updateTransform();\n            }\n        }\n    }\n\n    /**\n     * Recalculates the bounds of the container.\n     *\n     */\n    calculateBounds()\n    {\n        this._bounds.clear();\n\n        this._calculateBounds();\n\n        for (let i = 0; i < this.children.length; i++)\n        {\n            const child = this.children[i];\n\n            if (!child.visible || !child.renderable)\n            {\n                continue;\n            }\n\n            child.calculateBounds();\n\n            // TODO: filter+mask, need to mask both somehow\n            if (child._mask)\n            {\n                child._mask.calculateBounds();\n                this._bounds.addBoundsMask(child._bounds, child._mask._bounds);\n            }\n            else if (child.filterArea)\n            {\n                this._bounds.addBoundsArea(child._bounds, child.filterArea);\n            }\n            else\n            {\n                this._bounds.addBounds(child._bounds);\n            }\n        }\n\n        this._lastBoundsID = this._boundsID;\n    }\n\n    /**\n     * Recalculates the bounds of the object. Override this to\n     * calculate the bounds of the specific object (not including children).\n     *\n     */\n    _calculateBounds()\n    {\n        // FILL IN//\n    }\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n    renderWebGL(renderer)\n    {\n        // if the object is not visible or the alpha is 0 then no need to render this element\n        if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n        {\n            return;\n        }\n\n        // do a quick check to see if this element has a mask or a filter.\n        if (this._mask || this._filters)\n        {\n            this.renderAdvancedWebGL(renderer);\n        }\n        else\n        {\n            this._renderWebGL(renderer);\n\n            // simple render children!\n            for (let i = 0, j = this.children.length; i < j; ++i)\n            {\n                this.children[i].renderWebGL(renderer);\n            }\n        }\n    }\n\n    /**\n     * Render the object using the WebGL renderer and advanced features.\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n    renderAdvancedWebGL(renderer)\n    {\n        renderer.flush();\n\n        const filters = this._filters;\n        const mask = this._mask;\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (filters)\n        {\n            if (!this._enabledFilters)\n            {\n                this._enabledFilters = [];\n            }\n\n            this._enabledFilters.length = 0;\n\n            for (let i = 0; i < filters.length; i++)\n            {\n                if (filters[i].enabled)\n                {\n                    this._enabledFilters.push(filters[i]);\n                }\n            }\n\n            if (this._enabledFilters.length)\n            {\n                renderer.filterManager.pushFilter(this, this._enabledFilters);\n            }\n        }\n\n        if (mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // now loop through the children and make sure they get rendered\n        for (let i = 0, j = this.children.length; i < j; i++)\n        {\n            this.children[i].renderWebGL(renderer);\n        }\n\n        renderer.flush();\n\n        if (mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (filters && this._enabledFilters && this._enabledFilters.length)\n        {\n            renderer.filterManager.popFilter();\n        }\n    }\n\n    /**\n     * To be overridden by the subclasses.\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n    _renderWebGL(renderer) // eslint-disable-line no-unused-vars\n    {\n        // this is where content itself gets rendered...\n    }\n\n    /**\n     * To be overridden by the subclass\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n    _renderCanvas(renderer) // eslint-disable-line no-unused-vars\n    {\n        // this is where content itself gets rendered...\n    }\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n    renderCanvas(renderer)\n    {\n        // if not visible or the alpha is 0 then no need to render this\n        if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n        {\n            return;\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this._mask);\n        }\n\n        this._renderCanvas(renderer);\n        for (let i = 0, j = this.children.length; i < j; ++i)\n        {\n            this.children[i].renderCanvas(renderer);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(renderer);\n        }\n    }\n\n    /**\n     * Removes all internal references and listeners as well as removes children from the display list.\n     * Do not use a Container after calling `destroy`.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'options' will be passed on to those calls.\n     */\n    destroy(options)\n    {\n        super.destroy();\n\n        const destroyChildren = typeof options === 'boolean' ? options : options && options.children;\n\n        const oldChildren = this.removeChildren(0, this.children.length);\n\n        if (destroyChildren)\n        {\n            for (let i = 0; i < oldChildren.length; ++i)\n            {\n                oldChildren[i].destroy(options);\n            }\n        }\n    }\n\n    /**\n     * The width of the Container, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Container#\n     */\n    get width()\n    {\n        return this.scale.x * this.getLocalBounds().width;\n    }\n\n    /**\n     * Sets the width of the container by modifying the scale.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set width(value)\n    {\n        const width = this.getLocalBounds().width;\n\n        if (width !== 0)\n        {\n            this.scale.x = value / width;\n        }\n        else\n        {\n            this.scale.x = 1;\n        }\n\n        this._width = value;\n    }\n\n    /**\n     * The height of the Container, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Container#\n     */\n    get height()\n    {\n        return this.scale.y * this.getLocalBounds().height;\n    }\n\n    /**\n     * Sets the height of the container by modifying the scale.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set height(value)\n    {\n        const height = this.getLocalBounds().height;\n\n        if (height !== 0)\n        {\n            this.scale.y = value / height;\n        }\n        else\n        {\n            this.scale.y = 1;\n        }\n\n        this._height = value;\n    }\n}\n\n// performance increase to avoid using call.. (10x faster)\nContainer.prototype.containerUpdateTransform = Container.prototype.updateTransform;\n","import _url from 'url';\n\nlet tempAnchor;\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nexport default function determineCrossOrigin(url, loc = window.location)\n{\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0)\n    {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || window.location;\n\n    if (!tempAnchor)\n    {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    url = _url.parse(tempAnchor.href);\n\n    const samePort = (!url.port && loc.port === '') || (url.port === loc.port);\n\n    // if cross origin\n    if (url.hostname !== loc.hostname || !samePort || url.protocol !== loc.protocol)\n    {\n        return 'anonymous';\n    }\n\n    return '';\n}\n","/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n\"use strict\"; \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n","import {\n    uid, getUrlFileExtension, decomposeDataUri, getSvgSize,\n    getResolutionOfUrl, BaseTextureCache, TextureCache,\n} from '../utils';\nimport settings from '../settings';\nimport EventEmitter from 'eventemitter3';\nimport determineCrossOrigin from '../utils/determineCrossOrigin';\nimport bitTwiddle from 'bit-twiddle';\n\nconst { RESOLUTION, MIPMAP_TEXTURES, SCALE_MODE, WRAP_MODE } = settings;\n\n/**\n * A texture stores the information that represents an image. All textures have a base texture.\n *\n * @class\n * @extends EventEmitter\n * @memberof PIXI\n */\nexport default class BaseTexture extends EventEmitter\n{\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} [source] - the source object of the texture.\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture\n     */\n    constructor(source, scaleMode, resolution)\n    {\n        super();\n\n        this.uid = uid();\n\n        this.touched = 0;\n\n        /**\n         * The resolution / device pixel ratio of the texture\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.resolution = resolution || RESOLUTION;\n\n        /**\n         * The width of the base texture set when the image has loaded\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.width = 100;\n\n        /**\n         * The height of the base texture set when the image has loaded\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.height = 100;\n\n        // TODO docs\n        // used to store the actual dimensions of the source\n        /**\n         * Used to store the actual width of the source of this texture\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.realWidth = 100;\n        /**\n         * Used to store the actual height of the source of this texture\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.realHeight = 100;\n\n        /**\n         * The scale mode to apply when scaling this texture\n         *\n         * @member {number}\n         * @default PIXI.settings.SCALE_MODE\n         * @see PIXI.SCALE_MODES\n         */\n        this.scaleMode = scaleMode || SCALE_MODE;\n\n        /**\n         * Set to true once the base texture has successfully loaded.\n         *\n         * This is never true if the underlying source fails to load or has no texture data.\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        this.hasLoaded = false;\n\n        /**\n         * Set to true if the source is currently loading.\n         *\n         * If an Image source is loading the 'loaded' or 'error' event will be\n         * dispatched when the operation ends. An underyling source that is\n         * immediately-available bypasses loading entirely.\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        this.isLoading = false;\n\n        /**\n         * The image source that is used to create the texture.\n         *\n         * TODO: Make this a setter that calls loadSource();\n         *\n         * @readonly\n         * @member {HTMLImageElement|HTMLCanvasElement}\n         */\n        this.source = null; // set in loadSource, if at all\n\n        /**\n         * The image source that is used to create the texture. This is used to\n         * store the original Svg source when it is replaced with a canvas element.\n         *\n         * TODO: Currently not in use but could be used when re-scaling svg.\n         *\n         * @readonly\n         * @member {Image}\n         */\n        this.origSource = null; // set in loadSvg, if at all\n\n        /**\n         * Type of image defined in source, eg. `png` or `svg`\n         *\n         * @readonly\n         * @member {string}\n         */\n        this.imageType = null; // set in updateImageType\n\n        /**\n         * Scale for source image. Used with Svg images to scale them before rasterization.\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.sourceScale = 1.0;\n\n        /**\n         * Controls if RGB channels should be pre-multiplied by Alpha  (WebGL only)\n         * All blend modes, and shaders written for default value. Change it on your own risk.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        this.premultipliedAlpha = true;\n\n        /**\n         * The image url of the texture\n         *\n         * @member {string}\n         */\n        this.imageUrl = null;\n\n        /**\n         * Whether or not the texture is a power of two, try to use power of two textures as much\n         * as you can\n         *\n         * @private\n         * @member {boolean}\n         */\n        this.isPowerOfTwo = false;\n\n        // used for webGL\n\n        /**\n         *\n         * Set this to true if a mipmap of this texture needs to be generated. This value needs\n         * to be set before the texture is used\n         * Also the texture must be a power of two size to work\n         *\n         * @member {boolean}\n         * @see PIXI.MIPMAP_TEXTURES\n         */\n        this.mipmap = MIPMAP_TEXTURES;\n\n        /**\n         *\n         * WebGL Texture wrap mode\n         *\n         * @member {number}\n         * @see PIXI.WRAP_MODES\n         */\n        this.wrapMode = WRAP_MODE;\n\n        /**\n         * A map of renderer IDs to webgl textures\n         *\n         * @private\n         * @member {object<number, WebGLTexture>}\n         */\n        this._glTextures = {};\n\n        this._enabled = 0;\n        this._virtalBoundId = -1;\n\n        // if no source passed don't try to load\n        if (source)\n        {\n            this.loadSource(source);\n        }\n\n        /**\n         * Fired when a not-immediately-available source finishes loading.\n         *\n         * @protected\n         * @event loaded\n         * @memberof PIXI.BaseTexture#\n         */\n\n        /**\n         * Fired when a not-immediately-available source fails to load.\n         *\n         * @protected\n         * @event error\n         * @memberof PIXI.BaseTexture#\n         */\n    }\n\n    /**\n     * Updates the texture on all the webgl renderers, this also assumes the src has changed.\n     *\n     * @fires update\n     */\n    update()\n    {\n        // Svg size is handled during load\n        if (this.imageType !== 'svg')\n        {\n            this.realWidth = this.source.naturalWidth || this.source.videoWidth || this.source.width;\n            this.realHeight = this.source.naturalHeight || this.source.videoHeight || this.source.height;\n\n            this.width = this.realWidth / this.resolution;\n            this.height = this.realHeight / this.resolution;\n\n            this.isPowerOfTwo = bitTwiddle.isPow2(this.realWidth) && bitTwiddle.isPow2(this.realHeight);\n        }\n\n        this.emit('update', this);\n    }\n\n    /**\n     * Load a source.\n     *\n     * If the source is not-immediately-available, such as an image that needs to be\n     * downloaded, then the 'loaded' or 'error' event will be dispatched in the future\n     * and `hasLoaded` will remain false after this call.\n     *\n     * The logic state after calling `loadSource` directly or indirectly (eg. `fromImage`, `new BaseTexture`) is:\n     *\n     *     if (texture.hasLoaded) {\n     *        // texture ready for use\n     *     } else if (texture.isLoading) {\n     *        // listen to 'loaded' and/or 'error' events on texture\n     *     } else {\n     *        // not loading, not going to load UNLESS the source is reloaded\n     *        // (it may still make sense to listen to the events)\n     *     }\n     *\n     * @protected\n     * @param {HTMLImageElement|HTMLCanvasElement} source - the source object of the texture.\n     */\n    loadSource(source)\n    {\n        const wasLoading = this.isLoading;\n\n        this.hasLoaded = false;\n        this.isLoading = false;\n\n        if (wasLoading && this.source)\n        {\n            this.source.onload = null;\n            this.source.onerror = null;\n        }\n\n        const firstSourceLoaded = !this.source;\n\n        this.source = source;\n\n        // Apply source if loaded. Otherwise setup appropriate loading monitors.\n        if (((source.src && source.complete) || source.getContext) && source.width && source.height)\n        {\n            this._updateImageType();\n\n            if (this.imageType === 'svg')\n            {\n                this._loadSvgSource();\n            }\n            else\n            {\n                this._sourceLoaded();\n            }\n\n            if (firstSourceLoaded)\n            {\n                // send loaded event if previous source was null and we have been passed a pre-loaded IMG element\n                this.emit('loaded', this);\n            }\n        }\n        else if (!source.getContext)\n        {\n            // Image fail / not ready\n            this.isLoading = true;\n\n            const scope = this;\n\n            source.onload = () =>\n            {\n                scope._updateImageType();\n                source.onload = null;\n                source.onerror = null;\n\n                if (!scope.isLoading)\n                {\n                    return;\n                }\n\n                scope.isLoading = false;\n                scope._sourceLoaded();\n\n                if (scope.imageType === 'svg')\n                {\n                    scope._loadSvgSource();\n\n                    return;\n                }\n\n                scope.emit('loaded', scope);\n            };\n\n            source.onerror = () =>\n            {\n                source.onload = null;\n                source.onerror = null;\n\n                if (!scope.isLoading)\n                {\n                    return;\n                }\n\n                scope.isLoading = false;\n                scope.emit('error', scope);\n            };\n\n            // Per http://www.w3.org/TR/html5/embedded-content-0.html#the-img-element\n            //   \"The value of `complete` can thus change while a script is executing.\"\n            // So complete needs to be re-checked after the callbacks have been added..\n            // NOTE: complete will be true if the image has no src so best to check if the src is set.\n            if (source.complete && source.src)\n            {\n                // ..and if we're complete now, no need for callbacks\n                source.onload = null;\n                source.onerror = null;\n\n                if (scope.imageType === 'svg')\n                {\n                    scope._loadSvgSource();\n\n                    return;\n                }\n\n                this.isLoading = false;\n\n                if (source.width && source.height)\n                {\n                    this._sourceLoaded();\n\n                    // If any previous subscribers possible\n                    if (wasLoading)\n                    {\n                        this.emit('loaded', this);\n                    }\n                }\n                // If any previous subscribers possible\n                else if (wasLoading)\n                {\n                    this.emit('error', this);\n                }\n            }\n        }\n    }\n\n    /**\n     * Updates type of the source image.\n     */\n    _updateImageType()\n    {\n        if (!this.imageUrl)\n        {\n            return;\n        }\n\n        const dataUri = decomposeDataUri(this.imageUrl);\n        let imageType;\n\n        if (dataUri && dataUri.mediaType === 'image')\n        {\n            // Check for subType validity\n            const firstSubType = dataUri.subType.split('+')[0];\n\n            imageType = getUrlFileExtension(`.${firstSubType}`);\n\n            if (!imageType)\n            {\n                throw new Error('Invalid image type in data URI.');\n            }\n        }\n        else\n        {\n            imageType = getUrlFileExtension(this.imageUrl);\n\n            if (!imageType)\n            {\n                imageType = 'png';\n            }\n        }\n\n        this.imageType = imageType;\n    }\n\n    /**\n     * Checks if `source` is an SVG image and whether it's loaded via a URL or a data URI. Then calls\n     * `_loadSvgSourceUsingDataUri` or `_loadSvgSourceUsingXhr`.\n     */\n    _loadSvgSource()\n    {\n        if (this.imageType !== 'svg')\n        {\n            // Do nothing if source is not svg\n            return;\n        }\n\n        const dataUri = decomposeDataUri(this.imageUrl);\n\n        if (dataUri)\n        {\n            this._loadSvgSourceUsingDataUri(dataUri);\n        }\n        else\n        {\n            // We got an URL, so we need to do an XHR to check the svg size\n            this._loadSvgSourceUsingXhr();\n        }\n    }\n\n    /**\n     * Reads an SVG string from data URI and then calls `_loadSvgSourceUsingString`.\n     *\n     * @param {string} dataUri - The data uri to load from.\n     */\n    _loadSvgSourceUsingDataUri(dataUri)\n    {\n        let svgString;\n\n        if (dataUri.encoding === 'base64')\n        {\n            if (!atob)\n            {\n                throw new Error('Your browser doesn\\'t support base64 conversions.');\n            }\n            svgString = atob(dataUri.data);\n        }\n        else\n        {\n            svgString = dataUri.data;\n        }\n\n        this._loadSvgSourceUsingString(svgString);\n    }\n\n    /**\n     * Loads an SVG string from `imageUrl` using XHR and then calls `_loadSvgSourceUsingString`.\n     */\n    _loadSvgSourceUsingXhr()\n    {\n        const svgXhr = new XMLHttpRequest();\n\n        // This throws error on IE, so SVG Document can't be used\n        // svgXhr.responseType = 'document';\n\n        // This is not needed since we load the svg as string (breaks IE too)\n        // but overrideMimeType() can be used to force the response to be parsed as XML\n        // svgXhr.overrideMimeType('image/svg+xml');\n\n        svgXhr.onload = () =>\n        {\n            if (svgXhr.readyState !== svgXhr.DONE || svgXhr.status !== 200)\n            {\n                throw new Error('Failed to load SVG using XHR.');\n            }\n\n            this._loadSvgSourceUsingString(svgXhr.response);\n        };\n\n        svgXhr.onerror = () => this.emit('error', this);\n\n        svgXhr.open('GET', this.imageUrl, true);\n        svgXhr.send();\n    }\n\n    /**\n     * Loads texture using an SVG string. The original SVG Image is stored as `origSource` and the\n     * created canvas is the new `source`. The SVG is scaled using `sourceScale`. Called by\n     * `_loadSvgSourceUsingXhr` or `_loadSvgSourceUsingDataUri`.\n     *\n     * @param  {string} svgString SVG source as string\n     *\n     * @fires loaded\n     */\n    _loadSvgSourceUsingString(svgString)\n    {\n        const svgSize = getSvgSize(svgString);\n\n        const svgWidth = svgSize.width;\n        const svgHeight = svgSize.height;\n\n        if (!svgWidth || !svgHeight)\n        {\n            throw new Error('The SVG image must have width and height defined (in pixels), canvas API needs them.');\n        }\n\n        // Scale realWidth and realHeight\n        this.realWidth = Math.round(svgWidth * this.sourceScale);\n        this.realHeight = Math.round(svgHeight * this.sourceScale);\n\n        this.width = this.realWidth / this.resolution;\n        this.height = this.realHeight / this.resolution;\n\n        // Check pow2 after scale\n        this.isPowerOfTwo = bitTwiddle.isPow2(this.realWidth) && bitTwiddle.isPow2(this.realHeight);\n\n        // Create a canvas element\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.realWidth;\n        canvas.height = this.realHeight;\n        canvas._pixiId = `canvas_${uid()}`;\n\n        // Draw the Svg to the canvas\n        canvas\n            .getContext('2d')\n            .drawImage(this.source, 0, 0, svgWidth, svgHeight, 0, 0, this.realWidth, this.realHeight);\n\n        // Replace the original source image with the canvas\n        this.origSource = this.source;\n        this.source = canvas;\n\n        // Add also the canvas in cache (destroy clears by `imageUrl` and `source._pixiId`)\n        BaseTextureCache[canvas._pixiId] = this;\n\n        this.isLoading = false;\n        this._sourceLoaded();\n        this.emit('loaded', this);\n    }\n\n    /**\n     * Used internally to update the width, height, and some other tracking vars once\n     * a source has successfully loaded.\n     *\n     * @private\n     */\n    _sourceLoaded()\n    {\n        this.hasLoaded = true;\n        this.update();\n    }\n\n    /**\n     * Destroys this base texture\n     *\n     */\n    destroy()\n    {\n        if (this.imageUrl)\n        {\n            delete BaseTextureCache[this.imageUrl];\n            delete TextureCache[this.imageUrl];\n\n            this.imageUrl = null;\n\n            if (!navigator.isCocoonJS)\n            {\n                this.source.src = '';\n            }\n        }\n        // An svg source has both `imageUrl` and `__pixiId`, so no `else if` here\n        if (this.source && this.source._pixiId)\n        {\n            delete BaseTextureCache[this.source._pixiId];\n        }\n\n        this.source = null;\n\n        this.dispose();\n    }\n\n    /**\n     * Frees the texture from WebGL memory without destroying this texture object.\n     * This means you can still use the texture later which will upload it to GPU\n     * memory again.\n     *\n     */\n    dispose()\n    {\n        this.emit('dispose', this);\n    }\n\n    /**\n     * Changes the source image of the texture.\n     * The original source must be an Image element.\n     *\n     * @param {string} newSrc - the path of the image\n     */\n    updateSourceImage(newSrc)\n    {\n        this.source.src = newSrc;\n\n        this.loadSource(this.source);\n    }\n\n    /**\n     * Helper function that creates a base texture from the given image url.\n     * If the image is not in the base texture cache it will be created and loaded.\n     *\n     * @static\n     * @param {string} imageUrl - The image url of the texture\n     * @param {boolean} [crossorigin=(auto)] - Should use anonymous CORS? Defaults to true if the URL is not a data-URI.\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [sourceScale=(auto)] - Scale for the original image, used with Svg images.\n     * @return {PIXI.BaseTexture} The new base texture.\n     */\n    static fromImage(imageUrl, crossorigin, scaleMode, sourceScale)\n    {\n        let baseTexture = BaseTextureCache[imageUrl];\n\n        if (!baseTexture)\n        {\n            // new Image() breaks tex loading in some versions of Chrome.\n            // See https://code.google.com/p/chromium/issues/detail?id=238071\n            const image = new Image();// document.createElement('img');\n\n            if (crossorigin === undefined && imageUrl.indexOf('data:') !== 0)\n            {\n                image.crossOrigin = determineCrossOrigin(imageUrl);\n            }\n\n            baseTexture = new BaseTexture(image, scaleMode);\n            baseTexture.imageUrl = imageUrl;\n\n            if (sourceScale)\n            {\n                baseTexture.sourceScale = sourceScale;\n            }\n\n            // if there is an @2x at the end of the url we are going to assume its a highres image\n            baseTexture.resolution = getResolutionOfUrl(imageUrl);\n\n            image.src = imageUrl; // Setting this triggers load\n\n            BaseTextureCache[imageUrl] = baseTexture;\n        }\n\n        return baseTexture;\n    }\n\n    /**\n     * Helper function that creates a base texture from the given canvas element.\n     *\n     * @static\n     * @param {HTMLCanvasElement} canvas - The canvas element source of the texture\n     * @param {number} scaleMode - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.BaseTexture} The new base texture.\n     */\n    static fromCanvas(canvas, scaleMode)\n    {\n        if (!canvas._pixiId)\n        {\n            canvas._pixiId = `canvas_${uid()}`;\n        }\n\n        let baseTexture = BaseTextureCache[canvas._pixiId];\n\n        if (!baseTexture)\n        {\n            baseTexture = new BaseTexture(canvas, scaleMode);\n            BaseTextureCache[canvas._pixiId] = baseTexture;\n        }\n\n        return baseTexture;\n    }\n}\n","import BaseTexture from './BaseTexture';\nimport settings from '../settings';\n\nconst { RESOLUTION, SCALE_MODE } = settings;\n\n/**\n * A BaseRenderTexture is a special texture that allows any Pixi display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a BaseRenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A BaseRenderTexture takes a snapshot of any Display Object given to its render method. The position\n * and rotation of the given Display Objects is ignored. For example:\n *\n * ```js\n * let renderer = PIXI.autoDetectRenderer(1024, 1024, { view: canvas, ratio: 1 });\n * let baseRenderTexture = new PIXI.BaseRenderTexture(renderer, 800, 600);\n * let sprite = PIXI.Sprite.fromImage(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchor.x = 0.5;\n * sprite.anchor.y = 0.5;\n *\n * baseRenderTexture.render(sprite);\n * ```\n *\n * The Sprite in this case will be rendered to a position of 0,0. To render this sprite at its actual\n * position a Container should be used:\n *\n * ```js\n * let doc = new PIXI.Container();\n *\n * doc.addChild(sprite);\n *\n * let baseRenderTexture = new PIXI.BaseRenderTexture(100, 100);\n * let renderTexture = new PIXI.RenderTexture(baseRenderTexture);\n *\n * renderer.render(doc, renderTexture);  // Renders to center of RenderTexture\n * ```\n *\n * @class\n * @extends PIXI.BaseTexture\n * @memberof PIXI\n */\nexport default class BaseRenderTexture extends BaseTexture\n{\n    /**\n     * @param {number} [width=100] - The width of the base render texture\n     * @param {number} [height=100] - The height of the base render texture\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture being generated\n     */\n    constructor(width = 100, height = 100, scaleMode, resolution)\n    {\n        super(null, scaleMode);\n\n        this.resolution = resolution || RESOLUTION;\n\n        this.width = width;\n        this.height = height;\n\n        this.realWidth = this.width * this.resolution;\n        this.realHeight = this.height * this.resolution;\n\n        this.scaleMode = scaleMode || SCALE_MODE;\n        this.hasLoaded = true;\n\n        /**\n         * A map of renderer IDs to webgl renderTargets\n         *\n         * @private\n         * @member {object<number, WebGLTexture>}\n         */\n        this._glRenderTargets = {};\n\n        /**\n         * A reference to the canvas render target (we only need one as this can be shared across renderers)\n         *\n         * @private\n         * @member {object<number, WebGLTexture>}\n         */\n        this._canvasRenderTarget = null;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        this.valid = false;\n    }\n\n    /**\n     * Resizes the BaseRenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     */\n    resize(width, height)\n    {\n        if (width === this.width && height === this.height)\n        {\n            return;\n        }\n\n        this.valid = (width > 0 && height > 0);\n\n        this.width = width;\n        this.height = height;\n\n        this.realWidth = this.width * this.resolution;\n        this.realHeight = this.height * this.resolution;\n\n        if (!this.valid)\n        {\n            return;\n        }\n\n        this.emit('update', this);\n    }\n\n    /**\n     * Destroys this texture\n     *\n     */\n    destroy()\n    {\n        super.destroy(true);\n        this.renderer = null;\n    }\n}\n","import BaseTexture from './BaseTexture';\nimport { uid, BaseTextureCache } from '../utils';\nimport * as ticker from '../ticker';\n\n/**\n * A texture of a [playing] Video.\n *\n * Video base textures mimic Pixi BaseTexture.from.... method in their creation process.\n *\n * This can be used in several ways, such as:\n *\n * ```js\n * let texture = PIXI.VideoBaseTexture.fromUrl('http://mydomain.com/video.mp4');\n *\n * let texture = PIXI.VideoBaseTexture.fromUrl({ src: 'http://mydomain.com/video.mp4', mime: 'video/mp4' });\n *\n * let texture = PIXI.VideoBaseTexture.fromUrls(['/video.webm', '/video.mp4']);\n *\n * let texture = PIXI.VideoBaseTexture.fromUrls([\n *     { src: '/video.webm', mime: 'video/webm' },\n *     { src: '/video.mp4', mime: 'video/mp4' }\n * ]);\n * ```\n *\n * See the [\"deus\" demo](http://www.goodboydigital.com/pixijs/examples/deus/).\n *\n * @class\n * @extends PIXI.BaseTexture\n * @memberof PIXI\n */\nexport default class VideoBaseTexture extends BaseTexture\n{\n    /**\n     * @param {HTMLVideoElement} source - Video source\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     */\n    constructor(source, scaleMode)\n    {\n        if (!source)\n        {\n            throw new Error('No video source element specified.');\n        }\n\n        // hook in here to check if video is already available.\n        // BaseTexture looks for a source.complete boolean, plus width & height.\n\n        if ((source.readyState === source.HAVE_ENOUGH_DATA || source.readyState === source.HAVE_FUTURE_DATA)\n            && source.width && source.height)\n        {\n            source.complete = true;\n        }\n\n        super(source, scaleMode);\n\n        this.width = source.videoWidth;\n        this.height = source.videoHeight;\n\n        this._autoUpdate = true;\n        this._isAutoUpdating = false;\n\n        /**\n         * When set to true will automatically play videos used by this texture once\n         * they are loaded. If false, it will not modify the playing state.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        this.autoPlay = true;\n\n        this.update = this.update.bind(this);\n        this._onCanPlay = this._onCanPlay.bind(this);\n\n        source.addEventListener('play', this._onPlayStart.bind(this));\n        source.addEventListener('pause', this._onPlayStop.bind(this));\n        this.hasLoaded = false;\n        this.__loaded = false;\n\n        if (!this._isSourceReady())\n        {\n            source.addEventListener('canplay', this._onCanPlay);\n            source.addEventListener('canplaythrough', this._onCanPlay);\n        }\n        else\n        {\n            this._onCanPlay();\n        }\n    }\n\n    /**\n     * Returns true if the underlying source is playing.\n     *\n     * @private\n     * @return {boolean} True if playing.\n     */\n    _isSourcePlaying()\n    {\n        const source = this.source;\n\n        return (source.currentTime > 0 && source.paused === false && source.ended === false && source.readyState > 2);\n    }\n\n    /**\n     * Returns true if the underlying source is ready for playing.\n     *\n     * @private\n     * @return {boolean} True if ready.\n     */\n    _isSourceReady()\n    {\n        return this.source.readyState === 3 || this.source.readyState === 4;\n    }\n\n    /**\n     * Runs the update loop when the video is ready to play\n     *\n     * @private\n     */\n    _onPlayStart()\n    {\n        // Just in case the video has not received its can play even yet..\n        if (!this.hasLoaded)\n        {\n            this._onCanPlay();\n        }\n\n        if (!this._isAutoUpdating && this.autoUpdate)\n        {\n            ticker.shared.add(this.update, this);\n            this._isAutoUpdating = true;\n        }\n    }\n\n    /**\n     * Fired when a pause event is triggered, stops the update loop\n     *\n     * @private\n     */\n    _onPlayStop()\n    {\n        if (this._isAutoUpdating)\n        {\n            ticker.shared.remove(this.update, this);\n            this._isAutoUpdating = false;\n        }\n    }\n\n    /**\n     * Fired when the video is loaded and ready to play\n     *\n     * @private\n     */\n    _onCanPlay()\n    {\n        this.hasLoaded = true;\n\n        if (this.source)\n        {\n            this.source.removeEventListener('canplay', this._onCanPlay);\n            this.source.removeEventListener('canplaythrough', this._onCanPlay);\n\n            this.width = this.source.videoWidth;\n            this.height = this.source.videoHeight;\n\n            // prevent multiple loaded dispatches..\n            if (!this.__loaded)\n            {\n                this.__loaded = true;\n                this.emit('loaded', this);\n            }\n\n            if (this._isSourcePlaying())\n            {\n                this._onPlayStart();\n            }\n            else if (this.autoPlay)\n            {\n                this.source.play();\n            }\n        }\n    }\n\n    /**\n     * Destroys this texture\n     *\n     */\n    destroy()\n    {\n        if (this._isAutoUpdating)\n        {\n            ticker.shared.remove(this.update, this);\n        }\n\n        if (this.source && this.source._pixiId)\n        {\n            delete BaseTextureCache[this.source._pixiId];\n            delete this.source._pixiId;\n        }\n\n        super.destroy();\n    }\n\n    /**\n     * Mimic Pixi BaseTexture.from.... method.\n     *\n     * @static\n     * @param {HTMLVideoElement} video - Video to create texture from\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.VideoBaseTexture} Newly created VideoBaseTexture\n     */\n    static fromVideo(video, scaleMode)\n    {\n        if (!video._pixiId)\n        {\n            video._pixiId = `video_${uid()}`;\n        }\n\n        let baseTexture = BaseTextureCache[video._pixiId];\n\n        if (!baseTexture)\n        {\n            baseTexture = new VideoBaseTexture(video, scaleMode);\n            BaseTextureCache[video._pixiId] = baseTexture;\n        }\n\n        return baseTexture;\n    }\n\n    /**\n     * Helper function that creates a new BaseTexture based on the given video element.\n     * This BaseTexture can then be used to create a texture\n     *\n     * @static\n     * @param {string|object|string[]|object[]} videoSrc - The URL(s) for the video.\n     * @param {string} [videoSrc.src] - One of the source urls for the video\n     * @param {string} [videoSrc.mime] - The mimetype of the video (e.g. 'video/mp4'). If not specified\n     *  the url's extension will be used as the second part of the mime type.\n     * @param {number} scaleMode - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.VideoBaseTexture} Newly created VideoBaseTexture\n     */\n    static fromUrl(videoSrc, scaleMode)\n    {\n        const video = document.createElement('video');\n\n        video.setAttribute('webkit-playsinline', '');\n        video.setAttribute('playsinline', '');\n\n        // array of objects or strings\n        if (Array.isArray(videoSrc))\n        {\n            for (let i = 0; i < videoSrc.length; ++i)\n            {\n                video.appendChild(createSource(videoSrc[i].src || videoSrc[i], videoSrc[i].mime));\n            }\n        }\n        // single object or string\n        else\n        {\n            video.appendChild(createSource(videoSrc.src || videoSrc, videoSrc.mime));\n        }\n\n        video.load();\n\n        return VideoBaseTexture.fromVideo(video, scaleMode);\n    }\n\n    /**\n     * Should the base texture automatically update itself, set to true by default\n     *\n     * @member {boolean}\n     * @memberof PIXI.VideoBaseTexture#\n     */\n    get autoUpdate()\n    {\n        return this._autoUpdate;\n    }\n\n    /**\n     * Sets autoUpdate property.\n     *\n     * @param {number} value - enable auto update or not\n     */\n    set autoUpdate(value)\n    {\n        if (value !== this._autoUpdate)\n        {\n            this._autoUpdate = value;\n\n            if (!this._autoUpdate && this._isAutoUpdating)\n            {\n                ticker.shared.remove(this.update, this);\n                this._isAutoUpdating = false;\n            }\n            else if (this._autoUpdate && !this._isAutoUpdating)\n            {\n                ticker.shared.add(this.update, this);\n                this._isAutoUpdating = true;\n            }\n        }\n    }\n}\n\nVideoBaseTexture.fromUrls = VideoBaseTexture.fromUrl;\n\nfunction createSource(path, type)\n{\n    if (!type)\n    {\n        type = `video/${path.substr(path.lastIndexOf('.') + 1)}`;\n    }\n\n    const source = document.createElement('source');\n\n    source.src = path;\n    source.type = type;\n\n    return source;\n}\n","import GroupD8 from '../math/GroupD8';\n\n/**\n * A standard object to store the Uvs of a texture\n *\n * @class\n * @private\n * @memberof PIXI\n */\nexport default class TextureUvs\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        this.x0 = 0;\n        this.y0 = 0;\n\n        this.x1 = 1;\n        this.y1 = 0;\n\n        this.x2 = 1;\n        this.y2 = 1;\n\n        this.x3 = 0;\n        this.y3 = 1;\n\n        this.uvsUint32 = new Uint32Array(4);\n    }\n\n    /**\n     * Sets the texture Uvs based on the given frame information.\n     *\n     * @private\n     * @param {PIXI.Rectangle} frame - The frame of the texture\n     * @param {PIXI.Rectangle} baseFrame - The base frame of the texture\n     * @param {number} rotate - Rotation of frame, see {@link PIXI.GroupD8}\n     */\n    set(frame, baseFrame, rotate)\n    {\n        const tw = baseFrame.width;\n        const th = baseFrame.height;\n\n        if (rotate)\n        {\n            // width and height div 2 div baseFrame size\n            const w2 = frame.width / 2 / tw;\n            const h2 = frame.height / 2 / th;\n\n            // coordinates of center\n            const cX = (frame.x / tw) + w2;\n            const cY = (frame.y / th) + h2;\n\n            rotate = GroupD8.add(rotate, GroupD8.NW); // NW is top-left corner\n            this.x0 = cX + (w2 * GroupD8.uX(rotate));\n            this.y0 = cY + (h2 * GroupD8.uY(rotate));\n\n            rotate = GroupD8.add(rotate, 2); // rotate 90 degrees clockwise\n            this.x1 = cX + (w2 * GroupD8.uX(rotate));\n            this.y1 = cY + (h2 * GroupD8.uY(rotate));\n\n            rotate = GroupD8.add(rotate, 2);\n            this.x2 = cX + (w2 * GroupD8.uX(rotate));\n            this.y2 = cY + (h2 * GroupD8.uY(rotate));\n\n            rotate = GroupD8.add(rotate, 2);\n            this.x3 = cX + (w2 * GroupD8.uX(rotate));\n            this.y3 = cY + (h2 * GroupD8.uY(rotate));\n        }\n        else\n        {\n            this.x0 = frame.x / tw;\n            this.y0 = frame.y / th;\n\n            this.x1 = (frame.x + frame.width) / tw;\n            this.y1 = frame.y / th;\n\n            this.x2 = (frame.x + frame.width) / tw;\n            this.y2 = (frame.y + frame.height) / th;\n\n            this.x3 = frame.x / tw;\n            this.y3 = (frame.y + frame.height) / th;\n        }\n\n        this.uvsUint32[0] = (((this.y0 * 65535) & 0xFFFF) << 16) | ((this.x0 * 65535) & 0xFFFF);\n        this.uvsUint32[1] = (((this.y1 * 65535) & 0xFFFF) << 16) | ((this.x1 * 65535) & 0xFFFF);\n        this.uvsUint32[2] = (((this.y2 * 65535) & 0xFFFF) << 16) | ((this.x2 * 65535) & 0xFFFF);\n        this.uvsUint32[3] = (((this.y3 * 65535) & 0xFFFF) << 16) | ((this.x3 * 65535) & 0xFFFF);\n    }\n}\n","import BaseTexture from './BaseTexture';\nimport VideoBaseTexture from './VideoBaseTexture';\nimport TextureUvs from './TextureUvs';\nimport EventEmitter from 'eventemitter3';\nimport { Rectangle } from '../math';\nimport { TextureCache, BaseTextureCache } from '../utils';\n\n/**\n * A texture stores the information that represents an image or part of an image. It cannot be added\n * to the display list directly. Instead use it as the texture for a Sprite. If no frame is provided\n * then the whole image is used.\n *\n * You can directly create a texture from an image and then reuse it multiple times like this :\n *\n * ```js\n * let texture = PIXI.Texture.fromImage('assets/image.png');\n * let sprite1 = new PIXI.Sprite(texture);\n * let sprite2 = new PIXI.Sprite(texture);\n * ```\n *\n * Textures made from SVGs, loaded or not, cannot be used before the file finishes processing.\n * You can check for this by checking the sprite's _textureID property.\n * ```js\n * var texture = PIXI.Texture.fromImage('assets/image.svg');\n * var sprite1 = new PIXI.Sprite(texture);\n * //sprite1._textureID should not be undefined if the texture has finished processing the SVG file\n * ```\n * You can use a ticker or rAF to ensure your sprites load the finished textures after processing. See issue #3068.\n *\n * @class\n * @extends EventEmitter\n * @memberof PIXI\n */\nexport default class Texture extends EventEmitter\n{\n    /**\n     * @param {PIXI.BaseTexture} baseTexture - The base texture source to create the texture from\n     * @param {PIXI.Rectangle} [frame] - The rectangle frame of the texture to show\n     * @param {PIXI.Rectangle} [orig] - The area of original texture\n     * @param {PIXI.Rectangle} [trim] - Trimmed rectangle of original texture\n     * @param {number} [rotate] - indicates how the texture was rotated by texture packer. See {@link PIXI.GroupD8}\n     */\n    constructor(baseTexture, frame, orig, trim, rotate)\n    {\n        super();\n\n        /**\n         * Does this Texture have any frame data assigned to it?\n         *\n         * @member {boolean}\n         */\n        this.noFrame = false;\n\n        if (!frame)\n        {\n            this.noFrame = true;\n            frame = new Rectangle(0, 0, 1, 1);\n        }\n\n        if (baseTexture instanceof Texture)\n        {\n            baseTexture = baseTexture.baseTexture;\n        }\n\n        /**\n         * The base texture that this texture uses.\n         *\n         * @member {PIXI.BaseTexture}\n         */\n        this.baseTexture = baseTexture;\n\n        /**\n         * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n         * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n         *\n         * @member {PIXI.Rectangle}\n         */\n        this._frame = frame;\n\n        /**\n         * This is the trimmed area of original texture, before it was put in atlas\n         *\n         * @member {PIXI.Rectangle}\n         */\n        this.trim = trim;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        this.valid = false;\n\n        /**\n         * This will let a renderer know that a texture has been updated (used mainly for webGL uv updates)\n         *\n         * @member {boolean}\n         */\n        this.requiresUpdate = false;\n\n        /**\n         * The WebGL UV data cache.\n         *\n         * @member {PIXI.TextureUvs}\n         * @private\n         */\n        this._uvs = null;\n\n        /**\n         * This is the area of original texture, before it was put in atlas\n         *\n         * @member {PIXI.Rectangle}\n         */\n        this.orig = orig || frame;// new Rectangle(0, 0, 1, 1);\n\n        this._rotate = Number(rotate || 0);\n\n        if (rotate === true)\n        {\n            // this is old texturepacker legacy, some games/libraries are passing \"true\" for rotated textures\n            this._rotate = 2;\n        }\n        else if (this._rotate % 2 !== 0)\n        {\n            throw new Error('attempt to use diamond-shaped UVs. If you are sure, set rotation manually');\n        }\n\n        if (baseTexture.hasLoaded)\n        {\n            if (this.noFrame)\n            {\n                frame = new Rectangle(0, 0, baseTexture.width, baseTexture.height);\n\n                // if there is no frame we should monitor for any base texture changes..\n                baseTexture.on('update', this.onBaseTextureUpdated, this);\n            }\n            this.frame = frame;\n        }\n        else\n        {\n            baseTexture.once('loaded', this.onBaseTextureLoaded, this);\n        }\n\n        /**\n         * Fired when the texture is updated. This happens if the frame or the baseTexture is updated.\n         *\n         * @event update\n         * @memberof PIXI.Texture#\n         * @protected\n         */\n\n        this._updateID = 0;\n\n        /**\n         * Extra field for extra plugins. May contain clamp settings and some matrices\n         * @type {Object}\n         */\n        this.transform = null;\n    }\n\n    /**\n     * Updates this texture on the gpu.\n     *\n     */\n    update()\n    {\n        this.baseTexture.update();\n    }\n\n    /**\n     * Called when the base texture is loaded\n     *\n     * @private\n     * @param {PIXI.BaseTexture} baseTexture - The base texture.\n     */\n    onBaseTextureLoaded(baseTexture)\n    {\n        this._updateID++;\n\n        // TODO this code looks confusing.. boo to abusing getters and setters!\n        if (this.noFrame)\n        {\n            this.frame = new Rectangle(0, 0, baseTexture.width, baseTexture.height);\n        }\n        else\n        {\n            this.frame = this._frame;\n        }\n\n        this.baseTexture.on('update', this.onBaseTextureUpdated, this);\n        this.emit('update', this);\n    }\n\n    /**\n     * Called when the base texture is updated\n     *\n     * @private\n     * @param {PIXI.BaseTexture} baseTexture - The base texture.\n     */\n    onBaseTextureUpdated(baseTexture)\n    {\n        this._updateID++;\n\n        this._frame.width = baseTexture.width;\n        this._frame.height = baseTexture.height;\n\n        this.emit('update', this);\n    }\n\n    /**\n     * Destroys this texture\n     *\n     * @param {boolean} [destroyBase=false] Whether to destroy the base texture as well\n     */\n    destroy(destroyBase)\n    {\n        if (this.baseTexture)\n        {\n            if (destroyBase)\n            {\n                // delete the texture if it exists in the texture cache..\n                // this only needs to be removed if the base texture is actually destroyed too..\n                if (TextureCache[this.baseTexture.imageUrl])\n                {\n                    delete TextureCache[this.baseTexture.imageUrl];\n                }\n\n                this.baseTexture.destroy();\n            }\n\n            this.baseTexture.off('update', this.onBaseTextureUpdated, this);\n            this.baseTexture.off('loaded', this.onBaseTextureLoaded, this);\n\n            this.baseTexture = null;\n        }\n\n        this._frame = null;\n        this._uvs = null;\n        this.trim = null;\n        this.orig = null;\n\n        this.valid = false;\n\n        this.off('dispose', this.dispose, this);\n        this.off('update', this.update, this);\n    }\n\n    /**\n     * Creates a new texture object that acts the same as this one.\n     *\n     * @return {PIXI.Texture} The new texture\n     */\n    clone()\n    {\n        return new Texture(this.baseTexture, this.frame, this.orig, this.trim, this.rotate);\n    }\n\n    /**\n     * Updates the internal WebGL UV cache.\n     *\n     * @protected\n     */\n    _updateUvs()\n    {\n        if (!this._uvs)\n        {\n            this._uvs = new TextureUvs();\n        }\n\n        this._uvs.set(this._frame, this.baseTexture, this.rotate);\n\n        this._updateID++;\n    }\n\n    /**\n     * Helper function that creates a Texture object from the given image url.\n     * If the image is not in the texture cache it will be  created and loaded.\n     *\n     * @static\n     * @param {string} imageUrl - The image url of the texture\n     * @param {boolean} [crossorigin] - Whether requests should be treated as crossorigin\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [sourceScale=(auto)] - Scale for the original image, used with SVG images.\n     * @return {PIXI.Texture} The newly created texture\n     */\n    static fromImage(imageUrl, crossorigin, scaleMode, sourceScale)\n    {\n        let texture = TextureCache[imageUrl];\n\n        if (!texture)\n        {\n            texture = new Texture(BaseTexture.fromImage(imageUrl, crossorigin, scaleMode, sourceScale));\n            TextureCache[imageUrl] = texture;\n        }\n\n        return texture;\n    }\n\n    /**\n     * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @return {PIXI.Texture} The newly created texture\n     */\n    static fromFrame(frameId)\n    {\n        const texture = TextureCache[frameId];\n\n        if (!texture)\n        {\n            throw new Error(`The frameId \"${frameId}\" does not exist in the texture cache`);\n        }\n\n        return texture;\n    }\n\n    /**\n     * Helper function that creates a new Texture based on the given canvas element.\n     *\n     * @static\n     * @param {HTMLCanvasElement} canvas - The canvas element source of the texture\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n    static fromCanvas(canvas, scaleMode)\n    {\n        return new Texture(BaseTexture.fromCanvas(canvas, scaleMode));\n    }\n\n    /**\n     * Helper function that creates a new Texture based on the given video element.\n     *\n     * @static\n     * @param {HTMLVideoElement|string} video - The URL or actual element of the video\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n    static fromVideo(video, scaleMode)\n    {\n        if (typeof video === 'string')\n        {\n            return Texture.fromVideoUrl(video, scaleMode);\n        }\n\n        return new Texture(VideoBaseTexture.fromVideo(video, scaleMode));\n    }\n\n    /**\n     * Helper function that creates a new Texture based on the video url.\n     *\n     * @static\n     * @param {string} videoUrl - URL of the video\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n    static fromVideoUrl(videoUrl, scaleMode)\n    {\n        return new Texture(VideoBaseTexture.fromUrl(videoUrl, scaleMode));\n    }\n\n    /**\n     * Helper function that creates a new Texture based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|PIXI.BaseTexture|HTMLCanvasElement|HTMLVideoElement} source - Source to create texture from\n     * @return {PIXI.Texture} The newly created texture\n     */\n    static from(source)\n    {\n        // TODO auto detect cross origin..\n        // TODO pass in scale mode?\n        if (typeof source === 'string')\n        {\n            const texture = TextureCache[source];\n\n            if (!texture)\n            {\n                // check if its a video..\n                const isVideo = source.match(/\\.(mp4|webm|ogg|h264|avi|mov)$/) !== null;\n\n                if (isVideo)\n                {\n                    return Texture.fromVideoUrl(source);\n                }\n\n                return Texture.fromImage(source);\n            }\n\n            return texture;\n        }\n        else if (source instanceof HTMLImageElement)\n        {\n            return new Texture(new BaseTexture(source));\n        }\n        else if (source instanceof HTMLCanvasElement)\n        {\n            return Texture.fromCanvas(source);\n        }\n        else if (source instanceof HTMLVideoElement)\n        {\n            return Texture.fromVideo(source);\n        }\n        else if (source instanceof BaseTexture)\n        {\n            return new Texture(source);\n        }\n\n        // lets assume its a texture!\n        return source;\n    }\n\n    /**\n     * Adds a texture to the global TextureCache. This cache is shared across the whole PIXI object.\n     *\n     * @static\n     * @param {PIXI.Texture} texture - The Texture to add to the cache.\n     * @param {string} id - The id that the texture will be stored against.\n     */\n    static addTextureToCache(texture, id)\n    {\n        TextureCache[id] = texture;\n    }\n\n    /**\n     * Remove a texture from the global TextureCache.\n     *\n     * @static\n     * @param {string} id - The id of the texture to be removed\n     * @return {PIXI.Texture} The texture that was removed\n     */\n    static removeTextureFromCache(id)\n    {\n        const texture = TextureCache[id];\n\n        delete TextureCache[id];\n        delete BaseTextureCache[id];\n\n        return texture;\n    }\n\n    /**\n     * The frame specifies the region of the base texture that this texture uses.\n     *\n     * @member {PIXI.Rectangle}\n     * @memberof PIXI.Texture#\n     */\n    get frame()\n    {\n        return this._frame;\n    }\n\n    /**\n     * Set the frame.\n     *\n     * @param {Rectangle} frame - The new frame to set.\n     */\n    set frame(frame)\n    {\n        this._frame = frame;\n\n        this.noFrame = false;\n\n        if (frame.x + frame.width > this.baseTexture.width || frame.y + frame.height > this.baseTexture.height)\n        {\n            throw new Error(`Texture Error: frame does not fit inside the base Texture dimensions ${this}`);\n        }\n\n        // this.valid = frame && frame.width && frame.height && this.baseTexture.source && this.baseTexture.hasLoaded;\n        this.valid = frame && frame.width && frame.height && this.baseTexture.hasLoaded;\n\n        if (!this.trim && !this.rotate)\n        {\n            this.orig = frame;\n        }\n\n        if (this.valid)\n        {\n            this._updateUvs();\n        }\n    }\n\n    /**\n     * Indicates whether the texture is rotated inside the atlas\n     * set to 2 to compensate for texture packer rotation\n     * set to 6 to compensate for spine packer rotation\n     * can be used to rotate or mirror sprites\n     * See {@link PIXI.GroupD8} for explanation\n     *\n     * @member {number}\n     */\n    get rotate()\n    {\n        return this._rotate;\n    }\n\n    /**\n     * Set the rotation\n     *\n     * @param {number} rotate - The new rotation to set.\n     */\n    set rotate(rotate)\n    {\n        this._rotate = rotate;\n        if (this.valid)\n        {\n            this._updateUvs();\n        }\n    }\n\n    /**\n     * The width of the Texture in pixels.\n     *\n     * @member {number}\n     */\n    get width()\n    {\n        return this.orig ? this.orig.width : 0;\n    }\n\n    /**\n     * The height of the Texture in pixels.\n     *\n     * @member {number}\n     */\n    get height()\n    {\n        return this.orig ? this.orig.height : 0;\n    }\n}\n\n/**\n * An empty texture, used often to not have to create multiple empty textures.\n * Can not be destroyed.\n *\n * @static\n * @constant\n */\nTexture.EMPTY = new Texture(new BaseTexture());\nTexture.EMPTY.destroy = function _emptyDestroy() { /* empty */ };\nTexture.EMPTY.on = function _emptyOn() { /* empty */ };\nTexture.EMPTY.once = function _emptyOnce() { /* empty */ };\nTexture.EMPTY.emit = function _emptyEmit() { /* empty */ };\n","import BaseRenderTexture from './BaseRenderTexture';\nimport Texture from './Texture';\n\n/**\n * A RenderTexture is a special texture that allows any Pixi display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a RenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A RenderTexture takes a snapshot of any Display Object given to its render method. The position\n * and rotation of the given Display Objects is ignored. For example:\n *\n * ```js\n * let renderer = PIXI.autoDetectRenderer(1024, 1024, { view: canvas, ratio: 1 });\n * let renderTexture = PIXI.RenderTexture.create(800, 600);\n * let sprite = PIXI.Sprite.fromImage(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchor.x = 0.5;\n * sprite.anchor.y = 0.5;\n *\n * renderer.render(sprite, renderTexture);\n * ```\n *\n * The Sprite in this case will be rendered to a position of 0,0. To render this sprite at its actual\n * position a Container should be used:\n *\n * ```js\n * let doc = new PIXI.Container();\n *\n * doc.addChild(sprite);\n *\n * renderer.render(doc, renderTexture);  // Renders to center of renderTexture\n * ```\n *\n * @class\n * @extends PIXI.Texture\n * @memberof PIXI\n */\nexport default class RenderTexture extends Texture\n{\n    /**\n     * @param {PIXI.BaseRenderTexture} baseRenderTexture - The renderer used for this RenderTexture\n     * @param {PIXI.Rectangle} [frame] - The rectangle frame of the texture to show\n     */\n    constructor(baseRenderTexture, frame)\n    {\n        // support for legacy..\n        let _legacyRenderer = null;\n\n        if (!(baseRenderTexture instanceof BaseRenderTexture))\n        {\n            /* eslint-disable prefer-rest-params, no-console */\n            const width = arguments[1];\n            const height = arguments[2];\n            const scaleMode = arguments[3] || 0;\n            const resolution = arguments[4] || 1;\n\n            // we have an old render texture..\n            console.warn(`Please use RenderTexture.create(${width}, ${height}) instead of the ctor directly.`);\n            _legacyRenderer = arguments[0];\n            /* eslint-enable prefer-rest-params, no-console */\n\n            frame = null;\n            baseRenderTexture = new BaseRenderTexture(width, height, scaleMode, resolution);\n        }\n\n        /**\n         * The base texture object that this texture uses\n         *\n         * @member {BaseTexture}\n         */\n        super(\n            baseRenderTexture,\n            frame\n        );\n\n        this.legacyRenderer = _legacyRenderer;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        this.valid = true;\n\n        this._updateUvs();\n    }\n\n    /**\n     * Resizes the RenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     * @param {boolean} doNotResizeBaseTexture - Should the baseTexture.width and height values be resized as well?\n     */\n    resize(width, height, doNotResizeBaseTexture)\n    {\n        // TODO - could be not required..\n        this.valid = (width > 0 && height > 0);\n\n        this._frame.width = this.orig.width = width;\n        this._frame.height = this.orig.height = height;\n\n        if (!doNotResizeBaseTexture)\n        {\n            this.baseTexture.resize(width, height);\n        }\n\n        this._updateUvs();\n    }\n\n    /**\n     * A short hand way of creating a render texture.\n     *\n     * @param {number} [width=100] - The width of the render texture\n     * @param {number} [height=100] - The height of the render texture\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture being generated\n     * @return {PIXI.RenderTexture} The new render texture\n     */\n    static create(width, height, scaleMode, resolution)\n    {\n        return new RenderTexture(new BaseRenderTexture(width, height, scaleMode, resolution));\n    }\n}\n","import { sayHello, hex2string, hex2rgb } from '../utils';\nimport { Matrix } from '../math';\nimport { RENDERER_TYPE } from '../const';\nimport settings from '../settings';\nimport Container from '../display/Container';\nimport RenderTexture from '../textures/RenderTexture';\nimport EventEmitter from 'eventemitter3';\n\nconst tempMatrix = new Matrix();\nconst { RESOLUTION, RENDER_OPTIONS } = settings;\n\n/**\n * The SystemRenderer is the base for a Pixi Renderer. It is extended by the {@link PIXI.CanvasRenderer}\n * and {@link PIXI.WebGLRenderer} which can be used for rendering a Pixi scene.\n *\n * @abstract\n * @class\n * @extends EventEmitter\n * @memberof PIXI\n */\nexport default class SystemRenderer extends EventEmitter\n{\n    /**\n     * @param {string} system - The name of the system this renderer is for.\n     * @param {number} [width=800] - the width of the canvas view\n     * @param {number} [height=600] - the height of the canvas view\n     * @param {object} [options] - The optional renderer parameters\n     * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n     * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n     * @param {boolean} [options.autoResize=false] - If the render view is automatically resized, default false\n     * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer. The\n     *  resolution of the renderer retina would be 2.\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the CanvasRenderer will clear the canvas or\n     *      not before the new render pass.\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     * @param {boolean} [options.roundPixels=false] - If true Pixi will Math.floor() x/y values when rendering,\n     *  stopping pixel interpolation.\n     */\n    constructor(system, width, height, options)\n    {\n        super();\n\n        sayHello(system);\n\n        // prepare options\n        if (options)\n        {\n            for (const i in RENDER_OPTIONS)\n            {\n                if (typeof options[i] === 'undefined')\n                {\n                    options[i] = RENDER_OPTIONS[i];\n                }\n            }\n        }\n        else\n        {\n            options = RENDER_OPTIONS;\n        }\n\n        /**\n         * The type of the renderer.\n         *\n         * @member {number}\n         * @default PIXI.RENDERER_TYPE.UNKNOWN\n         * @see PIXI.RENDERER_TYPE\n         */\n        this.type = RENDERER_TYPE.UNKNOWN;\n\n        /**\n         * The width of the canvas view\n         *\n         * @member {number}\n         * @default 800\n         */\n        this.width = width || 800;\n\n        /**\n         * The height of the canvas view\n         *\n         * @member {number}\n         * @default 600\n         */\n        this.height = height || 600;\n\n        /**\n         * The canvas element that everything is drawn to\n         *\n         * @member {HTMLCanvasElement}\n         */\n        this.view = options.view || document.createElement('canvas');\n\n        /**\n         * The resolution / device pixel ratio of the renderer\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.resolution = options.resolution || RESOLUTION;\n\n        /**\n         * Whether the render view is transparent\n         *\n         * @member {boolean}\n         */\n        this.transparent = options.transparent;\n\n        /**\n         * Whether the render view should be resized automatically\n         *\n         * @member {boolean}\n         */\n        this.autoResize = options.autoResize || false;\n\n        /**\n         * Tracks the blend modes useful for this renderer.\n         *\n         * @member {object<string, mixed>}\n         */\n        this.blendModes = null;\n\n        /**\n         * The value of the preserveDrawingBuffer flag affects whether or not the contents of\n         * the stencil buffer is retained after rendering.\n         *\n         * @member {boolean}\n         */\n        this.preserveDrawingBuffer = options.preserveDrawingBuffer;\n\n        /**\n         * This sets if the CanvasRenderer will clear the canvas or not before the new render pass.\n         * If the scene is NOT transparent Pixi will use a canvas sized fillRect operation every\n         * frame to set the canvas background color. If the scene is transparent Pixi will use clearRect\n         * to clear the canvas every frame. Disable this by setting this to false. For example if\n         * your game has a canvas filling background image you often don't need this set.\n         *\n         * @member {boolean}\n         * @default\n         */\n        this.clearBeforeRender = options.clearBeforeRender;\n\n        /**\n         * If true Pixi will Math.floor() x/y values when rendering, stopping pixel interpolation.\n         * Handy for crisp pixel art and speed on legacy devices.\n         *\n         * @member {boolean}\n         */\n        this.roundPixels = options.roundPixels;\n\n        /**\n         * The background color as a number.\n         *\n         * @member {number}\n         * @private\n         */\n        this._backgroundColor = 0x000000;\n\n        /**\n         * The background color as an [R, G, B] array.\n         *\n         * @member {number[]}\n         * @private\n         */\n        this._backgroundColorRgba = [0, 0, 0, 0];\n\n        /**\n         * The background color as a string.\n         *\n         * @member {string}\n         * @private\n         */\n        this._backgroundColorString = '#000000';\n\n        this.backgroundColor = options.backgroundColor || this._backgroundColor; // run bg color setter\n\n        /**\n         * This temporary display object used as the parent of the currently being rendered item\n         *\n         * @member {PIXI.DisplayObject}\n         * @private\n         */\n        this._tempDisplayObjectParent = new Container();\n\n        /**\n         * The last root object that the renderer tried to render.\n         *\n         * @member {PIXI.DisplayObject}\n         * @private\n         */\n        this._lastObjectRendered = this._tempDisplayObjectParent;\n    }\n\n    /**\n     * Resizes the canvas view to the specified width and height\n     *\n     * @param {number} width - the new width of the canvas view\n     * @param {number} height - the new height of the canvas view\n     */\n    resize(width, height)\n    {\n        this.width = width * this.resolution;\n        this.height = height * this.resolution;\n\n        this.view.width = this.width;\n        this.view.height = this.height;\n\n        if (this.autoResize)\n        {\n            this.view.style.width = `${this.width / this.resolution}px`;\n            this.view.style.height = `${this.height / this.resolution}px`;\n        }\n    }\n\n    /**\n     * Useful function that returns a texture of the display object that can then be used to create sprites\n     * This can be quite useful if your displayObject is complicated and needs to be reused multiple times.\n     *\n     * @param {PIXI.DisplayObject} displayObject - The displayObject the object will be generated from\n     * @param {number} scaleMode - Should be one of the scaleMode consts\n     * @param {number} resolution - The resolution / device pixel ratio of the texture being generated\n     * @return {PIXI.Texture} a texture of the graphics object\n     */\n    generateTexture(displayObject, scaleMode, resolution)\n    {\n        const bounds = displayObject.getLocalBounds();\n\n        const renderTexture = RenderTexture.create(bounds.width | 0, bounds.height | 0, scaleMode, resolution);\n\n        tempMatrix.tx = -bounds.x;\n        tempMatrix.ty = -bounds.y;\n\n        this.render(displayObject, renderTexture, false, tempMatrix, true);\n\n        return renderTexture;\n    }\n\n    /**\n     * Removes everything from the renderer and optionally removes the Canvas DOM element.\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     */\n    destroy(removeView)\n    {\n        if (removeView && this.view.parentNode)\n        {\n            this.view.parentNode.removeChild(this.view);\n        }\n\n        this.type = RENDERER_TYPE.UNKNOWN;\n\n        this.width = 0;\n        this.height = 0;\n\n        this.view = null;\n\n        this.resolution = 0;\n\n        this.transparent = false;\n\n        this.autoResize = false;\n\n        this.blendModes = null;\n\n        this.preserveDrawingBuffer = false;\n        this.clearBeforeRender = false;\n\n        this.roundPixels = false;\n\n        this._backgroundColor = 0;\n        this._backgroundColorRgba = null;\n        this._backgroundColorString = null;\n\n        this.backgroundColor = 0;\n        this._tempDisplayObjectParent = null;\n        this._lastObjectRendered = null;\n    }\n\n    /**\n     * The background color to fill if not transparent\n     *\n     * @member {number}\n     * @memberof PIXI.SystemRenderer#\n     */\n    get backgroundColor()\n    {\n        return this._backgroundColor;\n    }\n\n    /**\n     * Sets the background color.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set backgroundColor(value)\n    {\n        this._backgroundColor = value;\n        this._backgroundColorString = hex2string(value);\n        hex2rgb(value, this._backgroundColorRgba);\n    }\n}\n","import { SHAPES } from '../../../const';\n\n/**\n * A set of functions used to handle masking.\n *\n * @class\n * @memberof PIXI\n */\nexport default class CanvasMaskManager\n{\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n     */\n    constructor(renderer)\n    {\n        this.renderer = renderer;\n    }\n\n    /**\n     * This method adds it to the current stack of masks.\n     *\n     * @param {object} maskData - the maskData that will be pushed\n     */\n    pushMask(maskData)\n    {\n        const renderer = this.renderer;\n\n        renderer.context.save();\n\n        const cacheAlpha = maskData.alpha;\n        const transform = maskData.transform.worldTransform;\n        const resolution = renderer.resolution;\n\n        renderer.context.setTransform(\n            transform.a * resolution,\n            transform.b * resolution,\n            transform.c * resolution,\n            transform.d * resolution,\n            transform.tx * resolution,\n            transform.ty * resolution\n        );\n\n        // TODO suport sprite alpha masks??\n        // lots of effort required. If demand is great enough..\n        if (!maskData._texture)\n        {\n            this.renderGraphicsShape(maskData);\n            renderer.context.clip();\n        }\n\n        maskData.worldAlpha = cacheAlpha;\n    }\n\n    /**\n     * Renders a PIXI.Graphics shape.\n     *\n     * @param {PIXI.Graphics} graphics - The object to render.\n     */\n    renderGraphicsShape(graphics)\n    {\n        const context = this.renderer.context;\n        const len = graphics.graphicsData.length;\n\n        if (len === 0)\n        {\n            return;\n        }\n\n        context.beginPath();\n\n        for (let i = 0; i < len; i++)\n        {\n            const data = graphics.graphicsData[i];\n            const shape = data.shape;\n\n            if (data.type === SHAPES.POLY)\n            {\n                const points = shape.points;\n\n                context.moveTo(points[0], points[1]);\n\n                for (let j = 1; j < points.length / 2; j++)\n                {\n                    context.lineTo(points[j * 2], points[(j * 2) + 1]);\n                }\n\n                // if the first and last point are the same close the path - much neater :)\n                if (points[0] === points[points.length - 2] && points[1] === points[points.length - 1])\n                {\n                    context.closePath();\n                }\n            }\n            else if (data.type === SHAPES.RECT)\n            {\n                context.rect(shape.x, shape.y, shape.width, shape.height);\n                context.closePath();\n            }\n            else if (data.type === SHAPES.CIRC)\n            {\n                // TODO - need to be Undefined!\n                context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n                context.closePath();\n            }\n            else if (data.type === SHAPES.ELIP)\n            {\n                // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n                const w = shape.width * 2;\n                const h = shape.height * 2;\n\n                const x = shape.x - (w / 2);\n                const y = shape.y - (h / 2);\n\n                const kappa = 0.5522848;\n                const ox = (w / 2) * kappa; // control point offset horizontal\n                const oy = (h / 2) * kappa; // control point offset vertical\n                const xe = x + w;           // x-end\n                const ye = y + h;           // y-end\n                const xm = x + (w / 2);       // x-middle\n                const ym = y + (h / 2);       // y-middle\n\n                context.moveTo(x, ym);\n                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n                context.closePath();\n            }\n            else if (data.type === SHAPES.RREC)\n            {\n                const rx = shape.x;\n                const ry = shape.y;\n                const width = shape.width;\n                const height = shape.height;\n                let radius = shape.radius;\n\n                const maxRadius = Math.min(width, height) / 2 | 0;\n\n                radius = radius > maxRadius ? maxRadius : radius;\n\n                context.moveTo(rx, ry + radius);\n                context.lineTo(rx, ry + height - radius);\n                context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n                context.lineTo(rx + width - radius, ry + height);\n                context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n                context.lineTo(rx + width, ry + radius);\n                context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n                context.lineTo(rx + radius, ry);\n                context.quadraticCurveTo(rx, ry, rx, ry + radius);\n                context.closePath();\n            }\n        }\n    }\n\n    /**\n     * Restores the current drawing context to the state it was before the mask was applied.\n     *\n     * @param {PIXI.CanvasRenderer} renderer - The renderer context to use.\n     */\n    popMask(renderer)\n    {\n        renderer.context.restore();\n    }\n\n    /**\n     * Destroys this canvas mask manager.\n     *\n     */\n    destroy()\n    {\n        /* empty */\n    }\n}\n","import settings from '../../../settings';\nconst { RESOLUTION } = settings;\n\n/**\n * Creates a Canvas element of the given size.\n *\n * @class\n * @memberof PIXI\n */\nexport default class CanvasRenderTarget\n{\n    /**\n     * @param {number} width - the width for the newly created canvas\n     * @param {number} height - the height for the newly created canvas\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the canvas\n     */\n    constructor(width, height, resolution)\n    {\n        /**\n         * The Canvas object that belongs to this CanvasRenderTarget.\n         *\n         * @member {HTMLCanvasElement}\n         */\n        this.canvas = document.createElement('canvas');\n\n        /**\n         * A CanvasRenderingContext2D object representing a two-dimensional rendering context.\n         *\n         * @member {CanvasRenderingContext2D}\n         */\n        this.context = this.canvas.getContext('2d');\n\n        this.resolution = resolution || RESOLUTION;\n\n        this.resize(width, height);\n    }\n\n    /**\n     * Clears the canvas that was created by the CanvasRenderTarget class.\n     *\n     * @private\n     */\n    clear()\n    {\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    /**\n     * Resizes the canvas to the specified width and height.\n     *\n     * @param {number} width - the new width of the canvas\n     * @param {number} height - the new height of the canvas\n     */\n    resize(width, height)\n    {\n        this.canvas.width = width * this.resolution;\n        this.canvas.height = height * this.resolution;\n    }\n\n    /**\n     * Destroys this canvas.\n     *\n     */\n    destroy()\n    {\n        this.context = null;\n        this.canvas = null;\n    }\n\n    /**\n     * The width of the canvas buffer in pixels.\n     *\n     * @member {number}\n     * @memberof PIXI.CanvasRenderTarget#\n     */\n    get width()\n    {\n        return this.canvas.width;\n    }\n\n    /**\n     * Sets the width.\n     *\n     * @param {number} val - The value to set.\n     */\n    set width(val)\n    {\n        this.canvas.width = val;\n    }\n\n    /**\n     * The height of the canvas buffer in pixels.\n     *\n     * @member {number}\n     * @memberof PIXI.CanvasRenderTarget#\n     */\n    get height()\n    {\n        return this.canvas.height;\n    }\n\n    /**\n     * Sets the height.\n     *\n     * @param {number} val - The value to set.\n     */\n    set height(val)\n    {\n        this.canvas.height = val;\n    }\n}\n","/**\n * Creates a little colored canvas\n *\n * @ignore\n * @param {number} color - The color to make the canvas\n * @return {canvas} a small canvas element\n */\nfunction createColoredCanvas(color)\n{\n    const canvas = document.createElement('canvas');\n\n    canvas.width = 6;\n    canvas.height = 1;\n\n    const context = canvas.getContext('2d');\n\n    context.fillStyle = color;\n    context.fillRect(0, 0, 6, 1);\n\n    return canvas;\n}\n\n/**\n * Checks whether the Canvas BlendModes are supported by the current browser\n *\n * @return {boolean} whether they are supported\n */\nexport default function canUseNewCanvasBlendModes()\n{\n    if (typeof document === 'undefined')\n    {\n        return false;\n    }\n\n    const magenta = createColoredCanvas('#ff00ff');\n    const yellow = createColoredCanvas('#ffff00');\n\n    const canvas = document.createElement('canvas');\n\n    canvas.width = 6;\n    canvas.height = 1;\n\n    const context = canvas.getContext('2d');\n\n    context.globalCompositeOperation = 'multiply';\n    context.drawImage(magenta, 0, 0);\n    context.drawImage(yellow, 2, 0);\n\n    const imageData = context.getImageData(2, 0, 1, 1);\n\n    if (!imageData)\n    {\n        return false;\n    }\n\n    const data = imageData.data;\n\n    return (data[0] === 255 && data[1] === 0 && data[2] === 0);\n}\n","import { BLEND_MODES } from '../../../const';\nimport canUseNewCanvasBlendModes from './canUseNewCanvasBlendModes';\n\n/**\n * Maps blend combinations to Canvas.\n *\n * @memberof PIXI\n * @function mapCanvasBlendModesToPixi\n * @private\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\nexport default function mapCanvasBlendModesToPixi(array = [])\n{\n    if (canUseNewCanvasBlendModes())\n    {\n        array[BLEND_MODES.NORMAL] = 'source-over';\n        array[BLEND_MODES.ADD] = 'lighter'; // IS THIS OK???\n        array[BLEND_MODES.MULTIPLY] = 'multiply';\n        array[BLEND_MODES.SCREEN] = 'screen';\n        array[BLEND_MODES.OVERLAY] = 'overlay';\n        array[BLEND_MODES.DARKEN] = 'darken';\n        array[BLEND_MODES.LIGHTEN] = 'lighten';\n        array[BLEND_MODES.COLOR_DODGE] = 'color-dodge';\n        array[BLEND_MODES.COLOR_BURN] = 'color-burn';\n        array[BLEND_MODES.HARD_LIGHT] = 'hard-light';\n        array[BLEND_MODES.SOFT_LIGHT] = 'soft-light';\n        array[BLEND_MODES.DIFFERENCE] = 'difference';\n        array[BLEND_MODES.EXCLUSION] = 'exclusion';\n        array[BLEND_MODES.HUE] = 'hue';\n        array[BLEND_MODES.SATURATION] = 'saturate';\n        array[BLEND_MODES.COLOR] = 'color';\n        array[BLEND_MODES.LUMINOSITY] = 'luminosity';\n    }\n    else\n    {\n        // this means that the browser does not support the cool new blend modes in canvas 'cough' ie 'cough'\n        array[BLEND_MODES.NORMAL] = 'source-over';\n        array[BLEND_MODES.ADD] = 'lighter'; // IS THIS OK???\n        array[BLEND_MODES.MULTIPLY] = 'source-over';\n        array[BLEND_MODES.SCREEN] = 'source-over';\n        array[BLEND_MODES.OVERLAY] = 'source-over';\n        array[BLEND_MODES.DARKEN] = 'source-over';\n        array[BLEND_MODES.LIGHTEN] = 'source-over';\n        array[BLEND_MODES.COLOR_DODGE] = 'source-over';\n        array[BLEND_MODES.COLOR_BURN] = 'source-over';\n        array[BLEND_MODES.HARD_LIGHT] = 'source-over';\n        array[BLEND_MODES.SOFT_LIGHT] = 'source-over';\n        array[BLEND_MODES.DIFFERENCE] = 'source-over';\n        array[BLEND_MODES.EXCLUSION] = 'source-over';\n        array[BLEND_MODES.HUE] = 'source-over';\n        array[BLEND_MODES.SATURATION] = 'source-over';\n        array[BLEND_MODES.COLOR] = 'source-over';\n        array[BLEND_MODES.LUMINOSITY] = 'source-over';\n    }\n\n    return array;\n}\n","import SystemRenderer from '../SystemRenderer';\nimport CanvasMaskManager from './utils/CanvasMaskManager';\nimport CanvasRenderTarget from './utils/CanvasRenderTarget';\nimport mapCanvasBlendModesToPixi from './utils/mapCanvasBlendModesToPixi';\nimport { pluginTarget } from '../../utils';\nimport { RENDERER_TYPE, SCALE_MODES, BLEND_MODES } from '../../const';\nimport settings from '../../settings';\n\n/**\n * The CanvasRenderer draws the scene and all its content onto a 2d canvas. This renderer should\n * be used for browsers that do not support WebGL. Don't forget to add the CanvasRenderer.view to\n * your DOM or you will not see anything :)\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.SystemRenderer\n */\nexport default class CanvasRenderer extends SystemRenderer\n{\n    /**\n     * @param {number} [width=800] - the width of the canvas view\n     * @param {number} [height=600] - the height of the canvas view\n     * @param {object} [options] - The optional renderer parameters\n     * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n     * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n     * @param {boolean} [options.autoResize=false] - If the render view is automatically resized, default false\n     * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer. The\n     *  resolution of the renderer retina would be 2.\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the CanvasRenderer will clear the canvas or\n     *      not before the new render pass.\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     * @param {boolean} [options.roundPixels=false] - If true Pixi will Math.floor() x/y values when rendering,\n     *  stopping pixel interpolation.\n     */\n    constructor(width, height, options = {})\n    {\n        super('Canvas', width, height, options);\n\n        this.type = RENDERER_TYPE.CANVAS;\n\n        /**\n         * The canvas 2d context that everything is drawn with.\n         *\n         * @member {CanvasRenderingContext2D}\n         */\n        this.rootContext = this.view.getContext('2d', { alpha: this.transparent });\n\n        /**\n         * Boolean flag controlling canvas refresh.\n         *\n         * @member {boolean}\n         */\n        this.refresh = true;\n\n        /**\n         * Instance of a CanvasMaskManager, handles masking when using the canvas renderer.\n         *\n         * @member {PIXI.CanvasMaskManager}\n         */\n        this.maskManager = new CanvasMaskManager(this);\n\n        /**\n         * The canvas property used to set the canvas smoothing property.\n         *\n         * @member {string}\n         */\n        this.smoothProperty = 'imageSmoothingEnabled';\n\n        if (!this.rootContext.imageSmoothingEnabled)\n        {\n            if (this.rootContext.webkitImageSmoothingEnabled)\n            {\n                this.smoothProperty = 'webkitImageSmoothingEnabled';\n            }\n            else if (this.rootContext.mozImageSmoothingEnabled)\n            {\n                this.smoothProperty = 'mozImageSmoothingEnabled';\n            }\n            else if (this.rootContext.oImageSmoothingEnabled)\n            {\n                this.smoothProperty = 'oImageSmoothingEnabled';\n            }\n            else if (this.rootContext.msImageSmoothingEnabled)\n            {\n                this.smoothProperty = 'msImageSmoothingEnabled';\n            }\n        }\n\n        this.initPlugins();\n\n        this.blendModes = mapCanvasBlendModesToPixi();\n        this._activeBlendMode = null;\n\n        this.context = null;\n        this.renderingToScreen = false;\n\n        this.resize(width, height);\n    }\n\n    /**\n     * Renders the object to this canvas view\n     *\n     * @param {PIXI.DisplayObject} displayObject - The object to be rendered\n     * @param {PIXI.RenderTexture} [renderTexture] - A render texture to be rendered to.\n     *  If unset, it will render to the root context.\n     * @param {boolean} [clear=false] - Whether to clear the canvas before drawing\n     * @param {PIXI.Transform} [transform] - A transformation to be applied\n     * @param {boolean} [skipUpdateTransform=false] - Whether to skip the update transform\n     */\n    render(displayObject, renderTexture, clear, transform, skipUpdateTransform)\n    {\n        if (!this.view)\n        {\n            return;\n        }\n\n        // can be handy to know!\n        this.renderingToScreen = !renderTexture;\n\n        this.emit('prerender');\n\n        if (renderTexture)\n        {\n            renderTexture = renderTexture.baseTexture || renderTexture;\n\n            if (!renderTexture._canvasRenderTarget)\n            {\n                renderTexture._canvasRenderTarget = new CanvasRenderTarget(\n                    renderTexture.width,\n                    renderTexture.height,\n                    renderTexture.resolution\n                );\n                renderTexture.source = renderTexture._canvasRenderTarget.canvas;\n                renderTexture.valid = true;\n            }\n\n            this.context = renderTexture._canvasRenderTarget.context;\n            this.resolution = renderTexture._canvasRenderTarget.resolution;\n        }\n        else\n        {\n            this.context = this.rootContext;\n        }\n\n        const context = this.context;\n\n        if (!renderTexture)\n        {\n            this._lastObjectRendered = displayObject;\n        }\n\n        if (!skipUpdateTransform)\n        {\n            // update the scene graph\n            const cacheParent = displayObject.parent;\n            const tempWt = this._tempDisplayObjectParent.transform.worldTransform;\n\n            if (transform)\n            {\n                transform.copy(tempWt);\n            }\n            else\n            {\n                tempWt.identity();\n            }\n\n            displayObject.parent = this._tempDisplayObjectParent;\n            displayObject.updateTransform();\n            displayObject.parent = cacheParent;\n            // displayObject.hitArea = //TODO add a temp hit area\n        }\n\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.globalAlpha = 1;\n        context.globalCompositeOperation = this.blendModes[BLEND_MODES.NORMAL];\n\n        if (navigator.isCocoonJS && this.view.screencanvas)\n        {\n            context.fillStyle = 'black';\n            context.clear();\n        }\n\n        if (clear !== undefined ? clear : this.clearBeforeRender)\n        {\n            if (this.renderingToScreen)\n            {\n                if (this.transparent)\n                {\n                    context.clearRect(0, 0, this.width, this.height);\n                }\n                else\n                {\n                    context.fillStyle = this._backgroundColorString;\n                    context.fillRect(0, 0, this.width, this.height);\n                }\n            } // else {\n            // TODO: implement background for CanvasRenderTarget or RenderTexture?\n            // }\n        }\n\n        // TODO RENDER TARGET STUFF HERE..\n        const tempContext = this.context;\n\n        this.context = context;\n        displayObject.renderCanvas(this);\n        this.context = tempContext;\n\n        this.emit('postrender');\n    }\n\n    /**\n     * Sets the blend mode of the renderer.\n     *\n     * @param {number} blendMode - See {@link PIXI.BLEND_MODES} for valid values.\n     */\n    setBlendMode(blendMode)\n    {\n        if (this._activeBlendMode === blendMode)\n        {\n            return;\n        }\n\n        this._activeBlendMode = blendMode;\n        this.context.globalCompositeOperation = this.blendModes[blendMode];\n    }\n\n    /**\n     * Removes everything from the renderer and optionally removes the Canvas DOM element.\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     */\n    destroy(removeView)\n    {\n        this.destroyPlugins();\n\n        // call the base destroy\n        super.destroy(removeView);\n\n        this.context = null;\n\n        this.refresh = true;\n\n        this.maskManager.destroy();\n        this.maskManager = null;\n\n        this.smoothProperty = null;\n    }\n\n    /**\n     * Resizes the canvas view to the specified width and height.\n     *\n     * @extends PIXI.SystemRenderer#resize\n     *\n     * @param {number} width - The new width of the canvas view\n     * @param {number} height - The new height of the canvas view\n     */\n    resize(width, height)\n    {\n        super.resize(width, height);\n\n        // reset the scale mode.. oddly this seems to be reset when the canvas is resized.\n        // surely a browser bug?? Let pixi fix that for you..\n        if (this.smoothProperty)\n        {\n            this.rootContext[this.smoothProperty] = (settings.SCALE_MODE === SCALE_MODES.LINEAR);\n        }\n    }\n}\n\npluginTarget.mixin(CanvasRenderer);\n","/**\n * @class\n * @memberof PIXI\n */\nexport default class WebGLManager\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        /**\n         * The renderer this manager works for.\n         *\n         * @member {PIXI.WebGLRenderer}\n         */\n        this.renderer = renderer;\n\n        this.renderer.on('context', this.onContextChange, this);\n    }\n\n    /**\n     * Generic method called when there is a WebGL context change.\n     *\n     */\n    onContextChange()\n    {\n        // do some codes init!\n    }\n\n    /**\n     * Generic destroy methods to be overridden by the subclass\n     *\n     */\n    destroy()\n    {\n        this.renderer.off('context', this.onContextChange, this);\n\n        this.renderer = null;\n    }\n}\n","import glCore from 'pixi-gl-core';\n\nconst defaultValue = glCore.shader.defaultValue;\n\nexport default function extractUniformsFromSrc(vertexSrc, fragmentSrc, mask)\n{\n    const vertUniforms = extractUniformsFromString(vertexSrc, mask);\n    const fragUniforms = extractUniformsFromString(fragmentSrc, mask);\n\n    return Object.assign(vertUniforms, fragUniforms);\n}\n\nfunction extractUniformsFromString(string)\n{\n    const maskRegex = new RegExp('^(projectionMatrix|uSampler|filterArea)$');\n\n    const uniforms = {};\n    let nameSplit;\n\n    // clean the lines a little - remove extra spaces / tabs etc\n    // then split along ';'\n    const lines = string.replace(/\\s+/g, ' ')\n                .split(/\\s*;\\s*/);\n\n    // loop through..\n    for (let i = 0; i < lines.length; i++)\n    {\n        const line = lines[i].trim();\n\n        if (line.indexOf('uniform') > -1)\n        {\n            const splitLine = line.split(' ');\n            const type = splitLine[1];\n\n            let name = splitLine[2];\n            let size = 1;\n\n            if (name.indexOf('[') > -1)\n            {\n                // array!\n                nameSplit = name.split(/\\[|]/);\n                name = nameSplit[0];\n                size *= Number(nameSplit[1]);\n            }\n\n            if (!name.match(maskRegex))\n            {\n                uniforms[name] = {\n                    value: defaultValue(type, size),\n                    name,\n                    type,\n                };\n            }\n        }\n    }\n\n    return uniforms;\n}\n","import extractUniformsFromSrc from './extractUniformsFromSrc';\nimport { uid } from '../../../utils';\nimport { BLEND_MODES } from '../../../const';\n\nconst SOURCE_KEY_MAP = {};\n\n// let math = require('../../../math');\n/**\n * @class\n * @memberof PIXI\n * @extends PIXI.Shader\n */\nclass Filter\n{\n    /**\n     * @param {string} [vertexSrc] - The source of the vertex shader.\n     * @param {string} [fragmentSrc] - The source of the fragment shader.\n     * @param {object} [uniforms] - Custom uniforms to use to augment the built-in ones.\n     */\n    constructor(vertexSrc, fragmentSrc, uniforms)\n    {\n        /**\n         * The vertex shader.\n         *\n         * @member {string}\n         */\n        this.vertexSrc = vertexSrc || Filter.defaultVertexSrc;\n\n        /**\n         * The fragment shader.\n         *\n         * @member {string}\n         */\n        this.fragmentSrc = fragmentSrc || Filter.defaultFragmentSrc;\n\n        this.blendMode = BLEND_MODES.NORMAL;\n\n        // pull out the vertex and shader uniforms if they are not specified..\n        // currently this does not extract structs only default types\n        this.uniformData = uniforms || extractUniformsFromSrc(this.vertexSrc, this.fragmentSrc, 'projectionMatrix|uSampler');\n\n        /**\n         * An object containing the current values of custom uniforms.\n         * @example <caption>Updating the value of a custom uniform</caption>\n         * filter.uniforms.time = performance.now();\n         *\n         * @member {object}\n         */\n        this.uniforms = {};\n\n        for (const i in this.uniformData)\n        {\n            this.uniforms[i] = this.uniformData[i].value;\n        }\n\n        // this is where we store shader references..\n        // TODO we could cache this!\n        this.glShaders = {};\n\n        // used for cacheing.. sure there is a better way!\n        if (!SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc])\n        {\n            SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc] = uid();\n        }\n\n        this.glShaderKey = SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc];\n\n        /**\n         * The padding of the filter. Some filters require extra space to breath such as a blur.\n         * Increasing this will add extra width and height to the bounds of the object that the\n         * filter is applied to.\n         *\n         * @member {number}\n         */\n        this.padding = 4;\n\n        /**\n         * The resolution of the filter. Setting this to be lower will lower the quality but\n         * increase the performance of the filter.\n         *\n         * @member {number}\n         */\n        this.resolution = 1;\n\n        /**\n         * If enabled is true the filter is applied, if false it will not.\n         *\n         * @member {boolean}\n         */\n        this.enabled = true;\n    }\n\n    /**\n     * Applies the filter\n     *\n     * @param {PIXI.FilterManager} filterManager - The renderer to retrieve the filter from\n     * @param {PIXI.RenderTarget} input - The input render target.\n     * @param {PIXI.RenderTarget} output - The target to output to.\n     * @param {boolean} clear - Should the output be cleared before rendering to it\n     */\n    apply(filterManager, input, output, clear)\n    {\n        // --- //\n        //  this.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(tempMatrix, window.panda );\n\n        // do as you please!\n\n        filterManager.applyFilter(this, input, output, clear);\n\n        // or just do a regular render..\n    }\n\n    /**\n     * The default vertex shader source\n     *\n     * @static\n     * @constant\n     */\n    static get defaultVertexSrc()\n    {\n        return [\n            'attribute vec2 aVertexPosition;',\n            'attribute vec2 aTextureCoord;',\n\n            'uniform mat3 projectionMatrix;',\n            'uniform mat3 filterMatrix;',\n\n            'varying vec2 vTextureCoord;',\n            'varying vec2 vFilterCoord;',\n\n            'void main(void){',\n            '   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);',\n            '   vFilterCoord = ( filterMatrix * vec3( aTextureCoord, 1.0)  ).xy;',\n            '   vTextureCoord = aTextureCoord ;',\n            '}',\n        ].join('\\n');\n    }\n\n    /**\n     * The default fragment shader source\n     *\n     * @static\n     * @constant\n     */\n    static get defaultFragmentSrc()\n    {\n        return [\n            'varying vec2 vTextureCoord;',\n            'varying vec2 vFilterCoord;',\n\n            'uniform sampler2D uSampler;',\n            'uniform sampler2D filterSampler;',\n\n            'void main(void){',\n            '   vec4 masky = texture2D(filterSampler, vFilterCoord);',\n            '   vec4 sample = texture2D(uSampler, vTextureCoord);',\n            '   vec4 color;',\n            '   if(mod(vFilterCoord.x, 1.0) > 0.5)',\n            '   {',\n            '     color = vec4(1.0, 0.0, 0.0, 1.0);',\n            '   }',\n            '   else',\n            '   {',\n            '     color = vec4(0.0, 1.0, 0.0, 1.0);',\n            '   }',\n            // '   gl_FragColor = vec4(mod(vFilterCoord.x, 1.5), vFilterCoord.y,0.0,1.0);',\n            '   gl_FragColor = mix(sample, masky, 0.5);',\n            '   gl_FragColor *= sample.a;',\n            '}',\n        ].join('\\n');\n    }\n}\n\nexport default Filter;\n","import Filter from '../Filter';\nimport { Matrix } from '../../../../math';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\n/**\n * The SpriteMaskFilter class\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI\n */\nexport default class SpriteMaskFilter extends Filter\n{\n    /**\n     * @param {PIXI.Sprite} sprite - the target sprite\n     */\n    constructor(sprite)\n    {\n        const maskMatrix = new Matrix();\n\n        super(\n            readFileSync(join(__dirname, './spriteMaskFilter.vert'), 'utf8'),\n            readFileSync(join(__dirname, './spriteMaskFilter.frag'), 'utf8')\n        );\n\n        sprite.renderable = false;\n\n        this.maskSprite = sprite;\n        this.maskMatrix = maskMatrix;\n    }\n\n    /**\n     * Applies the filter\n     *\n     * @param {PIXI.FilterManager} filterManager - The renderer to retrieve the filter from\n     * @param {PIXI.RenderTarget} input - The input render target.\n     * @param {PIXI.RenderTarget} output - The target to output to.\n     */\n    apply(filterManager, input, output)\n    {\n        const maskSprite = this.maskSprite;\n\n        this.uniforms.mask = maskSprite._texture;\n        this.uniforms.otherMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, maskSprite);\n        this.uniforms.alpha = maskSprite.worldAlpha;\n\n        filterManager.applyFilter(this, input, output);\n    }\n}\n","import WebGLManager from './WebGLManager';\nimport AlphaMaskFilter from '../filters/spriteMask/SpriteMaskFilter';\n\n/**\n * @class\n * @extends PIXI.WebGLManager\n * @memberof PIXI\n */\nexport default class MaskManager extends WebGLManager\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        super(renderer);\n\n        // TODO - we don't need both!\n        this.scissor = false;\n        this.scissorData = null;\n        this.scissorRenderTarget = null;\n\n        this.enableScissor = true;\n\n        this.alphaMaskPool = [];\n        this.alphaMaskIndex = 0;\n    }\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to push the mask to\n     * @param {PIXI.Sprite|PIXI.Graphics} maskData - The masking data.\n     */\n    pushMask(target, maskData)\n    {\n        if (maskData.texture)\n        {\n            this.pushSpriteMask(target, maskData);\n        }\n        else if (this.enableScissor\n            && !this.scissor\n            && !this.renderer.stencilManager.stencilMaskStack.length\n            && maskData.isFastRect())\n        {\n            const matrix = maskData.worldTransform;\n\n            let rot = Math.atan2(matrix.b, matrix.a);\n\n            // use the nearest degree!\n            rot = Math.round(rot * (180 / Math.PI));\n\n            if (rot % 90)\n            {\n                this.pushStencilMask(maskData);\n            }\n            else\n            {\n                this.pushScissorMask(target, maskData);\n            }\n        }\n        else\n        {\n            this.pushStencilMask(maskData);\n        }\n    }\n\n    /**\n     * Removes the last mask from the mask stack and doesn't return it.\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to pop the mask from\n     * @param {PIXI.Sprite|PIXI.Graphics} maskData - The masking data.\n     */\n    popMask(target, maskData)\n    {\n        if (maskData.texture)\n        {\n            this.popSpriteMask(target, maskData);\n        }\n        else if (this.enableScissor && !this.renderer.stencilManager.stencilMaskStack.length)\n        {\n            this.popScissorMask(target, maskData);\n        }\n        else\n        {\n            this.popStencilMask(target, maskData);\n        }\n    }\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.RenderTarget} target - Display Object to push the sprite mask to\n     * @param {PIXI.Sprite} maskData - Sprite to be used as the mask\n     */\n    pushSpriteMask(target, maskData)\n    {\n        let alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];\n\n        if (!alphaMaskFilter)\n        {\n            alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [new AlphaMaskFilter(maskData)];\n        }\n\n        alphaMaskFilter[0].resolution = this.renderer.resolution;\n        alphaMaskFilter[0].maskSprite = maskData;\n\n        // TODO - may cause issues!\n        target.filterArea = maskData.getBounds(true);\n\n        this.renderer.filterManager.pushFilter(target, alphaMaskFilter);\n\n        this.alphaMaskIndex++;\n    }\n\n    /**\n     * Removes the last filter from the filter stack and doesn't return it.\n     *\n     */\n    popSpriteMask()\n    {\n        this.renderer.filterManager.popFilter();\n        this.alphaMaskIndex--;\n    }\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.Sprite|PIXI.Graphics} maskData - The masking data.\n     */\n    pushStencilMask(maskData)\n    {\n        this.renderer.currentRenderer.stop();\n        this.renderer.stencilManager.pushStencil(maskData);\n    }\n\n    /**\n     * Removes the last filter from the filter stack and doesn't return it.\n     *\n     */\n    popStencilMask()\n    {\n        this.renderer.currentRenderer.stop();\n        this.renderer.stencilManager.popStencil();\n    }\n\n    /**\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to push the mask to\n     * @param {PIXI.Graphics} maskData - The masking data.\n     */\n    pushScissorMask(target, maskData)\n    {\n        maskData.renderable = true;\n\n        const renderTarget = this.renderer._activeRenderTarget;\n\n        const bounds = maskData.getBounds();\n\n        bounds.fit(renderTarget.size);\n        maskData.renderable = false;\n\n        this.renderer.gl.enable(this.renderer.gl.SCISSOR_TEST);\n\n        const resolution = this.renderer.resolution;\n\n        this.renderer.gl.scissor(\n            bounds.x * resolution,\n            (renderTarget.root ? renderTarget.size.height - bounds.y - bounds.height : bounds.y) * resolution,\n            bounds.width * resolution,\n            bounds.height * resolution\n        );\n\n        this.scissorRenderTarget = renderTarget;\n        this.scissorData = maskData;\n        this.scissor = true;\n    }\n\n    /**\n     *\n     *\n     */\n    popScissorMask()\n    {\n        this.scissorRenderTarget = null;\n        this.scissorData = null;\n        this.scissor = false;\n\n        // must be scissor!\n        const gl = this.renderer.gl;\n\n        gl.disable(gl.SCISSOR_TEST);\n    }\n}\n","import WebGLManager from './WebGLManager';\n\n/**\n * @class\n * @extends PIXI.WebGLManager\n * @memberof PIXI\n */\nexport default class StencilManager extends WebGLManager\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        super(renderer);\n        this.stencilMaskStack = null;\n    }\n\n    /**\n     * Changes the mask stack that is used by this manager.\n     *\n     * @param {PIXI.Graphics[]} stencilMaskStack - The mask stack\n     */\n    setMaskStack(stencilMaskStack)\n    {\n        this.stencilMaskStack = stencilMaskStack;\n\n        const gl = this.renderer.gl;\n\n        if (stencilMaskStack.length === 0)\n        {\n            gl.disable(gl.STENCIL_TEST);\n        }\n        else\n        {\n            gl.enable(gl.STENCIL_TEST);\n        }\n    }\n\n    /**\n     * Applies the Mask and adds it to the current filter stack. @alvin\n     *\n     * @param {PIXI.Graphics} graphics - The mask\n     */\n    pushStencil(graphics)\n    {\n        this.renderer.setObjectRenderer(this.renderer.plugins.graphics);\n\n        this.renderer._activeRenderTarget.attachStencilBuffer();\n\n        const gl = this.renderer.gl;\n        const sms = this.stencilMaskStack;\n\n        if (sms.length === 0)\n        {\n            gl.enable(gl.STENCIL_TEST);\n            gl.clear(gl.STENCIL_BUFFER_BIT);\n            gl.stencilFunc(gl.ALWAYS, 1, 1);\n        }\n\n        sms.push(graphics);\n\n        gl.colorMask(false, false, false, false);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);\n\n        this.renderer.plugins.graphics.render(graphics);\n\n        gl.colorMask(true, true, true, true);\n        gl.stencilFunc(gl.NOTEQUAL, 0, sms.length);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n    }\n\n    /**\n     * TODO @alvin\n     */\n    popStencil()\n    {\n        this.renderer.setObjectRenderer(this.renderer.plugins.graphics);\n\n        const gl = this.renderer.gl;\n        const sms = this.stencilMaskStack;\n\n        const graphics = sms.pop();\n\n        if (sms.length === 0)\n        {\n            // the stack is empty!\n            gl.disable(gl.STENCIL_TEST);\n        }\n        else\n        {\n            gl.colorMask(false, false, false, false);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);\n\n            this.renderer.plugins.graphics.render(graphics);\n\n            gl.colorMask(true, true, true, true);\n            gl.stencilFunc(gl.NOTEQUAL, 0, sms.length);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n        }\n    }\n\n    /**\n     * Destroys the mask stack.\n     *\n     */\n    destroy()\n    {\n        WebGLManager.prototype.destroy.call(this);\n\n        this.stencilMaskStack.stencilStack = null;\n    }\n}\n","import { Rectangle, Matrix } from '../../../math';\nimport { SCALE_MODES } from '../../../const';\nimport settings from '../../../settings';\nimport { GLFramebuffer } from 'pixi-gl-core';\n\nconst { RESOLUTION, SCALE_MODE } = settings;\n\n/**\n * @class\n * @memberof PIXI\n */\nexport default class RenderTarget\n{\n    /**\n     * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n     * @param {number} [width=0] - the horizontal range of the filter\n     * @param {number} [height=0] - the vertical range of the filter\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The current resolution / device pixel ratio\n     * @param {boolean} [root=false] - Whether this object is the root element or not\n     */\n    constructor(gl, width, height, scaleMode, resolution, root)\n    {\n        // TODO Resolution could go here ( eg low res blurs )\n\n        /**\n         * The current WebGL drawing context.\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        // next time to create a frame buffer and texture\n\n        /**\n         * A frame buffer\n         *\n         * @member {PIXI.glCore.GLFramebuffer}\n         */\n        this.frameBuffer = null;\n\n        /**\n         * The texture\n         *\n         * @member {PIXI.glCore.GLTexture}\n         */\n        this.texture = null;\n\n        /**\n         * The background colour of this render target, as an array of [r,g,b,a] values\n         *\n         * @member {number[]}\n         */\n        this.clearColor = [0, 0, 0, 0];\n\n        /**\n         * The size of the object as a rectangle\n         *\n         * @member {PIXI.Rectangle}\n         */\n        this.size = new Rectangle(0, 0, 1, 1);\n\n        /**\n         * The current resolution / device pixel ratio\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.resolution = resolution || RESOLUTION;\n\n        /**\n         * The projection matrix\n         *\n         * @member {PIXI.Matrix}\n         */\n        this.projectionMatrix = new Matrix();\n\n        /**\n         * The object's transform\n         *\n         * @member {PIXI.Matrix}\n         */\n        this.transform = null;\n\n        /**\n         * The frame.\n         *\n         * @member {PIXI.Rectangle}\n         */\n        this.frame = null;\n\n        /**\n         * The stencil buffer stores masking data for the render target\n         *\n         * @member {glCore.GLBuffer}\n         */\n        this.defaultFrame = new Rectangle();\n        this.destinationFrame = null;\n        this.sourceFrame = null;\n\n        /**\n         * The stencil buffer stores masking data for the render target\n         *\n         * @member {glCore.GLBuffer}\n         */\n        this.stencilBuffer = null;\n\n        /**\n         * The data structure for the stencil masks\n         *\n         * @member {PIXI.Graphics[]}\n         */\n        this.stencilMaskStack = [];\n\n        /**\n         * Stores filter data for the render target\n         *\n         * @member {object[]}\n         */\n        this.filterData = null;\n\n        /**\n         * The scale mode.\n         *\n         * @member {number}\n         * @default PIXI.settings.SCALE_MODE\n         * @see PIXI.SCALE_MODES\n         */\n        this.scaleMode = scaleMode || SCALE_MODE;\n\n        /**\n         * Whether this object is the root element or not\n         *\n         * @member {boolean}\n         */\n        this.root = root;\n\n        if (!this.root)\n        {\n            this.frameBuffer = GLFramebuffer.createRGBA(gl, 100, 100);\n\n            if (this.scaleMode === SCALE_MODES.NEAREST)\n            {\n                this.frameBuffer.texture.enableNearestScaling();\n            }\n            else\n            {\n                this.frameBuffer.texture.enableLinearScaling();\n            }\n            /*\n                A frame buffer needs a target to render to..\n                create a texture and bind it attach it to the framebuffer..\n             */\n\n            // this is used by the base texture\n            this.texture = this.frameBuffer.texture;\n        }\n        else\n        {\n            // make it a null framebuffer..\n            this.frameBuffer = new GLFramebuffer(gl, 100, 100);\n            this.frameBuffer.framebuffer = null;\n        }\n\n        this.setFrame();\n\n        this.resize(width, height);\n    }\n\n    /**\n     * Clears the filter texture.\n     *\n     * @param {number[]} [clearColor=this.clearColor] - Array of [r,g,b,a] to clear the framebuffer\n     */\n    clear(clearColor)\n    {\n        const cc = clearColor || this.clearColor;\n\n        this.frameBuffer.clear(cc[0], cc[1], cc[2], cc[3]);// r,g,b,a);\n    }\n\n    /**\n     * Binds the stencil buffer.\n     *\n     */\n    attachStencilBuffer()\n    {\n        // TODO check if stencil is done?\n        /**\n         * The stencil buffer is used for masking in pixi\n         * lets create one and then add attach it to the framebuffer..\n         */\n        if (!this.root)\n        {\n            this.frameBuffer.enableStencil();\n        }\n    }\n\n    /**\n     * Sets the frame of the render target.\n     *\n     * @param {Rectangle} destinationFrame - The destination frame.\n     * @param {Rectangle} sourceFrame - The source frame.\n     */\n    setFrame(destinationFrame, sourceFrame)\n    {\n        this.destinationFrame = destinationFrame || this.destinationFrame || this.defaultFrame;\n        this.sourceFrame = sourceFrame || this.sourceFrame || destinationFrame;\n    }\n\n    /**\n     * Binds the buffers and initialises the viewport.\n     *\n     */\n    activate()\n    {\n        // TOOD refactor usage of frame..\n        const gl = this.gl;\n\n        // make sure the texture is unbound!\n        this.frameBuffer.bind();\n\n        this.calculateProjection(this.destinationFrame, this.sourceFrame);\n\n        if (this.transform)\n        {\n            this.projectionMatrix.append(this.transform);\n        }\n\n        // TODO add a check as them may be the same!\n        if (this.destinationFrame !== this.sourceFrame)\n        {\n            gl.enable(gl.SCISSOR_TEST);\n            gl.scissor(\n                this.destinationFrame.x | 0,\n                this.destinationFrame.y | 0,\n                (this.destinationFrame.width * this.resolution) | 0,\n                (this.destinationFrame.height * this.resolution) | 0\n            );\n        }\n        else\n        {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n\n        // TODO - does not need to be updated all the time??\n        gl.viewport(\n            this.destinationFrame.x | 0,\n            this.destinationFrame.y | 0,\n            (this.destinationFrame.width * this.resolution) | 0,\n            (this.destinationFrame.height * this.resolution) | 0\n        );\n    }\n\n    /**\n     * Updates the projection matrix based on a projection frame (which is a rectangle)\n     *\n     * @param {Rectangle} destinationFrame - The destination frame.\n     * @param {Rectangle} sourceFrame - The source frame.\n     */\n    calculateProjection(destinationFrame, sourceFrame)\n    {\n        const pm = this.projectionMatrix;\n\n        sourceFrame = sourceFrame || destinationFrame;\n\n        pm.identity();\n\n        // TODO: make dest scale source\n        if (!this.root)\n        {\n            pm.a = 1 / destinationFrame.width * 2;\n            pm.d = 1 / destinationFrame.height * 2;\n\n            pm.tx = -1 - (sourceFrame.x * pm.a);\n            pm.ty = -1 - (sourceFrame.y * pm.d);\n        }\n        else\n        {\n            pm.a = 1 / destinationFrame.width * 2;\n            pm.d = -1 / destinationFrame.height * 2;\n\n            pm.tx = -1 - (sourceFrame.x * pm.a);\n            pm.ty = 1 - (sourceFrame.y * pm.d);\n        }\n    }\n\n    /**\n     * Resizes the texture to the specified width and height\n     *\n     * @param {number} width - the new width of the texture\n     * @param {number} height - the new height of the texture\n     */\n    resize(width, height)\n    {\n        width = width | 0;\n        height = height | 0;\n\n        if (this.size.width === width && this.size.height === height)\n        {\n            return;\n        }\n\n        this.size.width = width;\n        this.size.height = height;\n\n        this.defaultFrame.width = width;\n        this.defaultFrame.height = height;\n\n        this.frameBuffer.resize(width * this.resolution, height * this.resolution);\n\n        const projectionFrame = this.frame || this.size;\n\n        this.calculateProjection(projectionFrame);\n    }\n\n    /**\n     * Destroys the render target.\n     *\n     */\n    destroy()\n    {\n        this.frameBuffer.destroy();\n\n        this.frameBuffer = null;\n        this.texture = null;\n    }\n}\n","/**\n * Generic Mask Stack data structure\n *\n * @memberof PIXI\n * @function createIndicesForQuads\n * @private\n * @param {number} size - Number of quads\n * @return {Uint16Array} indices\n */\nexport default function createIndicesForQuads(size)\n{\n    // the total number of indices in our array, there are 6 points per quad.\n\n    const totalIndices = size * 6;\n\n    const indices = new Uint16Array(totalIndices);\n\n    // fill the indices with the quads to draw\n    for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4)\n    {\n        indices[i + 0] = j + 0;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 0;\n        indices[i + 4] = j + 2;\n        indices[i + 5] = j + 3;\n    }\n\n    return indices;\n}\n","import glCore from 'pixi-gl-core';\nimport createIndicesForQuads from '../../../utils/createIndicesForQuads';\n\n/**\n * Helper class to create a quad\n *\n * @class\n * @memberof PIXI\n */\nexport default class Quad\n{\n    /**\n     * @param {WebGLRenderingContext} gl - The gl context for this quad to use.\n     * @param {object} state - TODO: Description\n     */\n    constructor(gl, state)\n    {\n        /*\n         * the current WebGL drawing context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        /**\n         * An array of vertices\n         *\n         * @member {Float32Array}\n         */\n        this.vertices = new Float32Array([\n            -1, -1,\n            1, -1,\n            1, 1,\n            -1, 1,\n        ]);\n\n        /**\n         * The Uvs of the quad\n         *\n         * @member {Float32Array}\n         */\n        this.uvs = new Float32Array([\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n        ]);\n\n        this.interleaved = new Float32Array(8 * 2);\n\n        for (let i = 0; i < 4; i++)\n        {\n            this.interleaved[i * 4] = this.vertices[(i * 2)];\n            this.interleaved[(i * 4) + 1] = this.vertices[(i * 2) + 1];\n            this.interleaved[(i * 4) + 2] = this.uvs[i * 2];\n            this.interleaved[(i * 4) + 3] = this.uvs[(i * 2) + 1];\n        }\n\n        /*\n         * @member {Uint16Array} An array containing the indices of the vertices\n         */\n        this.indices = createIndicesForQuads(1);\n\n        /*\n         * @member {glCore.GLBuffer} The vertex buffer\n         */\n        this.vertexBuffer = glCore.GLBuffer.createVertexBuffer(gl, this.interleaved, gl.STATIC_DRAW);\n\n        /*\n         * @member {glCore.GLBuffer} The index buffer\n         */\n        this.indexBuffer = glCore.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n        /*\n         * @member {glCore.VertexArrayObject} The index buffer\n         */\n        this.vao = new glCore.VertexArrayObject(gl, state);\n    }\n\n    /**\n     * Initialises the vaos and uses the shader.\n     *\n     * @param {PIXI.Shader} shader - the shader to use\n     */\n    initVao(shader)\n    {\n        this.vao.clear()\n        .addIndex(this.indexBuffer)\n        .addAttribute(this.vertexBuffer, shader.attributes.aVertexPosition, this.gl.FLOAT, false, 4 * 4, 0)\n        .addAttribute(this.vertexBuffer, shader.attributes.aTextureCoord, this.gl.FLOAT, false, 4 * 4, 2 * 4);\n    }\n\n    /**\n     * Maps two Rectangle to the quad.\n     *\n     * @param {PIXI.Rectangle} targetTextureFrame - the first rectangle\n     * @param {PIXI.Rectangle} destinationFrame - the second rectangle\n     * @return {PIXI.Quad} Returns itself.\n     */\n    map(targetTextureFrame, destinationFrame)\n    {\n        let x = 0; // destinationFrame.x / targetTextureFrame.width;\n        let y = 0; // destinationFrame.y / targetTextureFrame.height;\n\n        this.uvs[0] = x;\n        this.uvs[1] = y;\n\n        this.uvs[2] = x + (destinationFrame.width / targetTextureFrame.width);\n        this.uvs[3] = y;\n\n        this.uvs[4] = x + (destinationFrame.width / targetTextureFrame.width);\n        this.uvs[5] = y + (destinationFrame.height / targetTextureFrame.height);\n\n        this.uvs[6] = x;\n        this.uvs[7] = y + (destinationFrame.height / targetTextureFrame.height);\n\n        x = destinationFrame.x;\n        y = destinationFrame.y;\n\n        this.vertices[0] = x;\n        this.vertices[1] = y;\n\n        this.vertices[2] = x + destinationFrame.width;\n        this.vertices[3] = y;\n\n        this.vertices[4] = x + destinationFrame.width;\n        this.vertices[5] = y + destinationFrame.height;\n\n        this.vertices[6] = x;\n        this.vertices[7] = y + destinationFrame.height;\n\n        return this;\n    }\n\n    /**\n     * Binds the buffer and uploads the data\n     *\n     * @return {PIXI.Quad} Returns itself.\n     */\n    upload()\n    {\n        for (let i = 0; i < 4; i++)\n        {\n            this.interleaved[i * 4] = this.vertices[(i * 2)];\n            this.interleaved[(i * 4) + 1] = this.vertices[(i * 2) + 1];\n            this.interleaved[(i * 4) + 2] = this.uvs[i * 2];\n            this.interleaved[(i * 4) + 3] = this.uvs[(i * 2) + 1];\n        }\n\n        this.vertexBuffer.upload(this.interleaved);\n\n        return this;\n    }\n\n    /**\n     * Removes this quad from WebGL\n     */\n    destroy()\n    {\n        const gl = this.gl;\n\n        gl.deleteBuffer(this.vertexBuffer);\n        gl.deleteBuffer(this.indexBuffer);\n    }\n}\n","import { GLShader } from 'pixi-gl-core';\nimport settings from './settings';\n\nconst { PRECISION } = settings;\n\nfunction checkPrecision(src)\n{\n    if (src instanceof Array)\n    {\n        if (src[0].substring(0, 9) !== 'precision')\n        {\n            const copy = src.slice(0);\n\n            copy.unshift(`precision ${PRECISION} float;`);\n\n            return copy;\n        }\n    }\n    else if (src.substring(0, 9) !== 'precision')\n    {\n        return `precision ${PRECISION} float;\\n${src}`;\n    }\n\n    return src;\n}\n\n/**\n * Wrapper class, webGL Shader for Pixi.\n * Adds precision string if vertexSrc or fragmentSrc have no mention of it.\n *\n * @class\n * @extends GLShader\n * @memberof PIXI\n */\nexport default class Shader extends GLShader\n{\n    /**\n     *\n     * @param {WebGLRenderingContext} gl - The current WebGL rendering context\n     * @param {string|string[]} vertexSrc - The vertex shader source as an array of strings.\n     * @param {string|string[]} fragmentSrc - The fragment shader source as an array of strings.\n     */\n    constructor(gl, vertexSrc, fragmentSrc)\n    {\n        super(gl, checkPrecision(vertexSrc), checkPrecision(fragmentSrc));\n    }\n}\n","import { Matrix } from '../../../math';\n\n/*\n * Calculates the mapped matrix\n * @param filterArea {Rectangle} The filter area\n * @param sprite {Sprite} the target sprite\n * @param outputMatrix {Matrix} @alvin\n */\n// TODO playing around here.. this is temporary - (will end up in the shader)\n// this returns a matrix that will normalise map filter cords in the filter to screen space\nexport function calculateScreenSpaceMatrix(outputMatrix, filterArea, textureSize)\n{\n     // let worldTransform = sprite.worldTransform.copy(Matrix.TEMP_MATRIX),\n    // let texture = {width:1136, height:700};//sprite._texture.baseTexture;\n\n    // TODO unwrap?\n    const mappedMatrix = outputMatrix.identity();\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    mappedMatrix.scale(textureSize.width, textureSize.height);\n\n    return mappedMatrix;\n}\n\nexport function calculateNormalizedScreenSpaceMatrix(outputMatrix, filterArea, textureSize)\n{\n    const mappedMatrix = outputMatrix.identity();\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    const translateScaleX = (textureSize.width / filterArea.width);\n    const translateScaleY = (textureSize.height / filterArea.height);\n\n    mappedMatrix.scale(translateScaleX, translateScaleY);\n\n    return mappedMatrix;\n}\n\n// this will map the filter coord so that a texture can be used based on the transform of a sprite\nexport function calculateSpriteMatrix(outputMatrix, filterArea, textureSize, sprite)\n{\n    const worldTransform = sprite.worldTransform.copy(Matrix.TEMP_MATRIX);\n    const texture = sprite._texture.baseTexture;\n\n    // TODO unwrap?\n    const mappedMatrix = outputMatrix.identity();\n\n    // scale..\n    const ratio = textureSize.height / textureSize.width;\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    mappedMatrix.scale(1, ratio);\n\n    const translateScaleX = (textureSize.width / texture.width);\n    const translateScaleY = (textureSize.height / texture.height);\n\n    worldTransform.tx /= texture.width * translateScaleX;\n\n    // this...?  free beer for anyone who can explain why this makes sense!\n    worldTransform.ty /= texture.width * translateScaleX;\n    // worldTransform.ty /= texture.height * translateScaleY;\n\n    worldTransform.invert();\n    mappedMatrix.prepend(worldTransform);\n\n    // apply inverse scale..\n    mappedMatrix.scale(1, 1 / ratio);\n\n    mappedMatrix.scale(translateScaleX, translateScaleY);\n\n    mappedMatrix.translate(sprite.anchor.x, sprite.anchor.y);\n\n    return mappedMatrix;\n}\n","import WebGLManager from './WebGLManager';\nimport RenderTarget from '../utils/RenderTarget';\nimport Quad from '../utils/Quad';\nimport { Rectangle } from '../../../math';\nimport Shader from '../../../Shader';\nimport * as filterTransforms from '../filters/filterTransforms';\nimport bitTwiddle from 'bit-twiddle';\n\n/**\n * @ignore\n * @class\n */\nclass FilterState\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        this.renderTarget = null;\n        this.sourceFrame = new Rectangle();\n        this.destinationFrame = new Rectangle();\n        this.filters = [];\n        this.target = null;\n        this.resolution = 1;\n    }\n}\n\n/**\n * @class\n * @memberof PIXI\n * @extends PIXI.WebGLManager\n */\nexport default class FilterManager extends WebGLManager\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        super(renderer);\n\n        this.gl = this.renderer.gl;\n        // know about sprites!\n        this.quad = new Quad(this.gl, renderer.state.attribState);\n\n        this.shaderCache = {};\n        // todo add default!\n        this.pool = {};\n\n        this.filterData = null;\n    }\n\n    /**\n     * Adds a new filter to the manager.\n     *\n     * @param {PIXI.DisplayObject} target - The target of the filter to render.\n     * @param {PIXI.Filter[]} filters - The filters to apply.\n     */\n    pushFilter(target, filters)\n    {\n        const renderer = this.renderer;\n\n        let filterData = this.filterData;\n\n        if (!filterData)\n        {\n            filterData = this.renderer._activeRenderTarget.filterStack;\n\n            // add new stack\n            const filterState = new FilterState();\n\n            filterState.sourceFrame = filterState.destinationFrame = this.renderer._activeRenderTarget.size;\n            filterState.renderTarget = renderer._activeRenderTarget;\n\n            this.renderer._activeRenderTarget.filterData = filterData = {\n                index: 0,\n                stack: [filterState],\n            };\n\n            this.filterData = filterData;\n        }\n\n        // get the current filter state..\n        let currentState = filterData.stack[++filterData.index];\n\n        if (!currentState)\n        {\n            currentState = filterData.stack[filterData.index] = new FilterState();\n        }\n\n        // for now we go off the filter of the first resolution..\n        const resolution = filters[0].resolution;\n        const padding = filters[0].padding | 0;\n        const targetBounds = target.filterArea || target.getBounds(true);\n        const sourceFrame = currentState.sourceFrame;\n        const destinationFrame = currentState.destinationFrame;\n\n        sourceFrame.x = ((targetBounds.x * resolution) | 0) / resolution;\n        sourceFrame.y = ((targetBounds.y * resolution) | 0) / resolution;\n        sourceFrame.width = ((targetBounds.width * resolution) | 0) / resolution;\n        sourceFrame.height = ((targetBounds.height * resolution) | 0) / resolution;\n\n        if (filterData.stack[0].renderTarget.transform)\n        { //\n\n            // TODO we should fit the rect around the transform..\n        }\n        else\n        {\n            sourceFrame.fit(filterData.stack[0].destinationFrame);\n        }\n\n        // lets apply the padding After we fit the element to the screen.\n        // this should stop the strange side effects that can occur when cropping to the edges\n        sourceFrame.pad(padding);\n\n        destinationFrame.width = sourceFrame.width;\n        destinationFrame.height = sourceFrame.height;\n\n        // lets play the padding after we fit the element to the screen.\n        // this should stop the strange side effects that can occur when cropping to the edges\n\n        const renderTarget = this.getPotRenderTarget(renderer.gl, sourceFrame.width, sourceFrame.height, resolution);\n\n        currentState.target = target;\n        currentState.filters = filters;\n        currentState.resolution = resolution;\n        currentState.renderTarget = renderTarget;\n\n        // bind the render target to draw the shape in the top corner..\n\n        renderTarget.setFrame(destinationFrame, sourceFrame);\n        // bind the render target\n        renderer.bindRenderTarget(renderTarget);\n\n        // clear the renderTarget\n        renderer.clear();// [0.5,0.5,0.5, 1.0]);\n    }\n\n    /**\n     * Pops off the filter and applies it.\n     *\n     */\n    popFilter()\n    {\n        const filterData = this.filterData;\n\n        const lastState = filterData.stack[filterData.index - 1];\n        const currentState = filterData.stack[filterData.index];\n\n        this.quad.map(currentState.renderTarget.size, currentState.sourceFrame).upload();\n\n        const filters = currentState.filters;\n\n        if (filters.length === 1)\n        {\n            filters[0].apply(this, currentState.renderTarget, lastState.renderTarget, false);\n            this.freePotRenderTarget(currentState.renderTarget);\n        }\n        else\n        {\n            let flip = currentState.renderTarget;\n            let flop = this.getPotRenderTarget(\n                this.renderer.gl,\n                currentState.sourceFrame.width,\n                currentState.sourceFrame.height,\n                currentState.resolution\n            );\n\n            flop.setFrame(currentState.destinationFrame, currentState.sourceFrame);\n\n            let i = 0;\n\n            for (i = 0; i < filters.length - 1; ++i)\n            {\n                filters[i].apply(this, flip, flop, true);\n\n                const t = flip;\n\n                flip = flop;\n                flop = t;\n            }\n\n            filters[i].apply(this, flip, lastState.renderTarget, false);\n\n            this.freePotRenderTarget(flip);\n            this.freePotRenderTarget(flop);\n        }\n\n        filterData.index--;\n\n        if (filterData.index === 0)\n        {\n            this.filterData = null;\n        }\n    }\n\n    /**\n     * Draws a filter.\n     *\n     * @param {PIXI.Filter} filter - The filter to draw.\n     * @param {PIXI.RenderTarget} input - The input render target.\n     * @param {PIXI.RenderTarget} output - The target to output to.\n     * @param {boolean} clear - Should the output be cleared before rendering to it\n     */\n    applyFilter(filter, input, output, clear)\n    {\n        const renderer = this.renderer;\n        const gl = renderer.gl;\n\n        let shader = filter.glShaders[renderer.CONTEXT_UID];\n\n        // cacheing..\n        if (!shader)\n        {\n            if (filter.glShaderKey)\n            {\n                shader = this.shaderCache[filter.glShaderKey];\n\n                if (!shader)\n                {\n                    shader = new Shader(this.gl, filter.vertexSrc, filter.fragmentSrc);\n\n                    filter.glShaders[renderer.CONTEXT_UID] = this.shaderCache[filter.glShaderKey] = shader;\n                }\n            }\n            else\n            {\n                shader = filter.glShaders[renderer.CONTEXT_UID] = new Shader(this.gl, filter.vertexSrc, filter.fragmentSrc);\n            }\n\n            // TODO - this only needs to be done once?\n            renderer.bindVao(null);\n\n            this.quad.initVao(shader);\n        }\n\n        renderer.bindVao(this.quad.vao);\n\n        renderer.bindRenderTarget(output);\n\n        if (clear)\n        {\n            gl.disable(gl.SCISSOR_TEST);\n            renderer.clear();// [1, 1, 1, 1]);\n            gl.enable(gl.SCISSOR_TEST);\n        }\n\n        // in case the render target is being masked using a scissor rect\n        if (output === renderer.maskManager.scissorRenderTarget)\n        {\n            renderer.maskManager.pushScissorMask(null, renderer.maskManager.scissorData);\n        }\n\n        renderer.bindShader(shader);\n\n        // this syncs the pixi filters  uniforms with glsl uniforms\n        this.syncUniforms(shader, filter);\n\n        renderer.state.setBlendMode(filter.blendMode);\n\n        // temporary bypass cache..\n        const tex = this.renderer.boundTextures[0];\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, input.texture.texture);\n\n        this.quad.vao.draw(this.renderer.gl.TRIANGLES, 6, 0);\n\n        // restore cache.\n        gl.bindTexture(gl.TEXTURE_2D, tex._glTextures[this.renderer.CONTEXT_UID].texture);\n    }\n\n    /**\n     * Uploads the uniforms of the filter.\n     *\n     * @param {GLShader} shader - The underlying gl shader.\n     * @param {PIXI.Filter} filter - The filter we are synchronizing.\n     */\n    syncUniforms(shader, filter)\n    {\n        const uniformData = filter.uniformData;\n        const uniforms = filter.uniforms;\n\n        // 0 is reserved for the pixi texture so we start at 1!\n        let textureCount = 1;\n        let currentState;\n\n        if (shader.uniforms.data.filterArea)\n        {\n            currentState = this.filterData.stack[this.filterData.index];\n            const filterArea = shader.uniforms.filterArea;\n\n            filterArea[0] = currentState.renderTarget.size.width;\n            filterArea[1] = currentState.renderTarget.size.height;\n            filterArea[2] = currentState.sourceFrame.x;\n            filterArea[3] = currentState.sourceFrame.y;\n\n            shader.uniforms.filterArea = filterArea;\n        }\n\n        // use this to clamp displaced texture coords so they belong to filterArea\n        // see displacementFilter fragment shader for an example\n        if (shader.uniforms.data.filterClamp)\n        {\n            currentState = this.filterData.stack[this.filterData.index];\n\n            const filterClamp = shader.uniforms.filterClamp;\n\n            filterClamp[0] = 0;\n            filterClamp[1] = 0;\n            filterClamp[2] = (currentState.sourceFrame.width - 1) / currentState.renderTarget.size.width;\n            filterClamp[3] = (currentState.sourceFrame.height - 1) / currentState.renderTarget.size.height;\n\n            shader.uniforms.filterClamp = filterClamp;\n        }\n\n        // TODO Cacheing layer..\n        for (const i in uniformData)\n        {\n            if (uniformData[i].type === 'sampler2D' && uniforms[i] !== 0)\n            {\n                if (uniforms[i].baseTexture)\n                {\n                    shader.uniforms[i] = this.renderer.bindTexture(uniforms[i].baseTexture, textureCount);\n                }\n                else\n                {\n                    shader.uniforms[i] = textureCount;\n\n                    // TODO\n                    // this is helpful as renderTargets can also be set.\n                    // Although thinking about it, we could probably\n                    // make the filter texture cache return a RenderTexture\n                    // rather than a renderTarget\n                    const gl = this.renderer.gl;\n\n                    gl.activeTexture(gl.TEXTURE0 + textureCount);\n                    uniforms[i].texture.bind();\n                }\n\n                textureCount++;\n            }\n            else if (uniformData[i].type === 'mat3')\n            {\n                // check if its pixi matrix..\n                if (uniforms[i].a !== undefined)\n                {\n                    shader.uniforms[i] = uniforms[i].toArray(true);\n                }\n                else\n                {\n                    shader.uniforms[i] = uniforms[i];\n                }\n            }\n            else if (uniformData[i].type === 'vec2')\n            {\n                // check if its a point..\n                if (uniforms[i].x !== undefined)\n               {\n                    const val = shader.uniforms[i] || new Float32Array(2);\n\n                    val[0] = uniforms[i].x;\n                    val[1] = uniforms[i].y;\n                    shader.uniforms[i] = val;\n                }\n                else\n               {\n                    shader.uniforms[i] = uniforms[i];\n                }\n            }\n            else if (uniformData[i].type === 'float')\n            {\n                if (shader.uniforms.data[i].value !== uniformData[i])\n                {\n                    shader.uniforms[i] = uniforms[i];\n                }\n            }\n            else\n            {\n                shader.uniforms[i] = uniforms[i];\n            }\n        }\n    }\n\n    /**\n     * Gets a render target from the pool, or creates a new one.\n     *\n     * @param {boolean} clear - Should we clear the render texture when we get it?\n     * @param {number} resolution - The resolution of the target.\n     * @return {PIXI.RenderTarget} The new render target\n     */\n    getRenderTarget(clear, resolution)\n    {\n        const currentState = this.filterData.stack[this.filterData.index];\n        const renderTarget = this.getPotRenderTarget(\n            this.renderer.gl,\n            currentState.sourceFrame.width,\n            currentState.sourceFrame.height,\n            resolution || currentState.resolution\n        );\n\n        renderTarget.setFrame(currentState.destinationFrame, currentState.sourceFrame);\n\n        return renderTarget;\n    }\n\n    /**\n     * Returns a render target to the pool.\n     *\n     * @param {PIXI.RenderTarget} renderTarget - The render target to return.\n     */\n    returnRenderTarget(renderTarget)\n    {\n        this.freePotRenderTarget(renderTarget);\n    }\n\n    /**\n     * Calculates the mapped matrix.\n     *\n     * TODO playing around here.. this is temporary - (will end up in the shader)\n     * this returns a matrix that will normalise map filter cords in the filter to screen space\n     *\n     * @param {PIXI.Matrix} outputMatrix - the matrix to output to.\n     * @return {PIXI.Matrix} The mapped matrix.\n     */\n    calculateScreenSpaceMatrix(outputMatrix)\n    {\n        const currentState = this.filterData.stack[this.filterData.index];\n\n        return filterTransforms.calculateScreenSpaceMatrix(\n            outputMatrix,\n            currentState.sourceFrame,\n            currentState.renderTarget.size\n        );\n    }\n\n    /**\n     * Multiply vTextureCoord to this matrix to achieve (0,0,1,1) for filterArea\n     *\n     * @param {PIXI.Matrix} outputMatrix - The matrix to output to.\n     * @return {PIXI.Matrix} The mapped matrix.\n     */\n    calculateNormalizedScreenSpaceMatrix(outputMatrix)\n    {\n        const currentState = this.filterData.stack[this.filterData.index];\n\n        return filterTransforms.calculateNormalizedScreenSpaceMatrix(\n            outputMatrix,\n            currentState.sourceFrame,\n            currentState.renderTarget.size,\n            currentState.destinationFrame\n        );\n    }\n\n    /**\n     * This will map the filter coord so that a texture can be used based on the transform of a sprite\n     *\n     * @param {PIXI.Matrix} outputMatrix - The matrix to output to.\n     * @param {PIXI.Sprite} sprite - The sprite to map to.\n     * @return {PIXI.Matrix} The mapped matrix.\n     */\n    calculateSpriteMatrix(outputMatrix, sprite)\n    {\n        const currentState = this.filterData.stack[this.filterData.index];\n\n        return filterTransforms.calculateSpriteMatrix(\n            outputMatrix,\n            currentState.sourceFrame,\n            currentState.renderTarget.size,\n            sprite\n        );\n    }\n\n    /**\n     * Destroys this Filter Manager.\n     *\n     */\n    destroy()\n    {\n        this.shaderCache = [];\n        this.emptyPool();\n    }\n\n    /**\n     * Gets a Power-of-Two render texture.\n     *\n     * TODO move to a seperate class could be on renderer?\n     * also - could cause issue with multiple contexts?\n     *\n     * @private\n     * @param {WebGLRenderingContext} gl - The webgl rendering context\n     * @param {number} minWidth - The minimum width of the render target.\n     * @param {number} minHeight - The minimum height of the render target.\n     * @param {number} resolution - The resolution of the render target.\n     * @return {PIXI.RenderTarget} The new render target.\n     */\n    getPotRenderTarget(gl, minWidth, minHeight, resolution)\n    {\n        // TODO you could return a bigger texture if there is not one in the pool?\n        minWidth = bitTwiddle.nextPow2(minWidth * resolution);\n        minHeight = bitTwiddle.nextPow2(minHeight * resolution);\n\n        const key = ((minWidth & 0xFFFF) << 16) | (minHeight & 0xFFFF);\n\n        if (!this.pool[key])\n        {\n            this.pool[key] = [];\n        }\n\n        let renderTarget = this.pool[key].pop();\n\n        // creating render target will cause texture to be bound!\n        if (!renderTarget)\n        {\n            // temporary bypass cache..\n            const tex = this.renderer.boundTextures[0];\n\n            gl.activeTexture(gl.TEXTURE0);\n\n            // internally - this will cause a texture to be bound..\n            renderTarget = new RenderTarget(gl, minWidth, minHeight, null, 1);\n\n            // set the current one back\n            gl.bindTexture(gl.TEXTURE_2D, tex._glTextures[this.renderer.CONTEXT_UID].texture);\n        }\n\n        // manually tweak the resolution...\n        // this will not modify the size of the frame buffer, just its resolution.\n        renderTarget.resolution = resolution;\n        renderTarget.defaultFrame.width = renderTarget.size.width = minWidth / resolution;\n        renderTarget.defaultFrame.height = renderTarget.size.height = minHeight / resolution;\n\n        return renderTarget;\n    }\n\n    /**\n     * Empties the texture pool.\n     *\n     */\n    emptyPool()\n    {\n        for (const i in this.pool)\n        {\n            const textures = this.pool[i];\n\n            if (textures)\n            {\n                for (let j = 0; j < textures.length; j++)\n                {\n                    textures[j].destroy(true);\n                }\n            }\n        }\n\n        this.pool = {};\n    }\n\n    /**\n     * Frees a render target back into the pool.\n     *\n     * @param {PIXI.RenderTarget} renderTarget - The renderTarget to free\n     */\n    freePotRenderTarget(renderTarget)\n    {\n        const minWidth = renderTarget.size.width * renderTarget.resolution;\n        const minHeight = renderTarget.size.height * renderTarget.resolution;\n        const key = ((minWidth & 0xFFFF) << 16) | (minHeight & 0xFFFF);\n\n        this.pool[key].push(renderTarget);\n    }\n}\n","import WebGLManager from '../managers/WebGLManager';\n\n/**\n * Base for a common object renderer that can be used as a system renderer plugin.\n *\n * @class\n * @extends PIXI.WebGLManager\n * @memberof PIXI\n */\nexport default class ObjectRenderer extends WebGLManager\n{\n    /**\n     * Starts the renderer and sets the shader\n     *\n     */\n    start()\n    {\n        // set the shader..\n    }\n\n    /**\n     * Stops the renderer\n     *\n     */\n    stop()\n    {\n        this.flush();\n    }\n\n    /**\n     * Stub method for rendering content and emptying the current batch.\n     *\n     */\n    flush()\n    {\n        // flush!\n    }\n\n    /**\n     * Renders an object\n     *\n     * @param {PIXI.DisplayObject} object - The object to render.\n     */\n    render(object) // eslint-disable-line no-unused-vars\n    {\n        // render the object\n    }\n}\n","import { GLTexture } from 'pixi-gl-core';\nimport { WRAP_MODES, SCALE_MODES } from '../../const';\nimport RenderTarget from './utils/RenderTarget';\nimport { removeItems } from '../../utils';\n\n/**\n * Helper class to create a webGL Texture\n *\n * @class\n * @memberof PIXI\n */\nexport default class TextureManager\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    constructor(renderer)\n    {\n        /**\n         * A reference to the current renderer\n         *\n         * @member {PIXI.WebGLRenderer}\n         */\n        this.renderer = renderer;\n\n        /**\n         * The current WebGL rendering context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = renderer.gl;\n\n        /**\n         * Track textures in the renderer so we can no longer listen to them on destruction.\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this._managedTextures = [];\n    }\n\n    /**\n     * Binds a texture.\n     *\n     */\n    bindTexture()\n    {\n        // empty\n    }\n\n    /**\n     * Gets a texture.\n     *\n     */\n    getTexture()\n    {\n        // empty\n    }\n\n    /**\n     * Updates and/or Creates a WebGL texture for the renderer's context.\n     *\n     * @param {PIXI.BaseTexture|PIXI.Texture} texture - the texture to update\n     * @param {Number} location - the location the texture will be bound to.\n     * @return {GLTexture} The gl texture.\n     */\n    updateTexture(texture, location)\n    {\n        // assume it good!\n        // texture = texture.baseTexture || texture;\n        location = location || 0;\n\n        const gl = this.gl;\n\n        const isRenderTexture = !!texture._glRenderTargets;\n\n        if (!texture.hasLoaded)\n        {\n            return null;\n        }\n\n        gl.activeTexture(gl.TEXTURE0 + location);\n\n        let glTexture = texture._glTextures[this.renderer.CONTEXT_UID];\n\n        if (!glTexture)\n        {\n            if (isRenderTexture)\n            {\n                const renderTarget = new RenderTarget(\n                    this.gl,\n                    texture.width,\n                    texture.height,\n                    texture.scaleMode,\n                    texture.resolution\n                );\n\n                renderTarget.resize(texture.width, texture.height);\n                texture._glRenderTargets[this.renderer.CONTEXT_UID] = renderTarget;\n                glTexture = renderTarget.texture;\n            }\n            else\n            {\n                glTexture = new GLTexture(this.gl, null, null, null, null);\n                glTexture.bind(location);\n                glTexture.premultiplyAlpha = true;\n                glTexture.upload(texture.source);\n            }\n\n            texture._glTextures[this.renderer.CONTEXT_UID] = glTexture;\n\n            texture.on('update', this.updateTexture, this);\n            texture.on('dispose', this.destroyTexture, this);\n\n            this._managedTextures.push(texture);\n\n            if (texture.isPowerOfTwo)\n            {\n                if (texture.mipmap)\n                {\n                    glTexture.enableMipmap();\n                }\n\n                if (texture.wrapMode === WRAP_MODES.CLAMP)\n                {\n                    glTexture.enableWrapClamp();\n                }\n                else if (texture.wrapMode === WRAP_MODES.REPEAT)\n                {\n                    glTexture.enableWrapRepeat();\n                }\n                else\n                {\n                    glTexture.enableWrapMirrorRepeat();\n                }\n            }\n            else\n            {\n                glTexture.enableWrapClamp();\n            }\n\n            if (texture.scaleMode === SCALE_MODES.NEAREST)\n            {\n                glTexture.enableNearestScaling();\n            }\n            else\n            {\n                glTexture.enableLinearScaling();\n            }\n        }\n        // the texture already exists so we only need to update it..\n        else if (isRenderTexture)\n        {\n            texture._glRenderTargets[this.renderer.CONTEXT_UID].resize(texture.width, texture.height);\n        }\n        else\n        {\n            glTexture.upload(texture.source);\n        }\n\n        this.renderer.boundTextures[location] = texture;\n\n        return glTexture;\n    }\n\n    /**\n     * Deletes the texture from WebGL\n     *\n     * @param {PIXI.BaseTexture|PIXI.Texture} texture - the texture to destroy\n     * @param {boolean} [skipRemove=false] - Whether to skip removing the texture from the TextureManager.\n     */\n    destroyTexture(texture, skipRemove)\n    {\n        texture = texture.baseTexture || texture;\n\n        if (!texture.hasLoaded)\n        {\n            return;\n        }\n\n        if (texture._glTextures[this.renderer.CONTEXT_UID])\n        {\n            this.renderer.unbindTexture(texture);\n\n            texture._glTextures[this.renderer.CONTEXT_UID].destroy();\n            texture.off('update', this.updateTexture, this);\n            texture.off('dispose', this.destroyTexture, this);\n\n            delete texture._glTextures[this.renderer.CONTEXT_UID];\n\n            if (!skipRemove)\n            {\n                const i = this._managedTextures.indexOf(texture);\n\n                if (i !== -1)\n                {\n                    removeItems(this._managedTextures, i, 1);\n                }\n            }\n        }\n    }\n\n    /**\n     * Deletes all the textures from WebGL\n     */\n    removeAll()\n    {\n        // empty all the old gl textures as they are useless now\n        for (let i = 0; i < this._managedTextures.length; ++i)\n        {\n            const texture = this._managedTextures[i];\n\n            if (texture._glTextures[this.renderer.CONTEXT_UID])\n            {\n                delete texture._glTextures[this.renderer.CONTEXT_UID];\n            }\n        }\n    }\n\n    /**\n     * Destroys this manager and removes all its textures\n     */\n    destroy()\n    {\n        // destroy managed textures\n        for (let i = 0; i < this._managedTextures.length; ++i)\n        {\n            const texture = this._managedTextures[i];\n\n            this.destroyTexture(texture, true);\n\n            texture.off('update', this.updateTexture, this);\n            texture.off('dispose', this.destroyTexture, this);\n        }\n\n        this._managedTextures = null;\n    }\n}\n","import { GC_MODES } from '../../const';\nimport settings from '../../settings';\n\nconst { GC_MODE, GC_MAX_IDLE, GC_MAX_CHECK_COUNT } = settings;\n\n/**\n * TextureGarbageCollector. This class manages the GPU and ensures that it does not get clogged\n * up with textures that are no longer being used.\n *\n * @class\n * @memberof PIXI\n */\nexport default class TextureGarbageCollector\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        this.renderer = renderer;\n\n        this.count = 0;\n        this.checkCount = 0;\n        this.maxIdle = GC_MAX_IDLE;\n        this.checkCountMax = GC_MAX_CHECK_COUNT;\n        this.mode = GC_MODE;\n    }\n\n    /**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */\n    update()\n    {\n        this.count++;\n\n        if (this.mode === GC_MODES.MANUAL)\n        {\n            return;\n        }\n\n        this.checkCount++;\n\n        if (this.checkCount > this.checkCountMax)\n        {\n            this.checkCount = 0;\n\n            this.run();\n        }\n    }\n\n    /**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */\n    run()\n    {\n        const tm = this.renderer.textureManager;\n        const managedTextures =  tm._managedTextures;\n        let wasRemoved = false;\n\n        for (let i = 0; i < managedTextures.length; i++)\n        {\n            const texture = managedTextures[i];\n\n            // only supports non generated textures at the moment!\n            if (!texture._glRenderTargets && this.count - texture.touched > this.maxIdle)\n            {\n                tm.destroyTexture(texture, true);\n                managedTextures[i] = null;\n                wasRemoved = true;\n            }\n        }\n\n        if (wasRemoved)\n        {\n            let j = 0;\n\n            for (let i = 0; i < managedTextures.length; i++)\n            {\n                if (managedTextures[i] !== null)\n                {\n                    managedTextures[j++] = managedTextures[i];\n                }\n            }\n\n            managedTextures.length = j;\n        }\n    }\n\n    /**\n     * Removes all the textures within the specified displayObject and its children from the GPU\n     *\n     * @param {PIXI.DisplayObject} displayObject - the displayObject to remove the textures from.\n     */\n    unload(displayObject)\n    {\n        const tm = this.renderer.textureManager;\n\n        if (displayObject._texture)\n        {\n            tm.destroyTexture(displayObject._texture, true);\n        }\n\n        for (let i = displayObject.children.length - 1; i >= 0; i--)\n        {\n            this.unload(displayObject.children[i]);\n        }\n    }\n}\n","import { BLEND_MODES } from '../../../const';\n\n/**\n * Maps gl blend combinations to WebGL.\n *\n * @memberof PIXI\n * @function mapWebGLBlendModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\nexport default function mapWebGLBlendModesToPixi(gl, array = [])\n{\n    // TODO - premultiply alpha would be different.\n    // add a boolean for that!\n    array[BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.ADD] = [gl.ONE, gl.DST_ALPHA];\n    array[BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR];\n    array[BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n\n    return array;\n}\n","import mapWebGLBlendModesToPixi from './utils/mapWebGLBlendModesToPixi';\n\nconst BLEND = 0;\nconst DEPTH_TEST = 1;\nconst FRONT_FACE = 2;\nconst CULL_FACE = 3;\nconst BLEND_FUNC = 4;\n\n/**\n * A WebGL state machines\n *\n * @memberof PIXI\n * @class\n */\nexport default class WebGLState\n{\n    /**\n     * @param {WebGLRenderingContext} gl - The current WebGL rendering context\n     */\n    constructor(gl)\n    {\n        /**\n         * The current active state\n         *\n         * @member {Uint8Array}\n         */\n        this.activeState = new Uint8Array(16);\n\n        /**\n         * The default state\n         *\n         * @member {Uint8Array}\n         */\n        this.defaultState = new Uint8Array(16);\n\n        // default blend mode..\n        this.defaultState[0] = 1;\n\n        /**\n         * The current state index in the stack\n         *\n         * @member {number}\n         * @private\n         */\n        this.stackIndex = 0;\n\n        /**\n         * The stack holding all the different states\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this.stack = [];\n\n        /**\n         * The current WebGL rendering context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        this.maxAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n        this.attribState = {\n            tempAttribState: new Array(this.maxAttribs),\n            attribState: new Array(this.maxAttribs),\n        };\n\n        this.blendModes = mapWebGLBlendModesToPixi(gl);\n\n        // check we have vao..\n        this.nativeVaoExtension = (\n            gl.getExtension('OES_vertex_array_object')\n            || gl.getExtension('MOZ_OES_vertex_array_object')\n            || gl.getExtension('WEBKIT_OES_vertex_array_object')\n        );\n    }\n\n    /**\n     * Pushes a new active state\n     */\n    push()\n    {\n        // next state..\n        let state = this.stack[++this.stackIndex];\n\n        if (!state)\n        {\n            state = this.stack[this.stackIndex] = new Uint8Array(16);\n        }\n\n        // copy state..\n        // set active state so we can force overrides of gl state\n        for (let i = 0; i < this.activeState.length; i++)\n        {\n            this.activeState[i] = state[i];\n        }\n    }\n\n    /**\n     * Pops a state out\n     */\n    pop()\n    {\n        const state = this.stack[--this.stackIndex];\n\n        this.setState(state);\n    }\n\n    /**\n     * Sets the current state\n     *\n     * @param {*} state - The state to set.\n     */\n    setState(state)\n    {\n        this.setBlend(state[BLEND]);\n        this.setDepthTest(state[DEPTH_TEST]);\n        this.setFrontFace(state[FRONT_FACE]);\n        this.setCullFace(state[CULL_FACE]);\n        this.setBlendMode(state[BLEND_FUNC]);\n    }\n\n    /**\n     * Enables or disabled blending.\n     *\n     * @param {boolean} value - Turn on or off webgl blending.\n     */\n    setBlend(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[BLEND] === value)\n        {\n            return;\n        }\n\n        this.activeState[BLEND] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.BLEND);\n    }\n\n    /**\n     * Sets the blend mode.\n     *\n     * @param {number} value - The blend mode to set to.\n     */\n    setBlendMode(value)\n    {\n        if (value === this.activeState[BLEND_FUNC])\n        {\n            return;\n        }\n\n        this.activeState[BLEND_FUNC] = value;\n\n        this.gl.blendFunc(this.blendModes[value][0], this.blendModes[value][1]);\n    }\n\n    /**\n     * Sets whether to enable or disable depth test.\n     *\n     * @param {boolean} value - Turn on or off webgl depth testing.\n     */\n    setDepthTest(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[DEPTH_TEST] === value)\n        {\n            return;\n        }\n\n        this.activeState[DEPTH_TEST] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.DEPTH_TEST);\n    }\n\n    /**\n     * Sets whether to enable or disable cull face.\n     *\n     * @param {boolean} value - Turn on or off webgl cull face.\n     */\n    setCullFace(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[CULL_FACE] === value)\n        {\n            return;\n        }\n\n        this.activeState[CULL_FACE] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.CULL_FACE);\n    }\n\n    /**\n     * Sets the gl front face.\n     *\n     * @param {boolean} value - true is clockwise and false is counter-clockwise\n     */\n    setFrontFace(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[FRONT_FACE] === value)\n        {\n            return;\n        }\n\n        this.activeState[FRONT_FACE] = value;\n        this.gl.frontFace(this.gl[value ? 'CW' : 'CCW']);\n    }\n\n    /**\n     * Disables all the vaos in use\n     *\n     */\n    resetAttributes()\n    {\n        for (let i = 0; i < this.attribState.tempAttribState.length; i++)\n        {\n            this.attribState.tempAttribState[i] = 0;\n        }\n\n        for (let i = 0; i < this.attribState.attribState.length; i++)\n        {\n            this.attribState.attribState[i] = 0;\n        }\n\n        // im going to assume one is always active for performance reasons.\n        for (let i = 1; i < this.maxAttribs; i++)\n        {\n            this.gl.disableVertexAttribArray(i);\n        }\n    }\n\n    // used\n    /**\n     * Resets all the logic and disables the vaos\n     */\n    resetToDefault()\n    {\n        // unbind any VAO if they exist..\n        if (this.nativeVaoExtension)\n        {\n            this.nativeVaoExtension.bindVertexArrayOES(null);\n        }\n\n        // reset all attributes..\n        this.resetAttributes();\n\n        // set active state so we can force overrides of gl state\n        for (let i = 0; i < this.activeState.length; ++i)\n        {\n            this.activeState[i] = 32;\n        }\n\n        this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        this.setState(this.defaultState);\n    }\n}\n","import { DRAW_MODES } from '../../../const';\n\n/**\n * Generic Mask Stack data structure.\n *\n * @memberof PIXI\n * @function mapWebGLDrawModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n * @param {object} [object={}] - The object to map into\n * @return {object} The mapped draw modes.\n */\nexport default function mapWebGLDrawModesToPixi(gl, object = {})\n{\n    object[DRAW_MODES.POINTS] = gl.POINTS;\n    object[DRAW_MODES.LINES] = gl.LINES;\n    object[DRAW_MODES.LINE_LOOP] = gl.LINE_LOOP;\n    object[DRAW_MODES.LINE_STRIP] = gl.LINE_STRIP;\n    object[DRAW_MODES.TRIANGLES] = gl.TRIANGLES;\n    object[DRAW_MODES.TRIANGLE_STRIP] = gl.TRIANGLE_STRIP;\n    object[DRAW_MODES.TRIANGLE_FAN] = gl.TRIANGLE_FAN;\n\n    return object;\n}\n","export default function validateContext(gl)\n{\n    const attributes = gl.getContextAttributes();\n\n    // this is going to be fairly simple for now.. but at least we have room to grow!\n    if (!attributes.stencil)\n    {\n        /* eslint-disable no-console */\n        console.warn('Provided WebGL context does not have a stencil buffer, masks may not render correctly');\n        /* eslint-enable no-console */\n    }\n}\n","import SystemRenderer from '../SystemRenderer';\nimport MaskManager from './managers/MaskManager';\nimport StencilManager from './managers/StencilManager';\nimport FilterManager from './managers/FilterManager';\nimport RenderTarget from './utils/RenderTarget';\nimport ObjectRenderer from './utils/ObjectRenderer';\nimport TextureManager from './TextureManager';\nimport BaseTexture from '../../textures/BaseTexture';\nimport TextureGarbageCollector from './TextureGarbageCollector';\nimport WebGLState from './WebGLState';\nimport mapWebGLDrawModesToPixi from './utils/mapWebGLDrawModesToPixi';\nimport validateContext from './utils/validateContext';\nimport { pluginTarget } from '../../utils';\nimport glCore from 'pixi-gl-core';\nimport { RENDERER_TYPE } from '../../const';\n\nlet CONTEXT_UID = 0;\n\n/**\n * The WebGLRenderer draws the scene and all its content onto a webGL enabled canvas. This renderer\n * should be used for browsers that support webGL. This Render works by automatically managing webGLBatchs.\n * So no need for Sprite Batches or Sprite Clouds.\n * Don't forget to add the view to your DOM or you will not see anything :)\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.SystemRenderer\n */\nexport default class WebGLRenderer extends SystemRenderer\n{\n    /**\n     *\n     * @param {number} [width=0] - the width of the canvas view\n     * @param {number} [height=0] - the height of the canvas view\n     * @param {object} [options] - The optional renderer parameters\n     * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n     * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n     * @param {boolean} [options.autoResize=false] - If the render view is automatically resized, default false\n     * @param {boolean} [options.antialias=false] - sets antialias. If not available natively then FXAA\n     *  antialiasing is used\n     * @param {boolean} [options.forceFXAA=false] - forces FXAA antialiasing to be used over native.\n     *  FXAA is faster, but may not always look as great\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer.\n     *  The resolution of the renderer retina would be 2.\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the CanvasRenderer will clear\n     *  the canvas or not before the new render pass. If you wish to set this to false, you *must* set\n     *  preserveDrawingBuffer to `true`.\n     * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation,\n     *  enable this if you need to call toDataUrl on the webgl context.\n     * @param {boolean} [options.roundPixels=false] - If true Pixi will Math.floor() x/y values when\n     *  rendering, stopping pixel interpolation.\n     */\n    constructor(width, height, options = {})\n    {\n        super('WebGL', width, height, options);\n\n        /**\n         * The type of this renderer as a standardised const\n         *\n         * @member {number}\n         * @see PIXI.RENDERER_TYPE\n         */\n        this.type = RENDERER_TYPE.WEBGL;\n\n        this.handleContextLost = this.handleContextLost.bind(this);\n        this.handleContextRestored = this.handleContextRestored.bind(this);\n\n        this.view.addEventListener('webglcontextlost', this.handleContextLost, false);\n        this.view.addEventListener('webglcontextrestored', this.handleContextRestored, false);\n\n        /**\n         * The options passed in to create a new webgl context.\n         *\n         * @member {object}\n         * @private\n         */\n        this._contextOptions = {\n            alpha: this.transparent,\n            antialias: options.antialias,\n            premultipliedAlpha: this.transparent && this.transparent !== 'notMultiplied',\n            stencil: true,\n            preserveDrawingBuffer: options.preserveDrawingBuffer,\n        };\n\n        this._backgroundColorRgba[3] = this.transparent ? 0 : 1;\n\n        /**\n         * Manages the masks using the stencil buffer.\n         *\n         * @member {PIXI.MaskManager}\n         */\n        this.maskManager = new MaskManager(this);\n\n        /**\n         * Manages the stencil buffer.\n         *\n         * @member {PIXI.StencilManager}\n         */\n        this.stencilManager = new StencilManager(this);\n\n        /**\n         * An empty renderer.\n         *\n         * @member {PIXI.ObjectRenderer}\n         */\n        this.emptyRenderer = new ObjectRenderer(this);\n\n        /**\n         * The currently active ObjectRenderer.\n         *\n         * @member {PIXI.ObjectRenderer}\n         */\n        this.currentRenderer = this.emptyRenderer;\n\n        this.initPlugins();\n\n        /**\n         * The current WebGL rendering context, it is created here\n         *\n         * @member {WebGLRenderingContext}\n         */\n        // initialize the context so it is ready for the managers.\n        if (options.context)\n        {\n            // checks to see if a context is valid..\n            validateContext(options.context);\n        }\n\n        this.gl = options.context || glCore.createContext(this.view, this._contextOptions);\n\n        this.CONTEXT_UID = CONTEXT_UID++;\n\n        /**\n         * The currently active ObjectRenderer.\n         *\n         * @member {PIXI.WebGLState}\n         */\n        this.state = new WebGLState(this.gl);\n\n        this.renderingToScreen = true;\n\n        /**\n         * Holds the current state of textures bound to the GPU.\n         * @type {Array}\n         */\n        this.boundTextures = null;\n\n        this._initContext();\n        /**\n         * Manages the filters.\n         *\n         * @member {PIXI.FilterManager}\n         */\n        this.filterManager = new FilterManager(this);\n        // map some webGL blend and drawmodes..\n        this.drawModes = mapWebGLDrawModesToPixi(this.gl);\n\n        /**\n         * Holds the current shader\n         *\n         * @member {PIXI.Shader}\n         */\n        this._activeShader = null;\n\n        this._activeVao = null;\n\n        /**\n         * Holds the current render target\n         *\n         * @member {PIXI.RenderTarget}\n         */\n        this._activeRenderTarget = null;\n\n        this._nextTextureLocation = 0;\n\n        this.setBlendMode(0);\n    }\n\n    /**\n     * Creates the WebGL context\n     *\n     * @private\n     */\n    _initContext()\n    {\n        const gl = this.gl;\n\n        // restore a context if it was previously lost\n        if (gl.isContextLost() && gl.getExtension('WEBGL_lose_context'))\n        {\n            gl.getExtension('WEBGL_lose_context').restoreContext();\n        }\n\n        const maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\n        this.boundTextures = new Array(maxTextures);\n        this.emptyTextures = new Array(maxTextures);\n\n        // create a texture manager...\n        this.textureManager = new TextureManager(this);\n        this.textureGC = new TextureGarbageCollector(this);\n\n        this.state.resetToDefault();\n\n        this.rootRenderTarget = new RenderTarget(gl, this.width, this.height, null, this.resolution, true);\n        this.rootRenderTarget.clearColor = this._backgroundColorRgba;\n\n        this.bindRenderTarget(this.rootRenderTarget);\n\n        // now lets fill up the textures with empty ones!\n        const emptyGLTexture = new glCore.GLTexture.fromData(gl, null, 1, 1);\n\n        const tempObj = { _glTextures: {} };\n\n        tempObj._glTextures[this.CONTEXT_UID] = {};\n\n        for (let i = 0; i < maxTextures; i++)\n        {\n            const empty = new BaseTexture();\n\n            empty._glTextures[this.CONTEXT_UID] = emptyGLTexture;\n\n            this.boundTextures[i] = tempObj;\n            this.emptyTextures[i] = empty;\n            this.bindTexture(null, i);\n        }\n\n        this.emit('context', gl);\n\n        // setup the width/height properties and gl viewport\n        this.resize(this.width, this.height);\n    }\n\n    /**\n     * Renders the object to its webGL view\n     *\n     * @param {PIXI.DisplayObject} displayObject - the object to be rendered\n     * @param {PIXI.RenderTexture} renderTexture - The render texture to render to.\n     * @param {boolean} [clear] - Should the canvas be cleared before the new render\n     * @param {PIXI.Transform} [transform] - A transform to apply to the render texture before rendering.\n     * @param {boolean} [skipUpdateTransform] - Should we skip the update transform pass?\n     */\n    render(displayObject, renderTexture, clear, transform, skipUpdateTransform)\n    {\n        // can be handy to know!\n        this.renderingToScreen = !renderTexture;\n\n        this.emit('prerender');\n\n        // no point rendering if our context has been blown up!\n        if (!this.gl || this.gl.isContextLost())\n        {\n            return;\n        }\n\n        this._nextTextureLocation = 0;\n\n        if (!renderTexture)\n        {\n            this._lastObjectRendered = displayObject;\n        }\n\n        if (!skipUpdateTransform)\n        {\n            // update the scene graph\n            const cacheParent = displayObject.parent;\n\n            displayObject.parent = this._tempDisplayObjectParent;\n            displayObject.updateTransform();\n            displayObject.parent = cacheParent;\n           // displayObject.hitArea = //TODO add a temp hit area\n        }\n\n        this.bindRenderTexture(renderTexture, transform);\n\n        this.currentRenderer.start();\n\n        if (clear !== undefined ? clear : this.clearBeforeRender)\n        {\n            this._activeRenderTarget.clear();\n        }\n\n        displayObject.renderWebGL(this);\n\n        // apply transform..\n        this.currentRenderer.flush();\n\n        // this.setObjectRenderer(this.emptyRenderer);\n\n        this.textureGC.update();\n\n        this.emit('postrender');\n    }\n\n    /**\n     * Changes the current renderer to the one given in parameter\n     *\n     * @param {PIXI.ObjectRenderer} objectRenderer - The object renderer to use.\n     */\n    setObjectRenderer(objectRenderer)\n    {\n        if (this.currentRenderer === objectRenderer)\n        {\n            return;\n        }\n\n        this.currentRenderer.stop();\n        this.currentRenderer = objectRenderer;\n        this.currentRenderer.start();\n    }\n\n    /**\n     * This should be called if you wish to do some custom rendering\n     * It will basically render anything that may be batched up such as sprites\n     *\n     */\n    flush()\n    {\n        this.setObjectRenderer(this.emptyRenderer);\n    }\n\n    /**\n     * Resizes the webGL view to the specified width and height.\n     *\n     * @param {number} width - the new width of the webGL view\n     * @param {number} height - the new height of the webGL view\n     */\n    resize(width, height)\n    {\n      //  if(width * this.resolution === this.width && height * this.resolution === this.height)return;\n\n        SystemRenderer.prototype.resize.call(this, width, height);\n\n        this.rootRenderTarget.resize(width, height);\n\n        if (this._activeRenderTarget === this.rootRenderTarget)\n        {\n            this.rootRenderTarget.activate();\n\n            if (this._activeShader)\n            {\n                this._activeShader.uniforms.projectionMatrix = this.rootRenderTarget.projectionMatrix.toArray(true);\n            }\n        }\n    }\n\n    /**\n     * Resizes the webGL view to the specified width and height.\n     *\n     * @param {number} blendMode - the desired blend mode\n     */\n    setBlendMode(blendMode)\n    {\n        this.state.setBlendMode(blendMode);\n    }\n\n    /**\n     * Erases the active render target and fills the drawing area with a colour\n     *\n     * @param {number} [clearColor] - The colour\n     */\n    clear(clearColor)\n    {\n        this._activeRenderTarget.clear(clearColor);\n    }\n\n    /**\n     * Sets the transform of the active render target to the given matrix\n     *\n     * @param {PIXI.Matrix} matrix - The transformation matrix\n     */\n    setTransform(matrix)\n    {\n        this._activeRenderTarget.transform = matrix;\n    }\n\n    /**\n     * Binds a render texture for rendering\n     *\n     * @param {PIXI.RenderTexture} renderTexture - The render texture to render\n     * @param {PIXI.Transform} transform - The transform to be applied to the render texture\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n    bindRenderTexture(renderTexture, transform)\n    {\n        let renderTarget;\n\n        if (renderTexture)\n        {\n            const baseTexture = renderTexture.baseTexture;\n\n            if (!baseTexture._glRenderTargets[this.CONTEXT_UID])\n            {\n                // bind the current texture\n                this.textureManager.updateTexture(baseTexture, 0);\n            }\n\n            this.unbindTexture(baseTexture);\n\n            renderTarget = baseTexture._glRenderTargets[this.CONTEXT_UID];\n            renderTarget.setFrame(renderTexture.frame);\n        }\n        else\n        {\n            renderTarget = this.rootRenderTarget;\n        }\n\n        renderTarget.transform = transform;\n        this.bindRenderTarget(renderTarget);\n\n        return this;\n    }\n\n    /**\n     * Changes the current render target to the one given in parameter\n     *\n     * @param {PIXI.RenderTarget} renderTarget - the new render target\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n    bindRenderTarget(renderTarget)\n    {\n        if (renderTarget !== this._activeRenderTarget)\n        {\n            this._activeRenderTarget = renderTarget;\n            renderTarget.activate();\n\n            if (this._activeShader)\n            {\n                this._activeShader.uniforms.projectionMatrix = renderTarget.projectionMatrix.toArray(true);\n            }\n\n            this.stencilManager.setMaskStack(renderTarget.stencilMaskStack);\n        }\n\n        return this;\n    }\n\n    /**\n     * Changes the current shader to the one given in parameter\n     *\n     * @param {PIXI.Shader} shader - the new shader\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n    bindShader(shader)\n    {\n        // TODO cache\n        if (this._activeShader !== shader)\n        {\n            this._activeShader = shader;\n            shader.bind();\n\n            // automatically set the projection matrix\n            shader.uniforms.projectionMatrix = this._activeRenderTarget.projectionMatrix.toArray(true);\n        }\n\n        return this;\n    }\n\n    /**\n     * Binds the texture. This will return the location of the bound texture.\n     * It may not be the same as the one you pass in. This is due to optimisation that prevents\n     * needless binding of textures. For example if the texture is already bound it will return the\n     * current location of the texture instead of the one provided. To bypass this use force location\n     *\n     * @param {PIXI.Texture} texture - the new texture\n     * @param {number} location - the suggested texture location\n     * @param {boolean} forceLocation - force the location\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n    bindTexture(texture, location, forceLocation)\n    {\n        texture = texture || this.emptyTextures[location];\n        texture = texture.baseTexture || texture;\n        texture.touched = this.textureGC.count;\n\n        if (!forceLocation)\n        {\n            // TODO - maybe look into adding boundIds.. save us the loop?\n            for (let i = 0; i < this.boundTextures.length; i++)\n            {\n                if (this.boundTextures[i] === texture)\n                {\n                    return i;\n                }\n            }\n\n            if (location === undefined)\n            {\n                this._nextTextureLocation++;\n                this._nextTextureLocation %= this.boundTextures.length;\n                location = this.boundTextures.length - this._nextTextureLocation - 1;\n            }\n        }\n        else\n        {\n            location = location || 0;\n        }\n\n        const gl = this.gl;\n        const glTexture = texture._glTextures[this.CONTEXT_UID];\n\n        if (!glTexture)\n        {\n            // this will also bind the texture..\n            this.textureManager.updateTexture(texture, location);\n        }\n        else\n        {\n            // bind the current texture\n            this.boundTextures[location] = texture;\n            gl.activeTexture(gl.TEXTURE0 + location);\n            gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n        }\n\n        return location;\n    }\n\n     /**\n     * unbinds the texture ...\n     *\n     * @param {PIXI.Texture} texture - the texture to unbind\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n    unbindTexture(texture)\n    {\n        const gl = this.gl;\n\n        texture = texture.baseTexture || texture;\n\n        for (let i = 0; i < this.boundTextures.length; i++)\n        {\n            if (this.boundTextures[i] === texture)\n            {\n                this.boundTextures[i] = this.emptyTextures[i];\n\n                gl.activeTexture(gl.TEXTURE0 + i);\n                gl.bindTexture(gl.TEXTURE_2D, this.emptyTextures[i]._glTextures[this.CONTEXT_UID].texture);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Creates a new VAO from this renderer's context and state.\n     *\n     * @return {VertexArrayObject} The new VAO.\n     */\n    createVao()\n    {\n        return new glCore.VertexArrayObject(this.gl, this.state.attribState);\n    }\n\n    /**\n     * Changes the current Vao to the one given in parameter\n     *\n     * @param {PIXI.VertexArrayObject} vao - the new Vao\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n    bindVao(vao)\n    {\n        if (this._activeVao === vao)\n        {\n            return this;\n        }\n\n        if (vao)\n        {\n            vao.bind();\n        }\n        else if (this._activeVao)\n        {\n            // TODO this should always be true i think?\n            this._activeVao.unbind();\n        }\n\n        this._activeVao = vao;\n\n        return this;\n    }\n\n    /**\n     * Resets the WebGL state so you can render things however you fancy!\n     *\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n    reset()\n    {\n        this.setObjectRenderer(this.emptyRenderer);\n\n        this._activeShader = null;\n        this._activeRenderTarget = this.rootRenderTarget;\n\n        // bind the main frame buffer (the screen);\n        this.rootRenderTarget.activate();\n\n        this.state.resetToDefault();\n\n        return this;\n    }\n\n    /**\n     * Handles a lost webgl context\n     *\n     * @private\n     * @param {WebGLContextEvent} event - The context lost event.\n     */\n    handleContextLost(event)\n    {\n        event.preventDefault();\n    }\n\n    /**\n     * Handles a restored webgl context\n     *\n     * @private\n     */\n    handleContextRestored()\n    {\n        this._initContext();\n        this.textureManager.removeAll();\n    }\n\n    /**\n     * Removes everything from the renderer (event listeners, spritebatch, etc...)\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     *  See: https://github.com/pixijs/pixi.js/issues/2233\n     */\n    destroy(removeView)\n    {\n        this.destroyPlugins();\n\n        // remove listeners\n        this.view.removeEventListener('webglcontextlost', this.handleContextLost);\n        this.view.removeEventListener('webglcontextrestored', this.handleContextRestored);\n\n        this.textureManager.destroy();\n\n        // call base destroy\n        super.destroy(removeView);\n\n        this.uid = 0;\n\n        // destroy the managers\n        this.maskManager.destroy();\n        this.stencilManager.destroy();\n        this.filterManager.destroy();\n\n        this.maskManager = null;\n        this.filterManager = null;\n        this.textureManager = null;\n        this.currentRenderer = null;\n\n        this.handleContextLost = null;\n        this.handleContextRestored = null;\n\n        this._contextOptions = null;\n        this.gl.useProgram(null);\n\n        if (this.gl.getExtension('WEBGL_lose_context'))\n        {\n            this.gl.getExtension('WEBGL_lose_context').loseContext();\n        }\n\n        this.gl = null;\n\n        // this = null;\n    }\n}\n\npluginTarget.mixin(WebGLRenderer);\n","import { Point, ObservablePoint, Rectangle } from '../math';\nimport { sign, TextureCache } from '../utils';\nimport { BLEND_MODES } from '../const';\nimport Texture from '../textures/Texture';\nimport Container from '../display/Container';\n\nconst tempPoint = new Point();\n\n/**\n * The Sprite object is the base for all textured objects that are rendered to the screen\n *\n * A sprite can be created directly from an image like this:\n *\n * ```js\n * let sprite = new PIXI.Sprite.fromImage('assets/image.png');\n * ```\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI\n */\nexport default class Sprite extends Container\n{\n    /**\n     * @param {PIXI.Texture} texture - The texture for this sprite\n     */\n    constructor(texture)\n    {\n        super();\n\n        /**\n         * The anchor sets the origin point of the texture.\n         * The default is 0,0 this means the texture's origin is the top left\n         * Setting the anchor to 0.5,0.5 means the texture's origin is centered\n         * Setting the anchor to 1,1 would mean the texture's origin point will be the bottom right corner\n         *\n         * @member {PIXI.ObservablePoint}\n         * @private\n         */\n        this._anchor = new ObservablePoint(this._onAnchorUpdate, this);\n\n        /**\n         * The texture that the sprite is using\n         *\n         * @private\n         * @member {PIXI.Texture}\n         */\n        this._texture = null;\n\n        /**\n         * The width of the sprite (this is initially set by the texture)\n         *\n         * @private\n         * @member {number}\n         */\n        this._width = 0;\n\n        /**\n         * The height of the sprite (this is initially set by the texture)\n         *\n         * @private\n         * @member {number}\n         */\n        this._height = 0;\n\n        /**\n         * The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n         *\n         * @private\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        this._tint = null;\n        this._tintRGB = null;\n        this.tint = 0xFFFFFF;\n\n        /**\n         * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL\n         * @see PIXI.BLEND_MODES\n         */\n        this.blendMode = BLEND_MODES.NORMAL;\n\n        /**\n         * The shader that will be used to render the sprite. Set to null to remove a current shader.\n         *\n         * @member {PIXI.Filter|PIXI.Shader}\n         */\n        this.shader = null;\n\n        /**\n         * An internal cached value of the tint.\n         *\n         * @private\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        this.cachedTint = 0xFFFFFF;\n\n        // call texture setter\n        this.texture = texture || Texture.EMPTY;\n\n        /**\n         * this is used to store the vertex data of the sprite (basically a quad)\n         *\n         * @private\n         * @member {Float32Array}\n         */\n        this.vertexData = new Float32Array(8);\n\n        /**\n         * This is used to calculate the bounds of the object IF it is a trimmed sprite\n         *\n         * @private\n         * @member {Float32Array}\n         */\n        this.vertexTrimmedData = null;\n\n        this._transformID = -1;\n        this._textureID = -1;\n    }\n\n    /**\n     * When the texture is updated, this event will fire to update the scale and frame\n     *\n     * @private\n     */\n    _onTextureUpdate()\n    {\n        this._textureID = -1;\n\n        // so if _width is 0 then width was not set..\n        if (this._width)\n        {\n            this.scale.x = sign(this.scale.x) * this._width / this.texture.orig.width;\n        }\n\n        if (this._height)\n        {\n            this.scale.y = sign(this.scale.y) * this._height / this.texture.orig.height;\n        }\n    }\n\n    /**\n     * Called when the anchor position updates.\n     *\n     * @private\n     */\n    _onAnchorUpdate()\n    {\n        this._transformID = -1;\n    }\n\n    /**\n     * calculates worldTransform * vertices, store it in vertexData\n     */\n    calculateVertices()\n    {\n        if (this._transformID === this.transform._worldID && this._textureID === this._texture._updateID)\n        {\n            return;\n        }\n\n        this._transformID = this.transform._worldID;\n        this._textureID = this._texture._updateID;\n\n        // set the vertex data\n\n        const texture = this._texture;\n        const wt = this.transform.worldTransform;\n        const a = wt.a;\n        const b = wt.b;\n        const c = wt.c;\n        const d = wt.d;\n        const tx = wt.tx;\n        const ty = wt.ty;\n        const vertexData = this.vertexData;\n        const trim = texture.trim;\n        const orig = texture.orig;\n        const anchor = this._anchor;\n\n        let w0 = 0;\n        let w1 = 0;\n        let h0 = 0;\n        let h1 = 0;\n\n        if (trim)\n        {\n            // if the sprite is trimmed and is not a tilingsprite then we need to add the extra\n            // space before transforming the sprite coords.\n            w1 = trim.x - (anchor._x * orig.width);\n            w0 = w1 + trim.width;\n\n            h1 = trim.y - (anchor._y * orig.height);\n            h0 = h1 + trim.height;\n        }\n        else\n        {\n            w0 = orig.width * (1 - anchor._x);\n            w1 = orig.width * -anchor._x;\n\n            h0 = orig.height * (1 - anchor._y);\n            h1 = orig.height * -anchor._y;\n        }\n\n        // xy\n        vertexData[0] = (a * w1) + (c * h1) + tx;\n        vertexData[1] = (d * h1) + (b * w1) + ty;\n\n        // xy\n        vertexData[2] = (a * w0) + (c * h1) + tx;\n        vertexData[3] = (d * h1) + (b * w0) + ty;\n\n         // xy\n        vertexData[4] = (a * w0) + (c * h0) + tx;\n        vertexData[5] = (d * h0) + (b * w0) + ty;\n\n        // xy\n        vertexData[6] = (a * w1) + (c * h0) + tx;\n        vertexData[7] = (d * h0) + (b * w1) + ty;\n    }\n\n    /**\n     * calculates worldTransform * vertices for a non texture with a trim. store it in vertexTrimmedData\n     * This is used to ensure that the true width and height of a trimmed texture is respected\n     */\n    calculateTrimmedVertices()\n    {\n        if (!this.vertexTrimmedData)\n        {\n            this.vertexTrimmedData = new Float32Array(8);\n        }\n\n        // lets do some special trim code!\n        const texture = this._texture;\n        const vertexData = this.vertexTrimmedData;\n        const orig = texture.orig;\n        const anchor = this._anchor;\n\n        // lets calculate the new untrimmed bounds..\n        const wt = this.transform.worldTransform;\n        const a = wt.a;\n        const b = wt.b;\n        const c = wt.c;\n        const d = wt.d;\n        const tx = wt.tx;\n        const ty = wt.ty;\n\n        const w0 = (orig.width) * (1 - anchor._x);\n        const w1 = (orig.width) * -anchor._x;\n\n        const h0 = orig.height * (1 - anchor._y);\n        const h1 = orig.height * -anchor._y;\n\n        // xy\n        vertexData[0] = (a * w1) + (c * h1) + tx;\n        vertexData[1] = (d * h1) + (b * w1) + ty;\n\n        // xy\n        vertexData[2] = (a * w0) + (c * h1) + tx;\n        vertexData[3] = (d * h1) + (b * w0) + ty;\n\n        // xy\n        vertexData[4] = (a * w0) + (c * h0) + tx;\n        vertexData[5] = (d * h0) + (b * w0) + ty;\n\n        // xy\n        vertexData[6] = (a * w1) + (c * h0) + tx;\n        vertexData[7] = (d * h0) + (b * w1) + ty;\n    }\n\n    /**\n    *\n    * Renders the object using the WebGL renderer\n    *\n    * @private\n    * @param {PIXI.WebGLRenderer} renderer - The webgl renderer to use.\n    */\n    _renderWebGL(renderer)\n    {\n        this.calculateVertices();\n\n        renderer.setObjectRenderer(renderer.plugins.sprite);\n        renderer.plugins.sprite.render(this);\n    }\n\n    /**\n    * Renders the object using the Canvas renderer\n    *\n    * @private\n    * @param {PIXI.CanvasRenderer} renderer - The renderer\n    */\n    _renderCanvas(renderer)\n    {\n        renderer.plugins.sprite.render(this);\n    }\n\n    /**\n     * Updates the bounds of the sprite.\n     *\n     * @private\n     */\n    _calculateBounds()\n    {\n        const trim = this._texture.trim;\n        const orig = this._texture.orig;\n\n        // First lets check to see if the current texture has a trim..\n        if (!trim || (trim.width === orig.width && trim.height === orig.height))\n        {\n            // no trim! lets use the usual calculations..\n            this.calculateVertices();\n            this._bounds.addQuad(this.vertexData);\n        }\n        else\n        {\n            // lets calculate a special trimmed bounds...\n            this.calculateTrimmedVertices();\n            this._bounds.addQuad(this.vertexTrimmedData);\n        }\n    }\n\n    /**\n     * Gets the local bounds of the sprite object.\n     *\n     * @param {Rectangle} rect - The output rectangle.\n     * @return {Rectangle} The bounds.\n     */\n    getLocalBounds(rect)\n    {\n        // we can do a fast local bounds if the sprite has no children!\n        if (this.children.length === 0)\n        {\n            this._bounds.minX = this._texture.orig.width * -this._anchor._x;\n            this._bounds.minY = this._texture.orig.height * -this._anchor._y;\n            this._bounds.maxX = this._texture.orig.width * (1 - this._anchor._x);\n            this._bounds.maxY = this._texture.orig.height * (1 - this._anchor._x);\n\n            if (!rect)\n            {\n                if (!this._localBoundsRect)\n                {\n                    this._localBoundsRect = new Rectangle();\n                }\n\n                rect = this._localBoundsRect;\n            }\n\n            return this._bounds.getRectangle(rect);\n        }\n\n        return super.getLocalBounds.call(this, rect);\n    }\n\n    /**\n     * Tests if a point is inside this sprite\n     *\n     * @param {PIXI.Point} point - the point to test\n     * @return {boolean} the result of the test\n     */\n    containsPoint(point)\n    {\n        this.worldTransform.applyInverse(point, tempPoint);\n\n        const width = this._texture.orig.width;\n        const height = this._texture.orig.height;\n        const x1 = -width * this.anchor.x;\n        let y1 = 0;\n\n        if (tempPoint.x > x1 && tempPoint.x < x1 + width)\n        {\n            y1 = -height * this.anchor.y;\n\n            if (tempPoint.y > y1 && tempPoint.y < y1 + height)\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Destroys this sprite and optionally its texture and children\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *      method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Should it destroy the current texture of the sprite as well\n     * @param {boolean} [options.baseTexture=false] - Should it destroy the base texture of the sprite as well\n     */\n    destroy(options)\n    {\n        super.destroy(options);\n\n        this._anchor = null;\n\n        const destroyTexture = typeof options === 'boolean' ? options : options && options.texture;\n\n        if (destroyTexture)\n        {\n            const destroyBaseTexture = typeof options === 'boolean' ? options : options && options.baseTexture;\n\n            this._texture.destroy(!!destroyBaseTexture);\n        }\n\n        this._texture = null;\n        this.shader = null;\n    }\n\n    // some helper functions..\n\n    /**\n     * Helper function that creates a new sprite based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|PIXI.BaseTexture|HTMLCanvasElement|HTMLVideoElement} source Source to create texture from\n     * @return {PIXI.Texture} The newly created texture\n     */\n    static from(source)\n    {\n        return new Sprite(Texture.from(source));\n    }\n\n    /**\n     * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @return {PIXI.Sprite} A new Sprite using a texture from the texture cache matching the frameId\n     */\n    static fromFrame(frameId)\n    {\n        const texture = TextureCache[frameId];\n\n        if (!texture)\n        {\n            throw new Error(`The frameId \"${frameId}\" does not exist in the texture cache`);\n        }\n\n        return new Sprite(texture);\n    }\n\n    /**\n     * Helper function that creates a sprite that will contain a texture based on an image url\n     * If the image is not in the texture cache it will be loaded\n     *\n     * @static\n     * @param {string} imageId - The image url of the texture\n     * @param {boolean} [crossorigin=(auto)] - if you want to specify the cross-origin parameter\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - if you want to specify the scale mode,\n     *  see {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Sprite} A new Sprite using a texture from the texture cache matching the image id\n     */\n    static fromImage(imageId, crossorigin, scaleMode)\n    {\n        return new Sprite(Texture.fromImage(imageId, crossorigin, scaleMode));\n    }\n\n    /**\n     * The width of the sprite, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Sprite#\n     */\n    get width()\n    {\n        return Math.abs(this.scale.x) * this.texture.orig.width;\n    }\n\n    /**\n     * Sets the width of the sprite by modifying the scale.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set width(value)\n    {\n        const s = sign(this.scale.x) || 1;\n\n        this.scale.x = s * value / this.texture.orig.width;\n        this._width = value;\n    }\n\n    /**\n     * The height of the sprite, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Sprite#\n     */\n    get height()\n    {\n        return Math.abs(this.scale.y) * this.texture.orig.height;\n    }\n\n    /**\n     * Sets the height of the sprite by modifying the scale.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set height(value)\n    {\n        const s = sign(this.scale.y) || 1;\n\n        this.scale.y = s * value / this.texture.orig.height;\n        this._height = value;\n    }\n\n    /**\n     * The anchor sets the origin point of the texture.\n     * The default is 0,0 this means the texture's origin is the top left\n     * Setting the anchor to 0.5,0.5 means the texture's origin is centered\n     * Setting the anchor to 1,1 would mean the texture's origin point will be the bottom right corner\n     *\n     * @member {PIXI.ObservablePoint}\n     * @memberof PIXI.Sprite#\n     */\n    get anchor()\n    {\n        return this._anchor;\n    }\n\n    /**\n     * Copies the anchor to the sprite.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set anchor(value)\n    {\n        this._anchor.copy(value);\n    }\n\n    /**\n     * The tint applied to the sprite. This is a hex value. A value of\n     * 0xFFFFFF will remove any tint effect.\n     *\n     * @member {number}\n     * @memberof PIXI.Sprite#\n     * @default 0xFFFFFF\n     */\n    get tint()\n    {\n        return this._tint;\n    }\n\n    /**\n     * Sets the tint of the sprite.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set tint(value)\n    {\n        this._tint = value;\n        this._tintRGB = (value >> 16) + (value & 0xff00) + ((value & 0xff) << 16);\n    }\n\n    /**\n     * The texture that the sprite is using\n     *\n     * @member {PIXI.Texture}\n     * @memberof PIXI.Sprite#\n     */\n    get texture()\n    {\n        return this._texture;\n    }\n\n    /**\n     * Sets the texture of the sprite.\n     *\n     * @param {PIXI.Texture} value - The value to set to.\n     */\n    set texture(value)\n    {\n        if (this._texture === value)\n        {\n            return;\n        }\n\n        this._texture = value;\n        this.cachedTint = 0xFFFFFF;\n\n        this._textureID = -1;\n\n        if (value)\n        {\n            // wait for the texture to load\n            if (value.baseTexture.hasLoaded)\n            {\n                this._onTextureUpdate();\n            }\n            else\n            {\n                value.once('update', this._onTextureUpdate, this);\n            }\n        }\n    }\n}\n","import { hex2rgb, rgb2hex } from '../../utils';\nimport canUseNewCanvasBlendModes from '../../renderers/canvas/utils/canUseNewCanvasBlendModes';\n\n/**\n * Utility methods for Sprite/Texture tinting.\n *\n * @namespace PIXI.CanvasTinter\n */\nconst CanvasTinter = {\n    /**\n     * Basically this method just needs a sprite and a color and tints the sprite with the given color.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Sprite} sprite - the sprite to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @return {HTMLCanvasElement} The tinted canvas\n     */\n    getTintedTexture: (sprite, color) =>\n    {\n        const texture = sprite.texture;\n\n        color = CanvasTinter.roundColor(color);\n\n        const stringColor = `#${(`00000${(color | 0).toString(16)}`).substr(-6)}`;\n\n        texture.tintCache = texture.tintCache || {};\n\n        if (texture.tintCache[stringColor])\n        {\n            return texture.tintCache[stringColor];\n        }\n\n        // clone texture..\n        const canvas = CanvasTinter.canvas || document.createElement('canvas');\n\n        // CanvasTinter.tintWithPerPixel(texture, stringColor, canvas);\n        CanvasTinter.tintMethod(texture, color, canvas);\n\n        if (CanvasTinter.convertTintToImage)\n        {\n            // is this better?\n            const tintImage = new Image();\n\n            tintImage.src = canvas.toDataURL();\n\n            texture.tintCache[stringColor] = tintImage;\n        }\n        else\n        {\n            texture.tintCache[stringColor] = canvas;\n            // if we are not converting the texture to an image then we need to lose the reference to the canvas\n            CanvasTinter.canvas = null;\n        }\n\n        return canvas;\n    },\n\n    /**\n     * Tint a texture using the 'multiply' operation.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */\n    tintWithMultiply: (texture, color, canvas) =>\n    {\n        const context = canvas.getContext('2d');\n        const crop = texture._frame.clone();\n        const resolution = texture.baseTexture.resolution;\n\n        crop.x *= resolution;\n        crop.y *= resolution;\n        crop.width *= resolution;\n        crop.height *= resolution;\n\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n\n        context.fillStyle = `#${(`00000${(color | 0).toString(16)}`).substr(-6)}`;\n\n        context.fillRect(0, 0, crop.width, crop.height);\n\n        context.globalCompositeOperation = 'multiply';\n\n        context.drawImage(\n            texture.baseTexture.source,\n            crop.x,\n            crop.y,\n            crop.width,\n            crop.height,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n\n        context.globalCompositeOperation = 'destination-atop';\n\n        context.drawImage(\n            texture.baseTexture.source,\n            crop.x,\n            crop.y,\n            crop.width,\n            crop.height,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n    },\n\n    /**\n     * Tint a texture using the 'overlay' operation.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */\n    tintWithOverlay(texture, color, canvas)\n    {\n        const context = canvas.getContext('2d');\n        const crop = texture._frame.clone();\n        const resolution = texture.baseTexture.resolution;\n\n        crop.x *= resolution;\n        crop.y *= resolution;\n        crop.width *= resolution;\n        crop.height *= resolution;\n\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n\n        context.globalCompositeOperation = 'copy';\n        context.fillStyle = `#${(`00000${(color | 0).toString(16)}`).substr(-6)}`;\n        context.fillRect(0, 0, crop.width, crop.height);\n\n        context.globalCompositeOperation = 'destination-atop';\n        context.drawImage(\n            texture.baseTexture.source,\n            crop.x,\n            crop.y,\n            crop.width,\n            crop.height,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n\n        // context.globalCompositeOperation = 'copy';\n    },\n\n    /**\n     * Tint a texture pixel per pixel.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */\n    tintWithPerPixel: (texture, color, canvas) =>\n    {\n        const context = canvas.getContext('2d');\n        const crop = texture._frame.clone();\n        const resolution = texture.baseTexture.resolution;\n\n        crop.x *= resolution;\n        crop.y *= resolution;\n        crop.width *= resolution;\n        crop.height *= resolution;\n\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n\n        context.globalCompositeOperation = 'copy';\n        context.drawImage(\n            texture.baseTexture.source,\n            crop.x,\n            crop.y,\n            crop.width,\n            crop.height,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n\n        const rgbValues = hex2rgb(color);\n        const r = rgbValues[0];\n        const g = rgbValues[1];\n        const b = rgbValues[2];\n\n        const pixelData = context.getImageData(0, 0, crop.width, crop.height);\n\n        const pixels = pixelData.data;\n\n        for (let i = 0; i < pixels.length; i += 4)\n        {\n            pixels[i + 0] *= r;\n            pixels[i + 1] *= g;\n            pixels[i + 2] *= b;\n        }\n\n        context.putImageData(pixelData, 0, 0);\n    },\n\n    /**\n     * Rounds the specified color according to the CanvasTinter.cacheStepsPerColorChannel.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {number} color - the color to round, should be a hex color\n     * @return {number} The rounded color.\n     */\n    roundColor: (color) =>\n    {\n        const step = CanvasTinter.cacheStepsPerColorChannel;\n\n        const rgbValues = hex2rgb(color);\n\n        rgbValues[0] = Math.min(255, (rgbValues[0] / step) * step);\n        rgbValues[1] = Math.min(255, (rgbValues[1] / step) * step);\n        rgbValues[2] = Math.min(255, (rgbValues[2] / step) * step);\n\n        return rgb2hex(rgbValues);\n    },\n\n    /**\n     * Number of steps which will be used as a cap when rounding colors.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @type {number}\n     */\n    cacheStepsPerColorChannel: 8,\n\n    /**\n     * Tint cache boolean flag.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @type {boolean}\n     */\n    convertTintToImage: false,\n\n    /**\n     * Whether or not the Canvas BlendModes are supported, consequently the ability to tint using the multiply method.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @type {boolean}\n     */\n    canUseMultiply: canUseNewCanvasBlendModes(),\n\n    /**\n     * The tinting method that will be used.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @type {tintMethodFunctionType}\n     */\n    tintMethod: 0,\n};\n\nCanvasTinter.tintMethod = CanvasTinter.canUseMultiply ? CanvasTinter.tintWithMultiply : CanvasTinter.tintWithPerPixel;\n\n/**\n * The tintMethod type.\n *\n * @memberof PIXI.CanvasTinter\n * @callback tintMethodFunctionType\n * @param texture {PIXI.Texture} the texture to tint\n * @param color {number} the color to use to tint the sprite with\n * @param canvas {HTMLCanvasElement} the current canvas\n */\n\nexport default CanvasTinter;\n","import CanvasRenderer from '../../renderers/canvas/CanvasRenderer';\nimport { SCALE_MODES } from '../../const';\nimport { Matrix, GroupD8 } from '../../math';\nimport CanvasTinter from './CanvasTinter';\n\nconst canvasRenderWorldTransform = new Matrix();\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they now\n * share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's CanvasSpriteRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/CanvasSpriteRenderer.java\n */\n\n/**\n * Renderer dedicated to drawing and batching sprites.\n *\n * @class\n * @private\n * @memberof PIXI\n */\nexport default class CanvasSpriteRenderer\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer -The renderer sprite this batch works for.\n     */\n    constructor(renderer)\n    {\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders the sprite object.\n     *\n     * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\n     */\n    render(sprite)\n    {\n        const texture = sprite._texture;\n        const renderer = this.renderer;\n\n        const width = texture._frame.width;\n        const height = texture._frame.height;\n\n        let wt = sprite.transform.worldTransform;\n        let dx = 0;\n        let dy = 0;\n\n        if (texture.orig.width <= 0 || texture.orig.height <= 0 || !texture.baseTexture.source)\n        {\n            return;\n        }\n\n        renderer.setBlendMode(sprite.blendMode);\n\n        //  Ignore null sources\n        if (texture.valid)\n        {\n            renderer.context.globalAlpha = sprite.worldAlpha;\n\n            // If smoothingEnabled is supported and we need to change the smoothing property for sprite texture\n            const smoothingEnabled = texture.baseTexture.scaleMode === SCALE_MODES.LINEAR;\n\n            if (renderer.smoothProperty && renderer.context[renderer.smoothProperty] !== smoothingEnabled)\n            {\n                renderer.context[renderer.smoothProperty] = smoothingEnabled;\n            }\n\n            if (texture.trim)\n            {\n                dx = (texture.trim.width / 2) + texture.trim.x - (sprite.anchor.x * texture.orig.width);\n                dy = (texture.trim.height / 2) + texture.trim.y - (sprite.anchor.y * texture.orig.height);\n            }\n            else\n            {\n                dx = (0.5 - sprite.anchor.x) * texture.orig.width;\n                dy = (0.5 - sprite.anchor.y) * texture.orig.height;\n            }\n\n            if (texture.rotate)\n            {\n                wt.copy(canvasRenderWorldTransform);\n                wt = canvasRenderWorldTransform;\n                GroupD8.matrixAppendRotationInv(wt, texture.rotate, dx, dy);\n                // the anchor has already been applied above, so lets set it to zero\n                dx = 0;\n                dy = 0;\n            }\n\n            dx -= width / 2;\n            dy -= height / 2;\n\n            // Allow for pixel rounding\n            if (renderer.roundPixels)\n            {\n                renderer.context.setTransform(\n                    wt.a,\n                    wt.b,\n                    wt.c,\n                    wt.d,\n                    (wt.tx * renderer.resolution) | 0,\n                    (wt.ty * renderer.resolution) | 0\n                );\n\n                dx = dx | 0;\n                dy = dy | 0;\n            }\n            else\n            {\n                renderer.context.setTransform(\n                    wt.a,\n                    wt.b,\n                    wt.c,\n                    wt.d,\n                    wt.tx * renderer.resolution,\n                    wt.ty * renderer.resolution\n                );\n            }\n\n            const resolution = texture.baseTexture.resolution;\n\n            if (sprite.tint !== 0xFFFFFF)\n            {\n                if (sprite.cachedTint !== sprite.tint)\n                {\n                    sprite.cachedTint = sprite.tint;\n\n                    // TODO clean up caching - how to clean up the caches?\n                    sprite.tintedTexture = CanvasTinter.getTintedTexture(sprite, sprite.tint);\n                }\n\n                renderer.context.drawImage(\n                    sprite.tintedTexture,\n                    0,\n                    0,\n                    width * resolution,\n                    height * resolution,\n                    dx * renderer.resolution,\n                    dy * renderer.resolution,\n                    width * renderer.resolution,\n                    height * renderer.resolution\n                );\n            }\n            else\n            {\n                renderer.context.drawImage(\n                    texture.baseTexture.source,\n                    texture._frame.x * resolution,\n                    texture._frame.y * resolution,\n                    width * resolution,\n                    height * resolution,\n                    dx * renderer.resolution,\n                    dy * renderer.resolution,\n                    width * renderer.resolution,\n                    height * renderer.resolution\n                );\n            }\n        }\n    }\n\n    /**\n     * destroy the sprite object.\n     *\n     */\n    destroy()\n    {\n        this.renderer = null;\n    }\n}\n\nCanvasRenderer.registerPlugin('sprite', CanvasSpriteRenderer);\n","import Shader from '../../Shader';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\nconst fragTemplate = [\n    'varying vec2 vTextureCoord;',\n    'varying vec4 vColor;',\n    'varying float vTextureId;',\n    'uniform sampler2D uSamplers[%count%];',\n\n    'void main(void){',\n    'vec4 color;',\n    'float textureId = floor(vTextureId+0.5);',\n    '%forloop%',\n    'gl_FragColor = color * vColor;',\n    '}',\n].join('\\n');\n\nexport default function generateMultiTextureShader(gl, maxTextures)\n{\n    const vertexSrc = readFileSync(join(__dirname, './texture.vert'), 'utf8');\n    let fragmentSrc = fragTemplate;\n\n    fragmentSrc = fragmentSrc.replace(/%count%/gi, maxTextures);\n    fragmentSrc = fragmentSrc.replace(/%forloop%/gi, generateSampleSrc(maxTextures));\n\n    const shader = new Shader(gl, vertexSrc, fragmentSrc);\n\n    const sampleValues = [];\n\n    for (let i = 0; i < maxTextures; i++)\n    {\n        sampleValues[i] = i;\n    }\n\n    shader.bind();\n    shader.uniforms.uSamplers = sampleValues;\n\n    return shader;\n}\n\nfunction generateSampleSrc(maxTextures)\n{\n    let src = '';\n\n    src += '\\n';\n    src += '\\n';\n\n    for (let i = 0; i < maxTextures; i++)\n    {\n        if (i > 0)\n        {\n            src += '\\nelse ';\n        }\n\n        if (i < maxTextures - 1)\n        {\n            src += `if(textureId == ${i}.0)`;\n        }\n\n        src += '\\n{';\n        src += `\\n\\tcolor = texture2D(uSamplers[${i}], vTextureCoord);`;\n        src += '\\n}';\n    }\n\n    src += '\\n';\n    src += '\\n';\n\n    return src;\n}\n","import glCore from 'pixi-gl-core';\n\nconst fragTemplate = [\n    'precision mediump float;',\n    'void main(void){',\n    'float test = 0.1;',\n    '%forloop%',\n    'gl_FragColor = vec4(0.0);',\n    '}',\n].join('\\n');\n\nexport default function checkMaxIfStatmentsInShader(maxIfs, gl)\n{\n    const createTempContext = !gl;\n\n    // @if DEBUG\n    if (maxIfs === 0)\n    {\n        throw new Error('Invalid value of `0` passed to `checkMaxIfStatementsInShader`');\n    }\n    // @endif\n\n    if (createTempContext)\n    {\n        const tinyCanvas = document.createElement('canvas');\n\n        tinyCanvas.width = 1;\n        tinyCanvas.height = 1;\n\n        gl = glCore.createContext(tinyCanvas);\n    }\n\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    while (true) // eslint-disable-line no-constant-condition\n    {\n        const fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateIfTestSrc(maxIfs));\n\n        gl.shaderSource(shader, fragmentSrc);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n        {\n            maxIfs = (maxIfs / 2) | 0;\n        }\n        else\n        {\n            // valid!\n            break;\n        }\n    }\n\n    if (createTempContext)\n    {\n        // get rid of context\n        if (gl.getExtension('WEBGL_lose_context'))\n        {\n            gl.getExtension('WEBGL_lose_context').loseContext();\n        }\n    }\n\n    return maxIfs;\n}\n\nfunction generateIfTestSrc(maxIfs)\n{\n    let src = '';\n\n    for (let i = 0; i < maxIfs; ++i)\n    {\n        if (i > 0)\n        {\n            src += '\\nelse ';\n        }\n\n        if (i < maxIfs - 1)\n        {\n            src += `if(test == ${i}.0){}`;\n        }\n    }\n\n    return src;\n}\n","/**\n * @class\n */\nexport default class Buffer\n{\n    /**\n     * @param {number} size - The size of the buffer in bytes.\n     */\n    constructor(size)\n    {\n        this.vertices = new ArrayBuffer(size);\n\n        /**\n         * View on the vertices as a Float32Array for positions\n         *\n         * @member {Float32Array}\n         */\n        this.float32View = new Float32Array(this.vertices);\n\n        /**\n         * View on the vertices as a Uint32Array for uvs\n         *\n         * @member {Float32Array}\n         */\n        this.uint32View = new Uint32Array(this.vertices);\n    }\n\n    /**\n     * Destroys the buffer.\n     *\n     */\n    destroy()\n    {\n        this.vertices = null;\n        this.positions = null;\n        this.uvs = null;\n        this.colors = null;\n    }\n}\n","import ObjectRenderer from '../../renderers/webgl/utils/ObjectRenderer';\nimport WebGLRenderer from '../../renderers/webgl/WebGLRenderer';\nimport createIndicesForQuads from '../../utils/createIndicesForQuads';\nimport generateMultiTextureShader from './generateMultiTextureShader';\nimport checkMaxIfStatmentsInShader from '../../renderers/webgl/utils/checkMaxIfStatmentsInShader';\nimport Buffer from './BatchBuffer';\nimport { CAN_UPLOAD_SAME_BUFFER } from '../../const';\nimport settings from '../../settings';\nimport glCore from 'pixi-gl-core';\nimport bitTwiddle from 'bit-twiddle';\n\nconst { SPRITE_BATCH_SIZE, SPRITE_MAX_TEXTURES } = settings;\n\nlet TICK = 0;\nlet TEXTURE_TICK = 0;\n\n/**\n * Renderer dedicated to drawing and batching sprites.\n *\n * @class\n * @private\n * @memberof PIXI\n * @extends PIXI.ObjectRenderer\n */\nexport default class SpriteRenderer extends ObjectRenderer\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this sprite batch works for.\n     */\n    constructor(renderer)\n    {\n        super(renderer);\n\n        /**\n         * Number of values sent in the vertex buffer.\n         * positionX, positionY, colorR, colorG, colorB = 5\n         *\n         * @member {number}\n         */\n        this.vertSize = 5;\n\n        /**\n         * The size of the vertex information in bytes.\n         *\n         * @member {number}\n         */\n        this.vertByteSize = this.vertSize * 4;\n\n        /**\n         * The number of images in the SpriteBatch before it flushes.\n         *\n         * @member {number}\n         */\n        this.size = SPRITE_BATCH_SIZE; // 2000 is a nice balance between mobile / desktop\n\n        // the total number of bytes in our batch\n        // let numVerts = this.size * 4 * this.vertByteSize;\n\n        this.buffers = [];\n        for (let i = 1; i <= bitTwiddle.nextPow2(this.size); i *= 2)\n        {\n            this.buffers.push(new Buffer(i * 4 * this.vertByteSize));\n        }\n\n        /**\n         * Holds the indices of the geometry (quads) to draw\n         *\n         * @member {Uint16Array}\n         */\n        this.indices = createIndicesForQuads(this.size);\n\n        /**\n         * The default shaders that is used if a sprite doesn't have a more specific one.\n         * there is a shader for each number of textures that can be rendererd.\n         * These shaders will also be generated on the fly as required.\n         * @member {PIXI.Shader[]}\n         */\n        this.shader = null;\n\n        this.currentIndex = 0;\n        TICK = 0;\n        this.groups = [];\n\n        for (let k = 0; k < this.size; k++)\n        {\n            this.groups[k] = { textures: [], textureCount: 0, ids: [], size: 0, start: 0, blend: 0 };\n        }\n\n        this.sprites = [];\n\n        this.vertexBuffers = [];\n        this.vaos = [];\n\n        this.vaoMax = 2;\n        this.vertexCount = 0;\n\n        this.renderer.on('prerender', this.onPrerender, this);\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */\n    onContextChange()\n    {\n        const gl = this.renderer.gl;\n\n        // step 1: first check max textures the GPU can handle.\n        this.MAX_TEXTURES = Math.min(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS), SPRITE_MAX_TEXTURES);\n\n        // step 2: check the maximum number of if statements the shader can have too..\n        this.MAX_TEXTURES = checkMaxIfStatmentsInShader(this.MAX_TEXTURES, gl);\n\n        const shader = this.shader = generateMultiTextureShader(gl, this.MAX_TEXTURES);\n\n        // create a couple of buffers\n        this.indexBuffer = glCore.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n        // we use the second shader as the first one depending on your browser may omit aTextureId\n        // as it is not used by the shader so is optimized out.\n\n        this.renderer.bindVao(null);\n\n        for (let i = 0; i < this.vaoMax; i++)\n        {\n            this.vertexBuffers[i] = glCore.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n\n            /* eslint-disable max-len */\n\n            // build the vao object that will render..\n            this.vaos[i] = this.renderer.createVao()\n                .addIndex(this.indexBuffer)\n                .addAttribute(this.vertexBuffers[i], shader.attributes.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\n                .addAttribute(this.vertexBuffers[i], shader.attributes.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 2 * 4)\n                .addAttribute(this.vertexBuffers[i], shader.attributes.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 3 * 4)\n                .addAttribute(this.vertexBuffers[i], shader.attributes.aTextureId, gl.FLOAT, false, this.vertByteSize, 4 * 4);\n\n            /* eslint-disable max-len */\n        }\n\n        this.vao = this.vaos[0];\n        this.currentBlendMode = 99999;\n\n        this.boundTextures = new Array(this.MAX_TEXTURES);\n    }\n\n    /**\n     * Called before the renderer starts rendering.\n     *\n     */\n    onPrerender()\n    {\n        this.vertexCount = 0;\n    }\n\n    /**\n     * Renders the sprite object.\n     *\n     * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\n     */\n    render(sprite)\n    {\n        // TODO set blend modes..\n        // check texture..\n        if (this.currentIndex >= this.size)\n        {\n            this.flush();\n        }\n\n        // get the uvs for the texture\n\n        // if the uvs have not updated then no point rendering just yet!\n        if (!sprite.texture._uvs)\n        {\n            return;\n        }\n\n        // push a texture.\n        // increment the batchsize\n        this.sprites[this.currentIndex++] = sprite;\n    }\n\n    /**\n     * Renders the content and empties the current batch.\n     *\n     */\n    flush()\n    {\n        if (this.currentIndex === 0)\n        {\n            return;\n        }\n\n        const gl = this.renderer.gl;\n        const MAX_TEXTURES = this.MAX_TEXTURES;\n\n        const np2 = bitTwiddle.nextPow2(this.currentIndex);\n        const log2 = bitTwiddle.log2(np2);\n        const buffer = this.buffers[log2];\n\n        const sprites = this.sprites;\n        const groups = this.groups;\n\n        const float32View = buffer.float32View;\n        const uint32View = buffer.uint32View;\n\n        const boundTextures = this.boundTextures;\n        const rendererBoundTextures = this.renderer.boundTextures;\n        const touch = this.renderer.textureGC.count;\n\n        let index = 0;\n        let nextTexture;\n        let currentTexture;\n        let groupCount = 1;\n        let textureCount = 0;\n        let currentGroup = groups[0];\n        let vertexData;\n        let uvs;\n        let blendMode = sprites[0].blendMode;\n\n        currentGroup.textureCount = 0;\n        currentGroup.start = 0;\n        currentGroup.blend = blendMode;\n\n        TICK++;\n\n        let i;\n\n        // copy textures..\n        for (i = 0; i < MAX_TEXTURES; ++i)\n        {\n            boundTextures[i] = rendererBoundTextures[i];\n            boundTextures[i]._virtalBoundId = i;\n        }\n\n        for (i = 0; i < this.currentIndex; ++i)\n        {\n            // upload the sprite elemetns...\n            // they have all ready been calculated so we just need to push them into the buffer.\n            const sprite = sprites[i];\n\n            nextTexture = sprite._texture.baseTexture;\n\n            if (blendMode !== sprite.blendMode)\n            {\n                // finish a group..\n                blendMode = sprite.blendMode;\n\n                // force the batch to break!\n                currentTexture = null;\n                textureCount = MAX_TEXTURES;\n                TICK++;\n            }\n\n            if (currentTexture !== nextTexture)\n            {\n                currentTexture = nextTexture;\n\n                if (nextTexture._enabled !== TICK)\n                {\n                    if (textureCount === MAX_TEXTURES)\n                    {\n                        TICK++;\n\n                        currentGroup.size = i - currentGroup.start;\n\n                        textureCount = 0;\n\n                        currentGroup = groups[groupCount++];\n                        currentGroup.blend = blendMode;\n                        currentGroup.textureCount = 0;\n                        currentGroup.start = i;\n                    }\n\n                    nextTexture.touched = touch;\n\n                    if (nextTexture._virtalBoundId === -1)\n                    {\n                        for (let j = 0; j < MAX_TEXTURES; ++j)\n                        {\n                            const tIndex = (j + TEXTURE_TICK) % MAX_TEXTURES;\n\n                            const t = boundTextures[tIndex];\n\n                            if (t._enabled !== TICK)\n                            {\n                                TEXTURE_TICK++;\n\n                                t._virtalBoundId = -1;\n\n                                nextTexture._virtalBoundId = tIndex;\n\n                                boundTextures[tIndex] = nextTexture;\n                                break;\n                            }\n                        }\n                    }\n\n                    nextTexture._enabled = TICK;\n\n                    currentGroup.textureCount++;\n                    currentGroup.ids[textureCount] = nextTexture._virtalBoundId;\n                    currentGroup.textures[textureCount++] = nextTexture;\n                }\n            }\n\n            vertexData = sprite.vertexData;\n\n            // TODO this sum does not need to be set each frame..\n            uvs = sprite._texture._uvs.uvsUint32;\n\n            if (this.renderer.roundPixels)\n            {\n                const resolution = this.renderer.resolution;\n\n                // xy\n                float32View[index] = ((vertexData[0] * resolution) | 0) / resolution;\n                float32View[index + 1] = ((vertexData[1] * resolution) | 0) / resolution;\n\n                // xy\n                float32View[index + 5] = ((vertexData[2] * resolution) | 0) / resolution;\n                float32View[index + 6] = ((vertexData[3] * resolution) | 0) / resolution;\n\n                // xy\n                float32View[index + 10] = ((vertexData[4] * resolution) | 0) / resolution;\n                float32View[index + 11] = ((vertexData[5] * resolution) | 0) / resolution;\n\n                // xy\n                float32View[index + 15] = ((vertexData[6] * resolution) | 0) / resolution;\n                float32View[index + 16] = ((vertexData[7] * resolution) | 0) / resolution;\n            }\n            else\n            {\n                // xy\n                float32View[index] = vertexData[0];\n                float32View[index + 1] = vertexData[1];\n\n                // xy\n                float32View[index + 5] = vertexData[2];\n                float32View[index + 6] = vertexData[3];\n\n                // xy\n                float32View[index + 10] = vertexData[4];\n                float32View[index + 11] = vertexData[5];\n\n                // xy\n                float32View[index + 15] = vertexData[6];\n                float32View[index + 16] = vertexData[7];\n            }\n\n            uint32View[index + 2] = uvs[0];\n            uint32View[index + 7] = uvs[1];\n            uint32View[index + 12] = uvs[2];\n            uint32View[index + 17] = uvs[3];\n\n            uint32View[index + 3] = uint32View[index + 8] = uint32View[index + 13] = uint32View[index + 18] = sprite._tintRGB + (sprite.worldAlpha * 255 << 24);\n\n            float32View[index + 4] = float32View[index + 9] = float32View[index + 14] = float32View[index + 19] = nextTexture._virtalBoundId;\n\n            index += 20;\n        }\n\n        currentGroup.size = i - currentGroup.start;\n\n        if (!CAN_UPLOAD_SAME_BUFFER)\n        {\n            // this is still needed for IOS performance..\n            // it realy doe not like uploading to  the same bufffer in a single frame!\n            if (this.vaoMax <= this.vertexCount)\n            {\n                this.vaoMax++;\n                this.vertexBuffers[this.vertexCount] = glCore.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n\n                // build the vao object that will render..\n                this.vaos[this.vertexCount] = this.renderer.createVao()\n                    .addIndex(this.indexBuffer)\n                    .addAttribute(this.vertexBuffers[this.vertexCount], this.shader.attributes.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\n                    .addAttribute(this.vertexBuffers[this.vertexCount], this.shader.attributes.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 2 * 4)\n                    .addAttribute(this.vertexBuffers[this.vertexCount], this.shader.attributes.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 3 * 4)\n                    .addAttribute(this.vertexBuffers[this.vertexCount], this.shader.attributes.aTextureId, gl.FLOAT, false, this.vertByteSize, 4 * 4);\n            }\n\n            this.renderer.bindVao(this.vaos[this.vertexCount]);\n\n            this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, false);\n\n            this.vertexCount++;\n        }\n        else\n        {\n            // lets use the faster option..\n            this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, true);\n        }\n\n        for (i = 0; i < MAX_TEXTURES; ++i)\n        {\n            rendererBoundTextures[i]._virtalBoundId = -1;\n        }\n\n        // render the groups..\n        for (i = 0; i < groupCount; ++i)\n        {\n            const group = groups[i];\n            const groupTextureCount = group.textureCount;\n\n            for (let j = 0; j < groupTextureCount; j++)\n            {\n                currentTexture = group.textures[j];\n\n                // reset virtual ids..\n                // lets do a quick check..\n                if (rendererBoundTextures[group.ids[j]] !== currentTexture)\n                {\n                    this.renderer.bindTexture(currentTexture, group.ids[j], true);\n                }\n\n                // reset the virtualId..\n                currentTexture._virtalBoundId = -1;\n            }\n\n            // set the blend mode..\n            this.renderer.state.setBlendMode(group.blend);\n\n            gl.drawElements(gl.TRIANGLES, group.size * 6, gl.UNSIGNED_SHORT, group.start * 6 * 2);\n        }\n\n        // reset elements for the next flush\n        this.currentIndex = 0;\n    }\n\n    /**\n     * Starts a new sprite batch.\n     */\n    start()\n    {\n        this.renderer.bindShader(this.shader);\n\n        this.renderer.bindVao(this.vaos[this.vertexCount]);\n\n        this.vertexBuffers[this.vertexCount].bind();\n    }\n\n    /**\n     * Stops and flushes the current batch.\n     *\n     */\n    stop()\n    {\n        this.flush();\n    }\n\n    /**\n     * Destroys the SpriteBatch.\n     *\n     */\n    destroy()\n    {\n        for (let i = 0; i < this.vaoMax; i++)\n        {\n            if (this.vertexBuffers[i])\n            {\n                this.vertexBuffers[i].destroy();\n            }\n            if (this.vaos[i])\n            {\n                this.vaos[i].destroy();\n            }\n        }\n\n        if (this.indexBuffer)\n        {\n            this.indexBuffer.destroy();\n        }\n\n        this.renderer.off('prerender', this.onPrerender, this);\n\n        super.destroy();\n\n        if (this.shader)\n        {\n            this.shader.destroy();\n            this.shader = null;\n        }\n\n        this.vertexBuffers = null;\n        this.vaos = null;\n        this.indexBuffer = null;\n        this.indices = null;\n\n        this.sprites = null;\n\n        for (let i = 0; i < this.buffers.length; ++i)\n        {\n            this.buffers[i].destroy();\n        }\n    }\n}\n\nWebGLRenderer.registerPlugin('sprite', SpriteRenderer);\n","// disabling eslint for now, going to rewrite this in v5\n/* eslint-disable */\n\nimport { TEXT_GRADIENT } from '../const';\nimport { hex2string } from '../utils';\n\nconst defaultStyle = {\n    align: 'left',\n    breakWords: false,\n    dropShadow: false,\n    dropShadowAngle: Math.PI / 6,\n    dropShadowBlur: 0,\n    dropShadowColor: '#000000',\n    dropShadowDistance: 5,\n    fill: 'black',\n    fillGradientType: TEXT_GRADIENT.LINEAR_VERTICAL,\n    fontFamily: 'Arial',\n    fontSize: 26,\n    fontStyle: 'normal',\n    fontVariant: 'normal',\n    fontWeight: 'normal',\n    letterSpacing: 0,\n    lineHeight: 0,\n    lineJoin: 'miter',\n    miterLimit: 10,\n    padding: 0,\n    stroke: 'black',\n    strokeThickness: 0,\n    textBaseline: 'alphabetic',\n    wordWrap: false,\n    wordWrapWidth: 100,\n};\n\n/**\n * A TextStyle Object decorates a Text Object. It can be shared between\n * multiple Text objects. Changing the style will update all text objects using it.\n *\n * @class\n * @memberof PIXI\n */\nexport default class TextStyle\n{\n    /**\n     * @param {object} [style] - The style parameters\n     * @param {string} [style.align='left'] - Alignment for multiline text ('left', 'center' or 'right'),\n     *  does not affect single line text\n     * @param {boolean} [style.breakWords=false] - Indicates if lines can be wrapped within words, it\n     *  needs wordWrap to be set to true\n     * @param {boolean} [style.dropShadow=false] - Set a drop shadow for the text\n     * @param {number} [style.dropShadowAngle=Math.PI/6] - Set a angle of the drop shadow\n     * @param {number} [style.dropShadowBlur=0] - Set a shadow blur radius\n     * @param {string} [style.dropShadowColor='#000000'] - A fill style to be used on the dropshadow e.g 'red', '#00FF00'\n     * @param {number} [style.dropShadowDistance=5] - Set a distance of the drop shadow\n     * @param {string|string[]|number|number[]|CanvasGradient|CanvasPattern} [style.fill='black'] - A canvas\n     *  fillstyle that will be used on the text e.g 'red', '#00FF00'. Can be an array to create a gradient\n     *  eg ['#000000','#FFFFFF']\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle|MDN}\n     * @param {number} [style.fillGradientType=PIXI.TEXT_GRADIENT.LINEAR_VERTICAL] - If fills styles are\n     *  supplied, this can change the type/direction of the gradient. See {@link PIXI.TEXT_GRADIENT} for possible values\n     * @param {string} [style.fontFamily='Arial'] - The font family\n     * @param {number|string} [style.fontSize=26] - The font size (as a number it converts to px, but as a string,\n     *  equivalents are '26px','20pt','160%' or '1.6em')\n     * @param {string} [style.fontStyle='normal'] - The font style ('normal', 'italic' or 'oblique')\n     * @param {string} [style.fontVariant='normal'] - The font variant ('normal' or 'small-caps')\n     * @param {string} [style.fontWeight='normal'] - The font weight ('normal', 'bold', 'bolder', 'lighter' and '100',\n     *  '200', '300', '400', '500', '600', '700', 800' or '900')\n     * @param {number} [style.letterSpacing=0] - The amount of spacing between letters, default is 0\n     * @param {number} [style.lineHeight] - The line height, a number that represents the vertical space that a letter uses\n     * @param {string} [style.lineJoin='miter'] - The lineJoin property sets the type of corner created, it can resolve\n     *      spiked text issues. Default is 'miter' (creates a sharp corner).\n     * @param {number} [style.miterLimit=10] - The miter limit to use when using the 'miter' lineJoin mode. This can reduce\n     *      or increase the spikiness of rendered text.\n     * @param {number} [style.padding=0] - Occasionally some fonts are cropped. Adding some padding will prevent this from\n     *     happening by adding padding to all sides of the text.\n     * @param {string|number} [style.stroke='black'] - A canvas fillstyle that will be used on the text stroke\n     *  e.g 'blue', '#FCFF00'\n     * @param {number} [style.strokeThickness=0] - A number that represents the thickness of the stroke.\n     *  Default is 0 (no stroke)\n     * @param {string} [style.textBaseline='alphabetic'] - The baseline of the text that is rendered.\n     * @param {boolean} [style.wordWrap=false] - Indicates if word wrap should be used\n     * @param {number} [style.wordWrapWidth=100] - The width at which text will wrap, it needs wordWrap to be set to true\n     */\n    constructor(style)\n    {\n        this.styleID = 0;\n\n        Object.assign(this, defaultStyle, style);\n    }\n\n    /**\n     * Creates a new TextStyle object with the same values as this one.\n     * Note that the only the properties of the object are cloned.\n     *\n     * @return {PIXI.TextStyle} New cloned TextStyle object\n     */\n    clone()\n    {\n        const clonedProperties = {};\n\n        for (const key in this._defaults)\n        {\n            clonedProperties[key] = this[key];\n        }\n\n        return new TextStyle(clonedProperties);\n    }\n\n    /**\n     * Resets all properties to the defaults specified in TextStyle.prototype._default\n     */\n    reset()\n    {\n        Object.assign(this, this._defaults);\n    }\n\n    get align()\n    {\n        return this._align;\n    }\n    set align(align)\n    {\n        if (this._align !== align)\n        {\n            this._align = align;\n            this.styleID++;\n        }\n    }\n\n    get breakWords()\n    {\n        return this._breakWords;\n    }\n    set breakWords(breakWords)\n    {\n        if (this._breakWords !== breakWords)\n        {\n            this._breakWords = breakWords;\n            this.styleID++;\n        }\n    }\n\n    get dropShadow()\n    {\n        return this._dropShadow;\n    }\n    set dropShadow(dropShadow)\n    {\n        if (this._dropShadow !== dropShadow)\n        {\n            this._dropShadow = dropShadow;\n            this.styleID++;\n        }\n    }\n\n    get dropShadowAngle()\n    {\n        return this._dropShadowAngle;\n    }\n    set dropShadowAngle(dropShadowAngle)\n    {\n        if (this._dropShadowAngle !== dropShadowAngle)\n        {\n            this._dropShadowAngle = dropShadowAngle;\n            this.styleID++;\n        }\n    }\n\n    get dropShadowBlur()\n    {\n        return this._dropShadowBlur;\n    }\n    set dropShadowBlur(dropShadowBlur)\n    {\n        if (this._dropShadowBlur !== dropShadowBlur)\n        {\n            this._dropShadowBlur = dropShadowBlur;\n            this.styleID++;\n        }\n    }\n\n    get dropShadowColor()\n    {\n        return this._dropShadowColor;\n    }\n    set dropShadowColor(dropShadowColor)\n    {\n        const outputColor = getColor(dropShadowColor);\n        if (this._dropShadowColor !== outputColor)\n        {\n            this._dropShadowColor = outputColor;\n            this.styleID++;\n        }\n    }\n\n    get dropShadowDistance()\n    {\n        return this._dropShadowDistance;\n    }\n    set dropShadowDistance(dropShadowDistance)\n    {\n        if (this._dropShadowDistance !== dropShadowDistance)\n        {\n            this._dropShadowDistance = dropShadowDistance;\n            this.styleID++;\n        }\n    }\n\n    get fill()\n    {\n        return this._fill;\n    }\n    set fill(fill)\n    {\n        const outputColor = getColor(fill);\n        if (this._fill !== outputColor)\n        {\n            this._fill = outputColor;\n            this.styleID++;\n        }\n    }\n\n    get fillGradientType()\n    {\n        return this._fillGradientType;\n    }\n    set fillGradientType(fillGradientType)\n    {\n        if (this._fillGradientType !== fillGradientType)\n        {\n            this._fillGradientType = fillGradientType;\n            this.styleID++;\n        }\n    }\n\n    get fontFamily()\n    {\n        return this._fontFamily;\n    }\n    set fontFamily(fontFamily)\n    {\n        if (this.fontFamily !== fontFamily)\n        {\n            this._fontFamily = fontFamily;\n            this.styleID++;\n        }\n    }\n\n    get fontSize()\n    {\n        return this._fontSize;\n    }\n    set fontSize(fontSize)\n    {\n        if (this._fontSize !== fontSize)\n        {\n            this._fontSize = fontSize;\n            this.styleID++;\n        }\n    }\n\n    get fontStyle()\n    {\n        return this._fontStyle;\n    }\n    set fontStyle(fontStyle)\n    {\n        if (this._fontStyle !== fontStyle)\n        {\n            this._fontStyle = fontStyle;\n            this.styleID++;\n        }\n    }\n\n    get fontVariant()\n    {\n        return this._fontVariant;\n    }\n    set fontVariant(fontVariant)\n    {\n        if (this._fontVariant !== fontVariant)\n        {\n            this._fontVariant = fontVariant;\n            this.styleID++;\n        }\n    }\n\n    get fontWeight()\n    {\n        return this._fontWeight;\n    }\n    set fontWeight(fontWeight)\n    {\n        if (this._fontWeight !== fontWeight)\n        {\n            this._fontWeight = fontWeight;\n            this.styleID++;\n        }\n    }\n\n    get letterSpacing()\n    {\n        return this._letterSpacing;\n    }\n    set letterSpacing(letterSpacing)\n    {\n        if (this._letterSpacing !== letterSpacing)\n        {\n            this._letterSpacing = letterSpacing;\n            this.styleID++;\n        }\n    }\n\n    get lineHeight()\n    {\n        return this._lineHeight;\n    }\n    set lineHeight(lineHeight)\n    {\n        if (this._lineHeight !== lineHeight)\n        {\n            this._lineHeight = lineHeight;\n            this.styleID++;\n        }\n    }\n\n    get lineJoin()\n    {\n        return this._lineJoin;\n    }\n    set lineJoin(lineJoin)\n    {\n        if (this._lineJoin !== lineJoin)\n        {\n            this._lineJoin = lineJoin;\n            this.styleID++;\n        }\n    }\n\n    get miterLimit()\n    {\n        return this._miterLimit;\n    }\n    set miterLimit(miterLimit)\n    {\n        if (this._miterLimit !== miterLimit)\n        {\n            this._miterLimit = miterLimit;\n            this.styleID++;\n        }\n    }\n\n    get padding()\n    {\n        return this._padding;\n    }\n    set padding(padding)\n    {\n        if (this._padding !== padding)\n        {\n            this._padding = padding;\n            this.styleID++;\n        }\n    }\n\n    get stroke()\n    {\n        return this._stroke;\n    }\n    set stroke(stroke)\n    {\n        const outputColor = getColor(stroke);\n        if (this._stroke !== outputColor)\n        {\n            this._stroke = outputColor;\n            this.styleID++;\n        }\n    }\n\n    get strokeThickness()\n    {\n        return this._strokeThickness;\n    }\n    set strokeThickness(strokeThickness)\n    {\n        if (this._strokeThickness !== strokeThickness)\n        {\n            this._strokeThickness = strokeThickness;\n            this.styleID++;\n        }\n    }\n\n    get textBaseline()\n    {\n        return this._textBaseline;\n    }\n    set textBaseline(textBaseline)\n    {\n        if (this._textBaseline !== textBaseline)\n        {\n            this._textBaseline = textBaseline;\n            this.styleID++;\n        }\n    }\n\n    get wordWrap()\n    {\n        return this._wordWrap;\n    }\n    set wordWrap(wordWrap)\n    {\n        if (this._wordWrap !== wordWrap)\n        {\n            this._wordWrap = wordWrap;\n            this.styleID++;\n        }\n    }\n\n    get wordWrapWidth()\n    {\n        return this._wordWrapWidth;\n    }\n    set wordWrapWidth(wordWrapWidth)\n    {\n        if (this._wordWrapWidth !== wordWrapWidth)\n        {\n            this._wordWrapWidth = wordWrapWidth;\n            this.styleID++;\n        }\n    }\n}\n\n/**\n * Utility function to convert hexadecimal colors to strings, and simply return the color if it's a string.\n *\n * @param {number|number[]} color\n * @return {string} The color as a string.\n */\nfunction getColor(color)\n{\n    if (typeof color === 'number')\n    {\n        return hex2string(color);\n    }\n    else if (Array.isArray(color))\n    {\n        for (let i = 0; i < color.length; ++i)\n        {\n            if (typeof color[i] === 'number')\n            {\n                color[i] = hex2string(color[i]);\n            }\n        }\n    }\n\n    return color;\n}\n","/* eslint max-depth: [2, 8] */\nimport Sprite from '../sprites/Sprite';\nimport Texture from '../textures/Texture';\nimport { Rectangle } from '../math';\nimport { sign } from '../utils';\nimport { TEXT_GRADIENT } from '../const';\nimport settings from '../settings';\nimport TextStyle from './TextStyle';\n\nconst { RESOLUTION } = settings;\n\nconst defaultDestroyOptions = {\n    texture: true,\n    children: false,\n    baseTexture: true,\n};\n\n/**\n * A Text Object will create a line or multiple lines of text. To split a line you can use '\\n' in your text string,\n * or add a wordWrap property set to true and and wordWrapWidth property with a value in the style object.\n *\n * A Text can be created directly from a string and a style object\n *\n * ```js\n * let text = new PIXI.Text('This is a pixi text',{fontFamily : 'Arial', fontSize: 24, fill : 0xff1010, align : 'center'});\n * ```\n *\n * @class\n * @extends PIXI.Sprite\n * @memberof PIXI\n */\nexport default class Text extends Sprite\n{\n    /**\n     * @param {string} text - The string that you would like the text to display\n     * @param {object|PIXI.TextStyle} [style] - The style parameters\n     */\n    constructor(text, style)\n    {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = 3;\n        canvas.height = 3;\n\n        const texture = Texture.fromCanvas(canvas);\n\n        texture.orig = new Rectangle();\n        texture.trim = new Rectangle();\n\n        super(texture);\n\n        /**\n         * The canvas element that everything is drawn to\n         *\n         * @member {HTMLCanvasElement}\n         */\n        this.canvas = canvas;\n\n        /**\n         * The canvas 2d context that everything is drawn with\n         * @member {HTMLCanvasElement}\n         */\n        this.context = this.canvas.getContext('2d');\n\n        /**\n         * The resolution / device pixel ratio of the canvas. This is set automatically by the renderer.\n         * @member {number}\n         * @default 1\n         */\n        this.resolution = RESOLUTION;\n\n        /**\n         * Private tracker for the current text.\n         *\n         * @member {string}\n         * @private\n         */\n        this._text = null;\n\n        /**\n         * Private tracker for the current style.\n         *\n         * @member {object}\n         * @private\n         */\n        this._style = null;\n        /**\n         * Private listener to track style changes.\n         *\n         * @member {Function}\n         * @private\n         */\n        this._styleListener = null;\n\n        /**\n         * Private tracker for the current font.\n         *\n         * @member {string}\n         * @private\n         */\n        this._font = '';\n\n        this.text = text;\n        this.style = style;\n\n        this.localStyleID = -1;\n    }\n\n    /**\n     * Renders text and updates it when needed.\n     *\n     * @private\n     * @param {boolean} respectDirty - Whether to abort updating the text if the Text isn't dirty and the function is called.\n     */\n    updateText(respectDirty)\n    {\n        const style = this._style;\n\n        // check if style has changed..\n        if (this.localStyleID !== style.styleID)\n        {\n            this.dirty = true;\n            this.localStyleID = style.styleID;\n        }\n\n        if (!this.dirty && respectDirty)\n        {\n            return;\n        }\n\n        this._font = Text.getFontStyle(style);\n\n        this.context.font = this._font;\n\n        // word wrap\n        // preserve original text\n        const outputText = style.wordWrap ? this.wordWrap(this._text) : this._text;\n\n        // split text into lines\n        const lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n\n        // calculate text width\n        const lineWidths = new Array(lines.length);\n        let maxLineWidth = 0;\n        const fontProperties = Text.calculateFontProperties(this._font);\n\n        for (let i = 0; i < lines.length; i++)\n        {\n            const lineWidth = this.context.measureText(lines[i]).width + ((lines[i].length - 1) * style.letterSpacing);\n\n            lineWidths[i] = lineWidth;\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        let width = maxLineWidth + style.strokeThickness;\n\n        if (style.dropShadow)\n        {\n            width += style.dropShadowDistance;\n        }\n\n        width += style.padding * 2;\n\n        this.canvas.width = Math.ceil((width + this.context.lineWidth) * this.resolution);\n\n        // calculate text height\n        const lineHeight = this.style.lineHeight || fontProperties.fontSize + style.strokeThickness;\n\n        let height = Math.max(lineHeight, fontProperties.fontSize + style.strokeThickness)\n            + ((lines.length - 1) * lineHeight);\n\n        if (style.dropShadow)\n        {\n            height += style.dropShadowDistance;\n        }\n\n        this.canvas.height = Math.ceil((height + (this._style.padding * 2)) * this.resolution);\n\n        this.context.scale(this.resolution, this.resolution);\n\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        this.context.font = this._font;\n        this.context.strokeStyle = style.stroke;\n        this.context.lineWidth = style.strokeThickness;\n        this.context.textBaseline = style.textBaseline;\n        this.context.lineJoin = style.lineJoin;\n        this.context.miterLimit = style.miterLimit;\n\n        let linePositionX;\n        let linePositionY;\n\n        if (style.dropShadow)\n        {\n            if (style.dropShadowBlur > 0)\n            {\n                this.context.shadowColor = style.dropShadowColor;\n                this.context.shadowBlur = style.dropShadowBlur;\n            }\n            else\n            {\n                this.context.fillStyle = style.dropShadowColor;\n            }\n\n            const xShadowOffset = Math.cos(style.dropShadowAngle) * style.dropShadowDistance;\n            const yShadowOffset = Math.sin(style.dropShadowAngle) * style.dropShadowDistance;\n\n            for (let i = 0; i < lines.length; i++)\n            {\n                linePositionX = style.strokeThickness / 2;\n                linePositionY = ((style.strokeThickness / 2) + (i * lineHeight)) + fontProperties.ascent;\n\n                if (style.align === 'right')\n                {\n                    linePositionX += maxLineWidth - lineWidths[i];\n                }\n                else if (style.align === 'center')\n                {\n                    linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n                }\n\n                if (style.fill)\n                {\n                    this.drawLetterSpacing(\n                        lines[i],\n                        linePositionX + xShadowOffset + style.padding, linePositionY + yShadowOffset + style.padding\n                    );\n\n                    if (style.stroke && style.strokeThickness)\n                    {\n                        this.context.strokeStyle = style.dropShadowColor;\n                        this.drawLetterSpacing(\n                            lines[i],\n                            linePositionX + xShadowOffset + style.padding, linePositionY + yShadowOffset + style.padding,\n                            true\n                        );\n                        this.context.strokeStyle = style.stroke;\n                    }\n                }\n            }\n        }\n\n        // set canvas text styles\n        this.context.fillStyle = this._generateFillStyle(style, lines);\n\n        // draw lines line by line\n        for (let i = 0; i < lines.length; i++)\n        {\n            linePositionX = style.strokeThickness / 2;\n            linePositionY = ((style.strokeThickness / 2) + (i * lineHeight)) + fontProperties.ascent;\n\n            if (style.align === 'right')\n            {\n                linePositionX += maxLineWidth - lineWidths[i];\n            }\n            else if (style.align === 'center')\n            {\n                linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n            }\n\n            if (style.stroke && style.strokeThickness)\n            {\n                this.drawLetterSpacing(lines[i], linePositionX + style.padding, linePositionY + style.padding, true);\n            }\n\n            if (style.fill)\n            {\n                this.drawLetterSpacing(lines[i], linePositionX + style.padding, linePositionY + style.padding);\n            }\n        }\n\n        this.updateTexture();\n    }\n\n    /**\n     * Render the text with letter-spacing.\n     * @param {string} text - The text to draw\n     * @param {number} x - Horizontal position to draw the text\n     * @param {number} y - Vertical position to draw the text\n     * @param {boolean} [isStroke=false] - Is this drawing for the outside stroke of the\n     *  text? If not, it's for the inside fill\n     * @private\n     */\n    drawLetterSpacing(text, x, y, isStroke = false)\n    {\n        const style = this._style;\n\n        // letterSpacing of 0 means normal\n        const letterSpacing = style.letterSpacing;\n\n        if (letterSpacing === 0)\n        {\n            if (isStroke)\n            {\n                this.context.strokeText(text, x, y);\n            }\n            else\n            {\n                this.context.fillText(text, x, y);\n            }\n\n            return;\n        }\n\n        const characters = String.prototype.split.call(text, '');\n        let currentPosition = x;\n        let index = 0;\n        let current = '';\n\n        while (index < text.length)\n        {\n            current = characters[index++];\n            if (isStroke)\n            {\n                this.context.strokeText(current, currentPosition, y);\n            }\n            else\n            {\n                this.context.fillText(current, currentPosition, y);\n            }\n            currentPosition += this.context.measureText(current).width + letterSpacing;\n        }\n    }\n\n    /**\n     * Updates texture size based on canvas size\n     *\n     * @private\n     */\n    updateTexture()\n    {\n        const texture = this._texture;\n        const style = this._style;\n\n        texture.baseTexture.hasLoaded = true;\n        texture.baseTexture.resolution = this.resolution;\n\n        texture.baseTexture.realWidth = this.canvas.width;\n        texture.baseTexture.realHeight = this.canvas.height;\n        texture.baseTexture.width = this.canvas.width / this.resolution;\n        texture.baseTexture.height = this.canvas.height / this.resolution;\n        texture.trim.width = texture._frame.width = this.canvas.width / this.resolution;\n        texture.trim.height = texture._frame.height = this.canvas.height / this.resolution;\n\n        texture.trim.x = -style.padding;\n        texture.trim.y = -style.padding;\n\n        texture.orig.width = texture._frame.width - (style.padding * 2);\n        texture.orig.height = texture._frame.height - (style.padding * 2);\n\n        // call sprite onTextureUpdate to update scale if _width or _height were set\n        this._onTextureUpdate();\n\n        texture.baseTexture.emit('update', texture.baseTexture);\n\n        this.dirty = false;\n    }\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n    renderWebGL(renderer)\n    {\n        if (this.resolution !== renderer.resolution)\n        {\n            this.resolution = renderer.resolution;\n            this.dirty = true;\n        }\n\n        this.updateText(true);\n\n        super.renderWebGL(renderer);\n    }\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n    _renderCanvas(renderer)\n    {\n        if (this.resolution !== renderer.resolution)\n        {\n            this.resolution = renderer.resolution;\n            this.dirty = true;\n        }\n\n        this.updateText(true);\n\n        super._renderCanvas(renderer);\n    }\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     *\n     * @private\n     * @param {string} text - String to apply word wrapping to\n     * @return {string} New string with new lines applied where required\n     */\n    wordWrap(text)\n    {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer\n        // than its horizontal bounds.\n        let result = '';\n        const lines = text.split('\\n');\n        const wordWrapWidth = this._style.wordWrapWidth;\n\n        for (let i = 0; i < lines.length; i++)\n        {\n            let spaceLeft = wordWrapWidth;\n            const words = lines[i].split(' ');\n\n            for (let j = 0; j < words.length; j++)\n            {\n                const wordWidth = this.context.measureText(words[j]).width;\n\n                if (this._style.breakWords && wordWidth > wordWrapWidth)\n                {\n                    // Word should be split in the middle\n                    const characters = words[j].split('');\n\n                    for (let c = 0; c < characters.length; c++)\n                    {\n                        const characterWidth = this.context.measureText(characters[c]).width;\n\n                        if (characterWidth > spaceLeft)\n                        {\n                            result += `\\n${characters[c]}`;\n                            spaceLeft = wordWrapWidth - characterWidth;\n                        }\n                        else\n                        {\n                            if (c === 0)\n                            {\n                                result += ' ';\n                            }\n\n                            result += characters[c];\n                            spaceLeft -= characterWidth;\n                        }\n                    }\n                }\n                else\n                {\n                    const wordWidthWithSpace = wordWidth + this.context.measureText(' ').width;\n\n                    if (j === 0 || wordWidthWithSpace > spaceLeft)\n                    {\n                        // Skip printing the newline if it's the first word of the line that is\n                        // greater than the word wrap width.\n                        if (j > 0)\n                        {\n                            result += '\\n';\n                        }\n                        result += words[j];\n                        spaceLeft = wordWrapWidth - wordWidth;\n                    }\n                    else\n                    {\n                        spaceLeft -= wordWidthWithSpace;\n                        result += ` ${words[j]}`;\n                    }\n                }\n            }\n\n            if (i < lines.length - 1)\n            {\n                result += '\\n';\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * calculates the bounds of the Text as a rectangle. The bounds calculation takes the worldTransform into account.\n     */\n    _calculateBounds()\n    {\n        this.updateText(true);\n        this.calculateVertices();\n        // if we have already done this on THIS frame.\n        this._bounds.addQuad(this.vertexData);\n    }\n\n    /**\n     * Method to be called upon a TextStyle change.\n     * @private\n     */\n    _onStyleChange()\n    {\n        this.dirty = true;\n    }\n\n    /**\n     * Generates the fill style. Can automatically generate a gradient based on the fill style being an array\n     *\n     * @private\n     * @param {object} style - The style.\n     * @param {string} lines - The lines of text.\n     * @return {string|number|CanvasGradient} The fill style\n     */\n    _generateFillStyle(style, lines)\n    {\n        if (!Array.isArray(style.fill))\n        {\n            return style.fill;\n        }\n\n        // cocoon on canvas+ cannot generate textures, so use the first colour instead\n        if (navigator.isCocoonJS)\n        {\n            return style.fill[0];\n        }\n\n        // the gradient will be evenly spaced out according to how large the array is.\n        // ['#FF0000', '#00FF00', '#0000FF'] would created stops at 0.25, 0.5 and 0.75\n        let gradient;\n        let totalIterations;\n        let currentIteration;\n        let stop;\n\n        const width = this.canvas.width / this.resolution;\n        const height = this.canvas.height / this.resolution;\n\n        if (style.fillGradientType === TEXT_GRADIENT.LINEAR_VERTICAL)\n        {\n            // start the gradient at the top center of the canvas, and end at the bottom middle of the canvas\n            gradient = this.context.createLinearGradient(width / 2, 0, width / 2, height);\n\n            // we need to repeat the gradient so that each individual line of text has the same vertical gradient effect\n            // ['#FF0000', '#00FF00', '#0000FF'] over 2 lines would create stops at 0.125, 0.25, 0.375, 0.625, 0.75, 0.875\n            totalIterations = (style.fill.length + 1) * lines.length;\n            currentIteration = 0;\n            for (let i = 0; i < lines.length; i++)\n            {\n                currentIteration += 1;\n                for (let j = 0; j < style.fill.length; j++)\n                {\n                    stop = (currentIteration / totalIterations);\n                    gradient.addColorStop(stop, style.fill[j]);\n                    currentIteration++;\n                }\n            }\n        }\n        else\n        {\n            // start the gradient at the center left of the canvas, and end at the center right of the canvas\n            gradient = this.context.createLinearGradient(0, height / 2, width, height / 2);\n\n            // can just evenly space out the gradients in this case, as multiple lines makes no difference\n            // to an even left to right gradient\n            totalIterations = style.fill.length + 1;\n            currentIteration = 1;\n\n            for (let i = 0; i < style.fill.length; i++)\n            {\n                stop = currentIteration / totalIterations;\n                gradient.addColorStop(stop, style.fill[i]);\n                currentIteration++;\n            }\n        }\n\n        return gradient;\n    }\n\n    /**\n     * Destroys this text object.\n     * Note* Unlike a Sprite, a Text object will automatically destroy its baseTexture and texture as\n     * the majorety of the time the texture will not be shared with any other Sprites.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their\n     *  destroy method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=true] - Should it destroy the current texture of the sprite as well\n     * @param {boolean} [options.baseTexture=true] - Should it destroy the base texture of the sprite as well\n     */\n    destroy(options)\n    {\n        if (typeof options === 'boolean')\n        {\n            options = { children: options };\n        }\n\n        options = Object.assign({}, defaultDestroyOptions, options);\n\n        super.destroy(options);\n\n        // make sure to reset the the context and canvas.. dont want this hanging around in memory!\n        this.context = null;\n        this.canvas = null;\n\n        this._style = null;\n    }\n\n    /**\n     * The width of the Text, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Text#\n     */\n    get width()\n    {\n        this.updateText(true);\n\n        return Math.abs(this.scale.x) * this.texture.orig.width;\n    }\n\n    /**\n     * Sets the width of the text.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set width(value)\n    {\n        this.updateText(true);\n\n        const s = sign(this.scale.x) || 1;\n\n        this.scale.x = s * value / this.texture.orig.width;\n        this._width = value;\n    }\n\n    /**\n     * The height of the Text, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Text#\n     */\n    get height()\n    {\n        this.updateText(true);\n\n        return Math.abs(this.scale.y) * this._texture.orig.height;\n    }\n\n    /**\n     * Sets the height of the text.\n     *\n     * @param {number} value - The value to set to.\n     */\n    set height(value)\n    {\n        this.updateText(true);\n\n        const s = sign(this.scale.y) || 1;\n\n        this.scale.y = s * value / this.texture.orig.height;\n        this._height = value;\n    }\n\n    /**\n     * Set the style of the text. Set up an event listener to listen for changes on the style\n     * object and mark the text as dirty.\n     *\n     * @member {object|PIXI.TextStyle}\n     * @memberof PIXI.Text#\n     */\n    get style()\n    {\n        return this._style;\n    }\n\n    /**\n     * Sets the style of the text.\n     *\n     * @param {object} style - The value to set to.\n     */\n    set style(style)\n    {\n        style = style || {};\n\n        if (style instanceof TextStyle)\n        {\n            this._style = style;\n        }\n        else\n        {\n            this._style = new TextStyle(style);\n        }\n\n        this.localStyleID = -1;\n        this.dirty = true;\n    }\n\n    /**\n     * Set the copy for the text object. To split a line you can use '\\n'.\n     *\n     * @member {string}\n     * @memberof PIXI.Text#\n     */\n    get text()\n    {\n        return this._text;\n    }\n\n    /**\n     * Sets the text.\n     *\n     * @param {string} text - The value to set to.\n     */\n    set text(text)\n    {\n        text = text || ' ';\n        text = text.toString();\n\n        if (this._text === text)\n        {\n            return;\n        }\n        this._text = text;\n        this.dirty = true;\n    }\n\n    /**\n     * Generates a font style string to use for Text.calculateFontProperties(). Takes the same parameter\n     * as Text.style.\n     *\n     * @static\n     * @param {object|TextStyle} style - String representing the style of the font\n     * @return {string} Font style string, for passing to Text.calculateFontProperties()\n     */\n    static getFontStyle(style)\n    {\n        style = style || {};\n\n        if (!(style instanceof TextStyle))\n        {\n            style = new TextStyle(style);\n        }\n\n        // build canvas api font setting from individual components. Convert a numeric style.fontSize to px\n        const fontSizeString = (typeof style.fontSize === 'number') ? `${style.fontSize}px` : style.fontSize;\n\n        return `${style.fontStyle} ${style.fontVariant} ${style.fontWeight} ${fontSizeString} ${style.fontFamily}`;\n    }\n\n    /**\n     * Calculates the ascent, descent and fontSize of a given fontStyle\n     *\n     * @static\n     * @param {string} fontStyle - String representing the style of the font\n     * @return {Object} Font properties object\n     */\n    static calculateFontProperties(fontStyle)\n    {\n        // as this method is used for preparing assets, don't recalculate things if we don't need to\n        if (Text.fontPropertiesCache[fontStyle])\n        {\n            return Text.fontPropertiesCache[fontStyle];\n        }\n\n        const properties = {};\n\n        const canvas = Text.fontPropertiesCanvas;\n        const context = Text.fontPropertiesContext;\n\n        context.font = fontStyle;\n\n        const width = Math.ceil(context.measureText('|MÉq').width);\n        let baseline = Math.ceil(context.measureText('M').width);\n        const height = 2 * baseline;\n\n        baseline = baseline * 1.4 | 0;\n\n        canvas.width = width;\n        canvas.height = height;\n\n        context.fillStyle = '#f00';\n        context.fillRect(0, 0, width, height);\n\n        context.font = fontStyle;\n\n        context.textBaseline = 'alphabetic';\n        context.fillStyle = '#000';\n        context.fillText('|MÉq', 0, baseline);\n\n        const imagedata = context.getImageData(0, 0, width, height).data;\n        const pixels = imagedata.length;\n        const line = width * 4;\n\n        let i = 0;\n        let idx = 0;\n        let stop = false;\n\n        // ascent. scan from top to bottom until we find a non red pixel\n        for (i = 0; i < baseline; ++i)\n        {\n            for (let j = 0; j < line; j += 4)\n            {\n                if (imagedata[idx + j] !== 255)\n                {\n                    stop = true;\n                    break;\n                }\n            }\n            if (!stop)\n            {\n                idx += line;\n            }\n            else\n            {\n                break;\n            }\n        }\n\n        properties.ascent = baseline - i;\n\n        idx = pixels - line;\n        stop = false;\n\n        // descent. scan from bottom to top until we find a non red pixel\n        for (i = height; i > baseline; --i)\n        {\n            for (let j = 0; j < line; j += 4)\n            {\n                if (imagedata[idx + j] !== 255)\n                {\n                    stop = true;\n                    break;\n                }\n            }\n\n            if (!stop)\n            {\n                idx -= line;\n            }\n            else\n            {\n                break;\n            }\n        }\n\n        properties.descent = i - baseline;\n        properties.fontSize = properties.ascent + properties.descent;\n\n        Text.fontPropertiesCache[fontStyle] = properties;\n\n        return properties;\n    }\n}\n\nText.fontPropertiesCache = {};\nText.fontPropertiesCanvas = document.createElement('canvas');\nText.fontPropertiesContext = Text.fontPropertiesCanvas.getContext('2d');\n","/**\n * A GraphicsData object.\n *\n * @class\n * @memberof PIXI\n */\nexport default class GraphicsData\n{\n    /**\n     *\n     * @param {number} lineWidth - the width of the line to draw\n     * @param {number} lineColor - the color of the line to draw\n     * @param {number} lineAlpha - the alpha of the line to draw\n     * @param {number} fillColor - the color of the fill\n     * @param {number} fillAlpha - the alpha of the fill\n     * @param {boolean} fill - whether or not the shape is filled with a colour\n     * @param {PIXI.Circle|PIXI.Rectangle|PIXI.Ellipse|PIXI.Polygon} shape - The shape object to draw.\n     */\n    constructor(lineWidth, lineColor, lineAlpha, fillColor, fillAlpha, fill, shape)\n    {\n        /**\n         * @member {number} the width of the line to draw\n         */\n        this.lineWidth = lineWidth;\n\n        /**\n         * @member {number} the color of the line to draw\n         */\n        this.lineColor = lineColor;\n\n        /**\n         * @member {number} the alpha of the line to draw\n         */\n        this.lineAlpha = lineAlpha;\n\n        /**\n         * @member {number} cached tint of the line to draw\n         */\n        this._lineTint = lineColor;\n\n        /**\n         * @member {number} the color of the fill\n         */\n        this.fillColor = fillColor;\n\n        /**\n         * @member {number} the alpha of the fill\n         */\n        this.fillAlpha = fillAlpha;\n\n        /**\n         * @member {number} cached tint of the fill\n         */\n        this._fillTint = fillColor;\n\n        /**\n         * @member {boolean} whether or not the shape is filled with a colour\n         */\n        this.fill = fill;\n\n        this.holes = [];\n\n        /**\n         * @member {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} The shape object to draw.\n         */\n        this.shape = shape;\n\n        /**\n         * @member {number} The type of the shape, see the Const.Shapes file for all the existing types,\n         */\n        this.type = shape.type;\n    }\n\n    /**\n     * Creates a new GraphicsData object with the same values as this one.\n     *\n     * @return {PIXI.GraphicsData} Cloned GraphicsData object\n     */\n    clone()\n    {\n        return new GraphicsData(\n            this.lineWidth,\n            this.lineColor,\n            this.lineAlpha,\n            this.fillColor,\n            this.fillAlpha,\n            this.fill,\n            this.shape\n        );\n    }\n\n    /**\n     * Adds a hole to the shape.\n     *\n     * @param {PIXI.Rectangle|PIXI.Circle} shape - The shape of the hole.\n     */\n    addHole(shape)\n    {\n        this.holes.push(shape);\n    }\n\n    /**\n     * Destroys the Graphics data.\n     */\n    destroy()\n    {\n        this.shape = null;\n        this.holes = null;\n    }\n}\n","/**\n * Calculate the points for a bezier curve and then draws it.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @param {number} fromX - Starting point x\n * @param {number} fromY - Starting point y\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} cpX2 - Second Control point x\n * @param {number} cpY2 - Second Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number[]} [path=[]] - Path array to push points into\n * @return {number[]} Array of points of the curve\n */\nexport default function bezierCurveTo(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY, path = [])\n{\n    const n = 20;\n    let dt = 0;\n    let dt2 = 0;\n    let dt3 = 0;\n    let t2 = 0;\n    let t3 = 0;\n\n    path.push(fromX, fromY);\n\n    for (let i = 1, j = 0; i <= n; ++i)\n    {\n        j = i / n;\n\n        dt = (1 - j);\n        dt2 = dt * dt;\n        dt3 = dt2 * dt;\n\n        t2 = j * j;\n        t3 = t2 * j;\n\n        path.push(\n            (dt3 * fromX) + (3 * dt2 * j * cpX) + (3 * dt * t2 * cpX2) + (t3 * toX),\n            (dt3 * fromY) + (3 * dt2 * j * cpY) + (3 * dt * t2 * cpY2) + (t3 * toY)\n        );\n    }\n\n    return path;\n}\n","import Container from '../display/Container';\nimport RenderTexture from '../textures/RenderTexture';\nimport Texture from '../textures/Texture';\nimport GraphicsData from './GraphicsData';\nimport Sprite from '../sprites/Sprite';\nimport { Matrix, Point, Rectangle, RoundedRectangle, Ellipse, Polygon, Circle } from '../math';\nimport { hex2rgb, rgb2hex } from '../utils';\nimport { SHAPES, BLEND_MODES } from '../const';\nimport Bounds from '../display/Bounds';\nimport bezierCurveTo from './utils/bezierCurveTo';\nimport CanvasRenderer from '../renderers/canvas/CanvasRenderer';\n\nlet canvasRenderer;\nconst tempMatrix = new Matrix();\nconst tempPoint = new Point();\nconst tempColor1 = new Float32Array(4);\nconst tempColor2 = new Float32Array(4);\n\n/**\n * The Graphics class contains methods used to draw primitive shapes such as lines, circles and\n * rectangles to the display, and to color and fill them.\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI\n */\nexport default class Graphics extends Container\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * The alpha value used when filling the Graphics object.\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.fillAlpha = 1;\n\n        /**\n         * The width (thickness) of any lines drawn.\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.lineWidth = 0;\n\n        /**\n         * The color of any lines drawn.\n         *\n         * @member {string}\n         * @default 0\n         */\n        this.lineColor = 0;\n\n        /**\n         * Graphics data\n         *\n         * @member {PIXI.GraphicsData[]}\n         * @private\n         */\n        this.graphicsData = [];\n\n        /**\n         * The tint applied to the graphic shape. This is a hex value. Apply a value of 0xFFFFFF to\n         * reset the tint.\n         *\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        this.tint = 0xFFFFFF;\n\n        /**\n         * The previous tint applied to the graphic shape. Used to compare to the current tint and\n         * check if theres change.\n         *\n         * @member {number}\n         * @private\n         * @default 0xFFFFFF\n         */\n        this._prevTint = 0xFFFFFF;\n\n        /**\n         * The blend mode to be applied to the graphic shape. Apply a value of\n         * `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL;\n         * @see PIXI.BLEND_MODES\n         */\n        this.blendMode = BLEND_MODES.NORMAL;\n\n        /**\n         * Current path\n         *\n         * @member {PIXI.GraphicsData}\n         * @private\n         */\n        this.currentPath = null;\n\n        /**\n         * Array containing some WebGL-related properties used by the WebGL renderer.\n         *\n         * @member {object<number, object>}\n         * @private\n         */\n        // TODO - _webgl should use a prototype object, not a random undocumented object...\n        this._webGL = {};\n\n        /**\n         * Whether this shape is being used as a mask.\n         *\n         * @member {boolean}\n         */\n        this.isMask = false;\n\n        /**\n         * The bounds' padding used for bounds calculation.\n         *\n         * @member {number}\n         */\n        this.boundsPadding = 0;\n\n        /**\n         * A cache of the local bounds to prevent recalculation.\n         *\n         * @member {PIXI.Rectangle}\n         * @private\n         */\n        this._localBounds = new Bounds();\n\n        /**\n         * Used to detect if the graphics object has changed. If this is set to true then the graphics\n         * object will be recalculated.\n         *\n         * @member {boolean}\n         * @private\n         */\n        this.dirty = 0;\n\n        /**\n         * Used to detect if we need to do a fast rect check using the id compare method\n         * @type {Number}\n         */\n        this.fastRectDirty = -1;\n\n        /**\n         * Used to detect if we clear the graphics webGL data\n         * @type {Number}\n         */\n        this.clearDirty = 0;\n\n        /**\n         * Used to detect if we we need to recalculate local bounds\n         * @type {Number}\n         */\n        this.boundsDirty = -1;\n\n        /**\n         * Used to detect if the cached sprite object needs to be updated.\n         *\n         * @member {boolean}\n         * @private\n         */\n        this.cachedSpriteDirty = false;\n\n        this._spriteRect = null;\n        this._fastRect = false;\n\n        /**\n         * When cacheAsBitmap is set to true the graphics object will be rendered as if it was a sprite.\n         * This is useful if your graphics element does not change often, as it will speed up the rendering\n         * of the object in exchange for taking up texture memory. It is also useful if you need the graphics\n         * object to be anti-aliased, because it will be rendered using canvas. This is not recommended if\n         * you are constantly redrawing the graphics element.\n         *\n         * @name cacheAsBitmap\n         * @member {boolean}\n         * @memberof PIXI.Graphics#\n         * @default false\n         */\n    }\n\n    /**\n     * Creates a new Graphics object with the same values as this one.\n     * Note that the only the properties of the object are cloned, not its transform (position,scale,etc)\n     *\n     * @return {PIXI.Graphics} A clone of the graphics object\n     */\n    clone()\n    {\n        const clone = new Graphics();\n\n        clone.renderable = this.renderable;\n        clone.fillAlpha = this.fillAlpha;\n        clone.lineWidth = this.lineWidth;\n        clone.lineColor = this.lineColor;\n        clone.tint = this.tint;\n        clone.blendMode = this.blendMode;\n        clone.isMask = this.isMask;\n        clone.boundsPadding = this.boundsPadding;\n        clone.dirty = 0;\n        clone.cachedSpriteDirty = this.cachedSpriteDirty;\n\n        // copy graphics data\n        for (let i = 0; i < this.graphicsData.length; ++i)\n        {\n            clone.graphicsData.push(this.graphicsData[i].clone());\n        }\n\n        clone.currentPath = clone.graphicsData[clone.graphicsData.length - 1];\n\n        clone.updateLocalBounds();\n\n        return clone;\n    }\n\n    /**\n     * Specifies the line style used for subsequent calls to Graphics methods such as the lineTo()\n     * method or the drawCircle() method.\n     *\n     * @param {number} [lineWidth=0] - width of the line to draw, will update the objects stored style\n     * @param {number} [color=0] - color of the line to draw, will update the objects stored style\n     * @param {number} [alpha=1] - alpha of the line to draw, will update the objects stored style\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    lineStyle(lineWidth = 0, color = 0, alpha = 1)\n    {\n        this.lineWidth = lineWidth;\n        this.lineColor = color;\n        this.lineAlpha = alpha;\n\n        if (this.currentPath)\n        {\n            if (this.currentPath.shape.points.length)\n            {\n                // halfway through a line? start a new one!\n                const shape = new Polygon(this.currentPath.shape.points.slice(-2));\n\n                shape.closed = false;\n\n                this.drawShape(shape);\n            }\n            else\n            {\n                // otherwise its empty so lets just set the line properties\n                this.currentPath.lineWidth = this.lineWidth;\n                this.currentPath.lineColor = this.lineColor;\n                this.currentPath.lineAlpha = this.lineAlpha;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Moves the current drawing position to x, y.\n     *\n     * @param {number} x - the X coordinate to move to\n     * @param {number} y - the Y coordinate to move to\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    moveTo(x, y)\n    {\n        const shape = new Polygon([x, y]);\n\n        shape.closed = false;\n        this.drawShape(shape);\n\n        return this;\n    }\n\n    /**\n     * Draws a line using the current line style from the current drawing position to (x, y);\n     * The current drawing position is then set to (x, y).\n     *\n     * @param {number} x - the X coordinate to draw to\n     * @param {number} y - the Y coordinate to draw to\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    lineTo(x, y)\n    {\n        this.currentPath.shape.points.push(x, y);\n        this.dirty++;\n\n        return this;\n    }\n\n    /**\n     * Calculate the points for a quadratic bezier curve and then draws it.\n     * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    quadraticCurveTo(cpX, cpY, toX, toY)\n    {\n        if (this.currentPath)\n        {\n            if (this.currentPath.shape.points.length === 0)\n            {\n                this.currentPath.shape.points = [0, 0];\n            }\n        }\n        else\n        {\n            this.moveTo(0, 0);\n        }\n\n        const n = 20;\n        const points = this.currentPath.shape.points;\n        let xa = 0;\n        let ya = 0;\n\n        if (points.length === 0)\n        {\n            this.moveTo(0, 0);\n        }\n\n        const fromX = points[points.length - 2];\n        const fromY = points[points.length - 1];\n\n        for (let i = 1; i <= n; ++i)\n        {\n            const j = i / n;\n\n            xa = fromX + ((cpX - fromX) * j);\n            ya = fromY + ((cpY - fromY) * j);\n\n            points.push(xa + (((cpX + ((toX - cpX) * j)) - xa) * j),\n                ya + (((cpY + ((toY - cpY) * j)) - ya) * j));\n        }\n\n        this.dirty++;\n\n        return this;\n    }\n\n    /**\n     * Calculate the points for a bezier curve and then draws it.\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} cpX2 - Second Control point x\n     * @param {number} cpY2 - Second Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY)\n    {\n        if (this.currentPath)\n        {\n            if (this.currentPath.shape.points.length === 0)\n            {\n                this.currentPath.shape.points = [0, 0];\n            }\n        }\n        else\n        {\n            this.moveTo(0, 0);\n        }\n\n        const points = this.currentPath.shape.points;\n\n        const fromX = points[points.length - 2];\n        const fromY = points[points.length - 1];\n\n        points.length -= 2;\n\n        bezierCurveTo(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY, points);\n\n        this.dirty++;\n\n        return this;\n    }\n\n    /**\n     * The arcTo() method creates an arc/curve between two tangents on the canvas.\n     *\n     * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\n     *\n     * @param {number} x1 - The x-coordinate of the beginning of the arc\n     * @param {number} y1 - The y-coordinate of the beginning of the arc\n     * @param {number} x2 - The x-coordinate of the end of the arc\n     * @param {number} y2 - The y-coordinate of the end of the arc\n     * @param {number} radius - The radius of the arc\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    arcTo(x1, y1, x2, y2, radius)\n    {\n        if (this.currentPath)\n        {\n            if (this.currentPath.shape.points.length === 0)\n            {\n                this.currentPath.shape.points.push(x1, y1);\n            }\n        }\n        else\n        {\n            this.moveTo(x1, y1);\n        }\n\n        const points = this.currentPath.shape.points;\n        const fromX = points[points.length - 2];\n        const fromY = points[points.length - 1];\n        const a1 = fromY - y1;\n        const b1 = fromX - x1;\n        const a2 = y2 - y1;\n        const b2 = x2 - x1;\n        const mm = Math.abs((a1 * b2) - (b1 * a2));\n\n        if (mm < 1.0e-8 || radius === 0)\n        {\n            if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1)\n            {\n                points.push(x1, y1);\n            }\n        }\n        else\n        {\n            const dd = (a1 * a1) + (b1 * b1);\n            const cc = (a2 * a2) + (b2 * b2);\n            const tt = (a1 * a2) + (b1 * b2);\n            const k1 = radius * Math.sqrt(dd) / mm;\n            const k2 = radius * Math.sqrt(cc) / mm;\n            const j1 = k1 * tt / dd;\n            const j2 = k2 * tt / cc;\n            const cx = (k1 * b2) + (k2 * b1);\n            const cy = (k1 * a2) + (k2 * a1);\n            const px = b1 * (k2 + j1);\n            const py = a1 * (k2 + j1);\n            const qx = b2 * (k1 + j2);\n            const qy = a2 * (k1 + j2);\n            const startAngle = Math.atan2(py - cy, px - cx);\n            const endAngle = Math.atan2(qy - cy, qx - cx);\n\n            this.arc(cx + x1, cy + y1, radius, startAngle, endAngle, b1 * a2 > b2 * a1);\n        }\n\n        this.dirty++;\n\n        return this;\n    }\n\n    /**\n     * The arc method creates an arc/curve (used to create circles, or parts of circles).\n     *\n     * @param {number} cx - The x-coordinate of the center of the circle\n     * @param {number} cy - The y-coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @param {number} startAngle - The starting angle, in radians (0 is at the 3 o'clock position\n     *  of the arc's circle)\n     * @param {number} endAngle - The ending angle, in radians\n     * @param {boolean} [anticlockwise=false] - Specifies whether the drawing should be\n     *  counter-clockwise or clockwise. False is default, and indicates clockwise, while true\n     *  indicates counter-clockwise.\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false)\n    {\n        if (startAngle === endAngle)\n        {\n            return this;\n        }\n\n        if (!anticlockwise && endAngle <= startAngle)\n        {\n            endAngle += Math.PI * 2;\n        }\n        else if (anticlockwise && startAngle <= endAngle)\n        {\n            startAngle += Math.PI * 2;\n        }\n\n        const sweep = endAngle - startAngle;\n        const segs = Math.ceil(Math.abs(sweep) / (Math.PI * 2)) * 40;\n\n        if (sweep === 0)\n        {\n            return this;\n        }\n\n        const startX = cx + (Math.cos(startAngle) * radius);\n        const startY = cy + (Math.sin(startAngle) * radius);\n\n        const points = this.currentPath.shape.points;\n\n        if (this.currentPath)\n        {\n            if (points[points.length - 2] !== startX || points[points.length - 1] !== startY)\n            {\n                points.push(startX, startY);\n            }\n        }\n        else\n        {\n            this.moveTo(startX, startY);\n        }\n\n        const theta = sweep / (segs * 2);\n        const theta2 = theta * 2;\n\n        const cTheta = Math.cos(theta);\n        const sTheta = Math.sin(theta);\n\n        const segMinus = segs - 1;\n\n        const remainder = (segMinus % 1) / segMinus;\n\n        for (let i = 0; i <= segMinus; ++i)\n        {\n            const real = i + (remainder * i);\n\n            const angle = ((theta) + startAngle + (theta2 * real));\n\n            const c = Math.cos(angle);\n            const s = -Math.sin(angle);\n\n            points.push(\n                (((cTheta * c) + (sTheta * s)) * radius) + cx,\n                (((cTheta * -s) + (sTheta * c)) * radius) + cy\n            );\n        }\n\n        this.dirty++;\n\n        return this;\n    }\n\n    /**\n     * Specifies a simple one-color fill that subsequent calls to other Graphics methods\n     * (such as lineTo() or drawCircle()) use when drawing.\n     *\n     * @param {number} [color=0] - the color of the fill\n     * @param {number} [alpha=1] - the alpha of the fill\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    beginFill(color = 0, alpha = 1)\n    {\n        this.filling = true;\n        this.fillColor = color;\n        this.fillAlpha = alpha;\n\n        if (this.currentPath)\n        {\n            if (this.currentPath.shape.points.length <= 2)\n            {\n                this.currentPath.fill = this.filling;\n                this.currentPath.fillColor = this.fillColor;\n                this.currentPath.fillAlpha = this.fillAlpha;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Applies a fill to the lines and shapes that were added since the last call to the beginFill() method.\n     *\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    endFill()\n    {\n        this.filling = false;\n        this.fillColor = null;\n        this.fillAlpha = 1;\n\n        return this;\n    }\n\n    /**\n     *\n     * @param {number} x - The X coord of the top-left of the rectangle\n     * @param {number} y - The Y coord of the top-left of the rectangle\n     * @param {number} width - The width of the rectangle\n     * @param {number} height - The height of the rectangle\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    drawRect(x, y, width, height)\n    {\n        this.drawShape(new Rectangle(x, y, width, height));\n\n        return this;\n    }\n\n    /**\n     *\n     * @param {number} x - The X coord of the top-left of the rectangle\n     * @param {number} y - The Y coord of the top-left of the rectangle\n     * @param {number} width - The width of the rectangle\n     * @param {number} height - The height of the rectangle\n     * @param {number} radius - Radius of the rectangle corners\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    drawRoundedRect(x, y, width, height, radius)\n    {\n        this.drawShape(new RoundedRectangle(x, y, width, height, radius));\n\n        return this;\n    }\n\n    /**\n     * Draws a circle.\n     *\n     * @param {number} x - The X coordinate of the center of the circle\n     * @param {number} y - The Y coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    drawCircle(x, y, radius)\n    {\n        this.drawShape(new Circle(x, y, radius));\n\n        return this;\n    }\n\n    /**\n     * Draws an ellipse.\n     *\n     * @param {number} x - The X coordinate of the center of the ellipse\n     * @param {number} y - The Y coordinate of the center of the ellipse\n     * @param {number} width - The half width of the ellipse\n     * @param {number} height - The half height of the ellipse\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    drawEllipse(x, y, width, height)\n    {\n        this.drawShape(new Ellipse(x, y, width, height));\n\n        return this;\n    }\n\n    /**\n     * Draws a polygon using the given path.\n     *\n     * @param {number[]|PIXI.Point[]} path - The path data used to construct the polygon.\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    drawPolygon(path)\n    {\n        // prevents an argument assignment deopt\n        // see section 3.1: https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#3-managing-arguments\n        let points = path;\n\n        let closed = true;\n\n        if (points instanceof Polygon)\n        {\n            closed = points.closed;\n            points = points.points;\n        }\n\n        if (!Array.isArray(points))\n        {\n            // prevents an argument leak deopt\n            // see section 3.2: https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#3-managing-arguments\n            points = new Array(arguments.length);\n\n            for (let i = 0; i < points.length; ++i)\n            {\n                points[i] = arguments[i]; // eslint-disable-line prefer-rest-params\n            }\n        }\n\n        const shape = new Polygon(points);\n\n        shape.closed = closed;\n\n        this.drawShape(shape);\n\n        return this;\n    }\n\n    /**\n     * Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.\n     *\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    clear()\n    {\n        if (this.lineWidth || this.filling || this.graphicsData.length > 0)\n        {\n            this.lineWidth = 0;\n            this.filling = false;\n\n            this.dirty++;\n            this.clearDirty++;\n            this.graphicsData.length = 0;\n        }\n\n        return this;\n    }\n\n    /**\n     * True if graphics consists of one rectangle, and thus, can be drawn like a Sprite and\n     * masked with gl.scissor.\n     *\n     * @returns {boolean} True if only 1 rect.\n     */\n    isFastRect()\n    {\n        return this.graphicsData.length === 1\n            && this.graphicsData[0].shape.type === SHAPES.RECT\n            && !this.graphicsData[0].lineWidth;\n    }\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n    _renderWebGL(renderer)\n    {\n        // if the sprite is not visible or the alpha is 0 then no need to render this element\n        if (this.dirty !== this.fastRectDirty)\n        {\n            this.fastRectDirty = this.dirty;\n            this._fastRect = this.isFastRect();\n        }\n\n        // TODO this check can be moved to dirty?\n        if (this._fastRect)\n        {\n            this._renderSpriteRect(renderer);\n        }\n        else\n        {\n            renderer.setObjectRenderer(renderer.plugins.graphics);\n            renderer.plugins.graphics.render(this);\n        }\n    }\n\n    /**\n     * Renders a sprite rectangle.\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n    _renderSpriteRect(renderer)\n    {\n        const rect = this.graphicsData[0].shape;\n\n        if (!this._spriteRect)\n        {\n            if (!Graphics._SPRITE_TEXTURE)\n            {\n                Graphics._SPRITE_TEXTURE = RenderTexture.create(10, 10);\n\n                const canvas = document.createElement('canvas');\n\n                canvas.width = 10;\n                canvas.height = 10;\n\n                const context = canvas.getContext('2d');\n\n                context.fillStyle = 'white';\n                context.fillRect(0, 0, 10, 10);\n\n                Graphics._SPRITE_TEXTURE = Texture.fromCanvas(canvas);\n            }\n\n            this._spriteRect = new Sprite(Graphics._SPRITE_TEXTURE);\n        }\n        if (this.tint === 0xffffff)\n        {\n            this._spriteRect.tint = this.graphicsData[0].fillColor;\n        }\n        else\n        {\n            const t1 = tempColor1;\n            const t2 = tempColor2;\n\n            hex2rgb(this.graphicsData[0].fillColor, t1);\n            hex2rgb(this.tint, t2);\n\n            t1[0] *= t2[0];\n            t1[1] *= t2[1];\n            t1[2] *= t2[2];\n\n            this._spriteRect.tint = rgb2hex(t1);\n        }\n        this._spriteRect.alpha = this.graphicsData[0].fillAlpha;\n        this._spriteRect.worldAlpha = this.worldAlpha * this._spriteRect.alpha;\n\n        Graphics._SPRITE_TEXTURE._frame.width = rect.width;\n        Graphics._SPRITE_TEXTURE._frame.height = rect.height;\n\n        this._spriteRect.transform.worldTransform = this.transform.worldTransform;\n\n        this._spriteRect.anchor.set(-rect.x / rect.width, -rect.y / rect.height);\n        this._spriteRect._onAnchorUpdate();\n\n        this._spriteRect._renderWebGL(renderer);\n    }\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n    _renderCanvas(renderer)\n    {\n        if (this.isMask === true)\n        {\n            return;\n        }\n\n        renderer.plugins.graphics.render(this);\n    }\n\n    /**\n     * Retrieves the bounds of the graphic shape as a rectangle object\n     *\n     * @private\n     */\n    _calculateBounds()\n    {\n        if (this.boundsDirty !== this.dirty)\n        {\n            this.boundsDirty = this.dirty;\n            this.updateLocalBounds();\n\n            this.dirty++;\n            this.cachedSpriteDirty = true;\n        }\n\n        const lb = this._localBounds;\n\n        this._bounds.addFrame(this.transform, lb.minX, lb.minY, lb.maxX, lb.maxY);\n    }\n\n    /**\n     * Tests if a point is inside this graphics object\n     *\n     * @param {PIXI.Point} point - the point to test\n     * @return {boolean} the result of the test\n     */\n    containsPoint(point)\n    {\n        this.worldTransform.applyInverse(point, tempPoint);\n\n        const graphicsData = this.graphicsData;\n\n        for (let i = 0; i < graphicsData.length; ++i)\n        {\n            const data = graphicsData[i];\n\n            if (!data.fill)\n            {\n                continue;\n            }\n\n            // only deal with fills..\n            if (data.shape)\n            {\n                if (data.shape.contains(tempPoint.x, tempPoint.y))\n                {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Update the bounds of the object\n     *\n     */\n    updateLocalBounds()\n    {\n        let minX = Infinity;\n        let maxX = -Infinity;\n\n        let minY = Infinity;\n        let maxY = -Infinity;\n\n        if (this.graphicsData.length)\n        {\n            let shape = 0;\n            let x = 0;\n            let y = 0;\n            let w = 0;\n            let h = 0;\n\n            for (let i = 0; i < this.graphicsData.length; i++)\n            {\n                const data = this.graphicsData[i];\n                const type = data.type;\n                const lineWidth = data.lineWidth;\n\n                shape = data.shape;\n\n                if (type === SHAPES.RECT || type === SHAPES.RREC)\n                {\n                    x = shape.x - (lineWidth / 2);\n                    y = shape.y - (lineWidth / 2);\n                    w = shape.width + lineWidth;\n                    h = shape.height + lineWidth;\n\n                    minX = x < minX ? x : minX;\n                    maxX = x + w > maxX ? x + w : maxX;\n\n                    minY = y < minY ? y : minY;\n                    maxY = y + h > maxY ? y + h : maxY;\n                }\n                else if (type === SHAPES.CIRC)\n                {\n                    x = shape.x;\n                    y = shape.y;\n                    w = shape.radius + (lineWidth / 2);\n                    h = shape.radius + (lineWidth / 2);\n\n                    minX = x - w < minX ? x - w : minX;\n                    maxX = x + w > maxX ? x + w : maxX;\n\n                    minY = y - h < minY ? y - h : minY;\n                    maxY = y + h > maxY ? y + h : maxY;\n                }\n                else if (type === SHAPES.ELIP)\n                {\n                    x = shape.x;\n                    y = shape.y;\n                    w = shape.width + (lineWidth / 2);\n                    h = shape.height + (lineWidth / 2);\n\n                    minX = x - w < minX ? x - w : minX;\n                    maxX = x + w > maxX ? x + w : maxX;\n\n                    minY = y - h < minY ? y - h : minY;\n                    maxY = y + h > maxY ? y + h : maxY;\n                }\n                else\n                {\n                    // POLY\n                    const points = shape.points;\n                    let x2 = 0;\n                    let y2 = 0;\n                    let dx = 0;\n                    let dy = 0;\n                    let rw = 0;\n                    let rh = 0;\n                    let cx = 0;\n                    let cy = 0;\n\n                    for (let j = 0; j + 2 < points.length; j += 2)\n                    {\n                        x = points[j];\n                        y = points[j + 1];\n                        x2 = points[j + 2];\n                        y2 = points[j + 3];\n                        dx = Math.abs(x2 - x);\n                        dy = Math.abs(y2 - y);\n                        h = lineWidth;\n                        w = Math.sqrt((dx * dx) + (dy * dy));\n\n                        if (w < 1e-9)\n                        {\n                            continue;\n                        }\n\n                        rw = ((h / w * dy) + dx) / 2;\n                        rh = ((h / w * dx) + dy) / 2;\n                        cx = (x2 + x) / 2;\n                        cy = (y2 + y) / 2;\n\n                        minX = cx - rw < minX ? cx - rw : minX;\n                        maxX = cx + rw > maxX ? cx + rw : maxX;\n\n                        minY = cy - rh < minY ? cy - rh : minY;\n                        maxY = cy + rh > maxY ? cy + rh : maxY;\n                    }\n                }\n            }\n        }\n        else\n        {\n            minX = 0;\n            maxX = 0;\n            minY = 0;\n            maxY = 0;\n        }\n\n        const padding = this.boundsPadding;\n\n        this._localBounds.minX = minX - padding;\n        this._localBounds.maxX = maxX + (padding * 2);\n\n        this._localBounds.minY = minY - padding;\n        this._localBounds.maxY = maxY + (padding * 2);\n    }\n\n    /**\n     * Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.\n     *\n     * @param {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} shape - The shape object to draw.\n     * @return {PIXI.GraphicsData} The generated GraphicsData object.\n     */\n    drawShape(shape)\n    {\n        if (this.currentPath)\n        {\n            // check current path!\n            if (this.currentPath.shape.points.length <= 2)\n            {\n                this.graphicsData.pop();\n            }\n        }\n\n        this.currentPath = null;\n\n        const data = new GraphicsData(\n            this.lineWidth,\n            this.lineColor,\n            this.lineAlpha,\n            this.fillColor,\n            this.fillAlpha,\n            this.filling,\n            shape\n        );\n\n        this.graphicsData.push(data);\n\n        if (data.type === SHAPES.POLY)\n        {\n            data.shape.closed = data.shape.closed || this.filling;\n            this.currentPath = data;\n        }\n\n        this.dirty++;\n\n        return data;\n    }\n\n    /**\n     * Generates a canvas texture.\n     *\n     * @param {number} scaleMode - The scale mode of the texture.\n     * @param {number} resolution - The resolution of the texture.\n     * @return {PIXI.Texture} The new texture.\n     */\n    generateCanvasTexture(scaleMode, resolution = 1)\n    {\n        const bounds = this.getLocalBounds();\n\n        const canvasBuffer = RenderTexture.create(bounds.width, bounds.height, scaleMode, resolution);\n\n        if (!canvasRenderer)\n        {\n            canvasRenderer = new CanvasRenderer();\n        }\n\n        tempMatrix.tx = -bounds.x;\n        tempMatrix.ty = -bounds.y;\n\n        canvasRenderer.render(this, canvasBuffer, false, tempMatrix);\n\n        const texture = Texture.fromCanvas(canvasBuffer.baseTexture._canvasRenderTarget.canvas, scaleMode);\n\n        texture.baseTexture.resolution = resolution;\n        texture.baseTexture.update();\n\n        return texture;\n    }\n\n    /**\n     * Closes the current path.\n     *\n     * @return {PIXI.Graphics} Returns itself.\n     */\n    closePath()\n    {\n        // ok so close path assumes next one is a hole!\n        const currentPath = this.currentPath;\n\n        if (currentPath && currentPath.shape)\n        {\n            currentPath.shape.close();\n        }\n\n        return this;\n    }\n\n    /**\n     * Adds a hole in the current path.\n     *\n     * @return {PIXI.Graphics} Returns itself.\n     */\n    addHole()\n    {\n        // this is a hole!\n        const hole = this.graphicsData.pop();\n\n        this.currentPath = this.graphicsData[this.graphicsData.length - 1];\n\n        this.currentPath.addHole(hole.shape);\n        this.currentPath = null;\n\n        return this;\n    }\n\n    /**\n     * Destroys the Graphics object.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all\n     *  options have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have\n     *  their destroy method called as well. 'options' will be passed on to those calls.\n     */\n    destroy(options)\n    {\n        super.destroy(options);\n\n        // destroy each of the GraphicsData objects\n        for (let i = 0; i < this.graphicsData.length; ++i)\n        {\n            this.graphicsData[i].destroy();\n        }\n\n        // for each webgl data entry, destroy the WebGLGraphicsData\n        for (const id in this._webgl)\n        {\n            for (let j = 0; j < this._webgl[id].data.length; ++j)\n            {\n                this._webgl[id].data[j].destroy();\n            }\n        }\n\n        if (this._spriteRect)\n        {\n            this._spriteRect.destroy();\n        }\n\n        this.graphicsData = null;\n\n        this.currentPath = null;\n        this._webgl = null;\n        this._localBounds = null;\n    }\n\n}\n\nGraphics._SPRITE_TEXTURE = null;\n","import glCore from 'pixi-gl-core';\n\n/**\n * An object containing WebGL specific properties to be used by the WebGL renderer\n *\n * @class\n * @private\n * @memberof PIXI\n */\nexport default class WebGLGraphicsData\n{\n    /**\n     * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n     * @param {PIXI.Shader} shader - The shader\n     * @param {object} attribsState - The state for the VAO\n     */\n    constructor(gl, shader, attribsState)\n    {\n        /**\n         * The current WebGL drawing context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        // TODO does this need to be split before uploading??\n        /**\n         * An array of color components (r,g,b)\n         * @member {number[]}\n         */\n        this.color = [0, 0, 0]; // color split!\n\n        /**\n         * An array of points to draw\n         * @member {PIXI.Point[]}\n         */\n        this.points = [];\n\n        /**\n         * The indices of the vertices\n         * @member {number[]}\n         */\n        this.indices = [];\n        /**\n         * The main buffer\n         * @member {WebGLBuffer}\n         */\n        this.buffer = glCore.GLBuffer.createVertexBuffer(gl);\n\n        /**\n         * The index buffer\n         * @member {WebGLBuffer}\n         */\n        this.indexBuffer = glCore.GLBuffer.createIndexBuffer(gl);\n\n        /**\n         * Whether this graphics is dirty or not\n         * @member {boolean}\n         */\n        this.dirty = true;\n\n        this.glPoints = null;\n        this.glIndices = null;\n\n        /**\n         *\n         * @member {PIXI.Shader}\n         */\n        this.shader = shader;\n\n        this.vao = new glCore.VertexArrayObject(gl, attribsState)\n        .addIndex(this.indexBuffer)\n        .addAttribute(this.buffer, shader.attributes.aVertexPosition, gl.FLOAT, false, 4 * 6, 0)\n        .addAttribute(this.buffer, shader.attributes.aColor, gl.FLOAT, false, 4 * 6, 2 * 4);\n    }\n\n    /**\n     * Resets the vertices and the indices\n     */\n    reset()\n    {\n        this.points.length = 0;\n        this.indices.length = 0;\n    }\n\n    /**\n     * Binds the buffers and uploads the data\n     */\n    upload()\n    {\n        this.glPoints = new Float32Array(this.points);\n        this.buffer.upload(this.glPoints);\n\n        this.glIndices = new Uint16Array(this.indices);\n        this.indexBuffer.upload(this.glIndices);\n\n        this.dirty = false;\n    }\n\n    /**\n     * Empties all the data\n     */\n    destroy()\n    {\n        this.color = null;\n        this.points = null;\n        this.indices = null;\n\n        this.vao.destroy();\n        this.buffer.destroy();\n        this.indexBuffer.destroy();\n\n        this.gl = null;\n\n        this.buffer = null;\n        this.indexBuffer = null;\n\n        this.glPoints = null;\n        this.glIndices = null;\n    }\n}\n","import Shader from '../../../Shader';\n\n/**\n * This shader is used to draw simple primitive shapes for {@link PIXI.Graphics}.\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.Shader\n */\nexport default class PrimitiveShader extends Shader\n{\n    /**\n     * @param {WebGLRenderingContext} gl - The webgl shader manager this shader works for.\n     */\n    constructor(gl)\n    {\n        super(gl,\n            // vertex shader\n            [\n                'attribute vec2 aVertexPosition;',\n                'attribute vec4 aColor;',\n\n                'uniform mat3 translationMatrix;',\n                'uniform mat3 projectionMatrix;',\n\n                'uniform float alpha;',\n                'uniform vec3 tint;',\n\n                'varying vec4 vColor;',\n\n                'void main(void){',\n                '   gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);',\n                '   vColor = aColor * vec4(tint * alpha, alpha);',\n                '}',\n            ].join('\\n'),\n            // fragment shader\n            [\n                'varying vec4 vColor;',\n\n                'void main(void){',\n                '   gl_FragColor = vColor;',\n                '}',\n            ].join('\\n')\n        );\n    }\n}\n","import { Point } from '../../../math';\nimport { hex2rgb } from '../../../utils';\n\n/**\n * Builds a line to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nexport default function buildLine(graphicsData, webGLData)\n{\n    // TODO OPTIMISE!\n    let points = graphicsData.points;\n\n    if (points.length === 0)\n    {\n        return;\n    }\n    // if the line width is an odd number add 0.5 to align to a whole pixel\n    // commenting this out fixes #711 and #1620\n    // if (graphicsData.lineWidth%2)\n    // {\n    //     for (i = 0; i < points.length; i++)\n    //     {\n    //         points[i] += 0.5;\n    //     }\n    // }\n\n    // get first and last point.. figure out the middle!\n    const firstPoint = new Point(points[0], points[1]);\n    let lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n\n    // if the first point is the last point - gonna have issues :)\n    if (firstPoint.x === lastPoint.x && firstPoint.y === lastPoint.y)\n    {\n        // need to clone as we are going to slightly modify the shape..\n        points = points.slice();\n\n        points.pop();\n        points.pop();\n\n        lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n\n        const midPointX = lastPoint.x + ((firstPoint.x - lastPoint.x) * 0.5);\n        const midPointY = lastPoint.y + ((firstPoint.y - lastPoint.y) * 0.5);\n\n        points.unshift(midPointX, midPointY);\n        points.push(midPointX, midPointY);\n    }\n\n    const verts = webGLData.points;\n    const indices = webGLData.indices;\n    const length = points.length / 2;\n    let indexCount = points.length;\n    let indexStart = verts.length / 6;\n\n    // DRAW the Line\n    const width = graphicsData.lineWidth / 2;\n\n    // sort color\n    const color = hex2rgb(graphicsData.lineColor);\n    const alpha = graphicsData.lineAlpha;\n    const r = color[0] * alpha;\n    const g = color[1] * alpha;\n    const b = color[2] * alpha;\n\n    let p1x = points[0];\n    let p1y = points[1];\n    let p2x = points[2];\n    let p2y = points[3];\n    let p3x = 0;\n    let p3y = 0;\n\n    let perpx = -(p1y - p2y);\n    let perpy = p1x - p2x;\n    let perp2x = 0;\n    let perp2y = 0;\n    let perp3x = 0;\n    let perp3y = 0;\n\n    let dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    // start\n    verts.push(\n        p1x - perpx,\n        p1y - perpy,\n        r, g, b, alpha\n    );\n\n    verts.push(\n        p1x + perpx,\n        p1y + perpy,\n        r, g, b, alpha\n    );\n\n    for (let i = 1; i < length - 1; ++i)\n    {\n        p1x = points[(i - 1) * 2];\n        p1y = points[((i - 1) * 2) + 1];\n\n        p2x = points[i * 2];\n        p2y = points[(i * 2) + 1];\n\n        p3x = points[(i + 1) * 2];\n        p3y = points[((i + 1) * 2) + 1];\n\n        perpx = -(p1y - p2y);\n        perpy = p1x - p2x;\n\n        dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n        perpx /= dist;\n        perpy /= dist;\n        perpx *= width;\n        perpy *= width;\n\n        perp2x = -(p2y - p3y);\n        perp2y = p2x - p3x;\n\n        dist = Math.sqrt((perp2x * perp2x) + (perp2y * perp2y));\n        perp2x /= dist;\n        perp2y /= dist;\n        perp2x *= width;\n        perp2y *= width;\n\n        const a1 = (-perpy + p1y) - (-perpy + p2y);\n        const b1 = (-perpx + p2x) - (-perpx + p1x);\n        const c1 = ((-perpx + p1x) * (-perpy + p2y)) - ((-perpx + p2x) * (-perpy + p1y));\n        const a2 = (-perp2y + p3y) - (-perp2y + p2y);\n        const b2 = (-perp2x + p2x) - (-perp2x + p3x);\n        const c2 = ((-perp2x + p3x) * (-perp2y + p2y)) - ((-perp2x + p2x) * (-perp2y + p3y));\n\n        let denom = (a1 * b2) - (a2 * b1);\n\n        if (Math.abs(denom) < 0.1)\n        {\n            denom += 10.1;\n            verts.push(\n                p2x - perpx,\n                p2y - perpy,\n                r, g, b, alpha\n            );\n\n            verts.push(\n                p2x + perpx,\n                p2y + perpy,\n                r, g, b, alpha\n            );\n\n            continue;\n        }\n\n        const px = ((b1 * c2) - (b2 * c1)) / denom;\n        const py = ((a2 * c1) - (a1 * c2)) / denom;\n        const pdist = ((px - p2x) * (px - p2x)) + ((py - p2y) * (py - p2y));\n\n        if (pdist > (196 * width * width))\n        {\n            perp3x = perpx - perp2x;\n            perp3y = perpy - perp2y;\n\n            dist = Math.sqrt((perp3x * perp3x) + (perp3y * perp3y));\n            perp3x /= dist;\n            perp3y /= dist;\n            perp3x *= width;\n            perp3y *= width;\n\n            verts.push(p2x - perp3x, p2y - perp3y);\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x + perp3x, p2y + perp3y);\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x - perp3x, p2y - perp3y);\n            verts.push(r, g, b, alpha);\n\n            indexCount++;\n        }\n        else\n        {\n            verts.push(px, py);\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x - (px - p2x), p2y - (py - p2y));\n            verts.push(r, g, b, alpha);\n        }\n    }\n\n    p1x = points[(length - 2) * 2];\n    p1y = points[((length - 2) * 2) + 1];\n\n    p2x = points[(length - 1) * 2];\n    p2y = points[((length - 1) * 2) + 1];\n\n    perpx = -(p1y - p2y);\n    perpy = p1x - p2x;\n\n    dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    verts.push(p2x - perpx, p2y - perpy);\n    verts.push(r, g, b, alpha);\n\n    verts.push(p2x + perpx, p2y + perpy);\n    verts.push(r, g, b, alpha);\n\n    indices.push(indexStart);\n\n    for (let i = 0; i < indexCount; ++i)\n    {\n        indices.push(indexStart++);\n    }\n\n    indices.push(indexStart - 1);\n}\n","'use strict';\n\nmodule.exports = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, size;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and size are later used to transform coords into integers for z-order calculation\n        size = Math.max(maxX - minX, maxY - minY);\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, size);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) return null;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, size, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && size) indexCurve(ear, minX, minY, size);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (size ? isEarHashed(ear, minX, minY, size) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, size, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, size, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, size);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, size) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, size),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, size);\n\n    // first look for points inside the triangle in increasing z-order\n    var p = ear.nextZ;\n\n    while (p && p.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.nextZ;\n    }\n\n    // then look for points in decreasing z-order\n    p = ear.prevZ;\n\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, size) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, size);\n                earcutLinked(c, triangles, dim, minX, minY, size);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, size) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, size);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize === 0) {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                } else if (qSize === 0 || !q) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else if (p.z <= q.z) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and size of the data bounding box\nfunction zOrder(x, y, minX, minY, size) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) / size;\n    y = 32767 * (y - minY) / size;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if ((equals(p1, q1) && equals(p2, q2)) ||\n        (equals(p1, q2) && equals(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","import buildLine from './buildLine';\nimport { hex2rgb } from '../../../utils';\nimport earcut from 'earcut';\n\n/**\n * Builds a polygon to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nexport default function buildPoly(graphicsData, webGLData)\n{\n    graphicsData.points = graphicsData.shape.points.slice();\n\n    let points = graphicsData.points;\n\n    if (graphicsData.fill && points.length >= 6)\n    {\n        const holeArray = [];\n        // Process holes..\n        const holes = graphicsData.holes;\n\n        for (let i = 0; i < holes.length; i++)\n        {\n            const hole = holes[i];\n\n            holeArray.push(points.length / 2);\n\n            points = points.concat(hole.points);\n        }\n\n        // get first and last point.. figure out the middle!\n        const verts = webGLData.points;\n        const indices = webGLData.indices;\n\n        const length = points.length / 2;\n\n        // sort color\n        const color = hex2rgb(graphicsData.fillColor);\n        const alpha = graphicsData.fillAlpha;\n        const r = color[0] * alpha;\n        const g = color[1] * alpha;\n        const b = color[2] * alpha;\n\n        const triangles = earcut(points, holeArray, 2);\n\n        if (!triangles)\n        {\n            return;\n        }\n\n        const vertPos = verts.length / 6;\n\n        for (let i = 0; i < triangles.length; i += 3)\n        {\n            indices.push(triangles[i] + vertPos);\n            indices.push(triangles[i] + vertPos);\n            indices.push(triangles[i + 1] + vertPos);\n            indices.push(triangles[i + 2] + vertPos);\n            indices.push(triangles[i + 2] + vertPos);\n        }\n\n        for (let i = 0; i < length; i++)\n        {\n            verts.push(points[i * 2], points[(i * 2) + 1],\n                r, g, b, alpha);\n        }\n    }\n\n    if (graphicsData.lineWidth > 0)\n    {\n        buildLine(graphicsData, webGLData);\n    }\n}\n","import buildLine from './buildLine';\nimport { hex2rgb } from '../../../utils';\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nexport default function buildRectangle(graphicsData, webGLData)\n{\n    // --- //\n    // need to convert points to a nice regular data\n    //\n    const rectData = graphicsData.shape;\n    const x = rectData.x;\n    const y = rectData.y;\n    const width = rectData.width;\n    const height = rectData.height;\n\n    if (graphicsData.fill)\n    {\n        const color = hex2rgb(graphicsData.fillColor);\n        const alpha = graphicsData.fillAlpha;\n\n        const r = color[0] * alpha;\n        const g = color[1] * alpha;\n        const b = color[2] * alpha;\n\n        const verts = webGLData.points;\n        const indices = webGLData.indices;\n\n        const vertPos = verts.length / 6;\n\n        // start\n        verts.push(x, y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x + width, y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x, y + height);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x + width, y + height);\n        verts.push(r, g, b, alpha);\n\n        // insert 2 dead triangles..\n        indices.push(vertPos, vertPos, vertPos + 1, vertPos + 2, vertPos + 3, vertPos + 3);\n    }\n\n    if (graphicsData.lineWidth)\n    {\n        const tempPoints = graphicsData.points;\n\n        graphicsData.points = [x, y,\n            x + width, y,\n            x + width, y + height,\n            x, y + height,\n            x, y];\n\n        buildLine(graphicsData, webGLData);\n\n        graphicsData.points = tempPoints;\n    }\n}\n","import earcut from 'earcut';\nimport buildLine from './buildLine';\nimport { hex2rgb } from '../../../utils';\n\n/**\n * Builds a rounded rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nexport default function buildRoundedRectangle(graphicsData, webGLData)\n{\n    const rrectData = graphicsData.shape;\n    const x = rrectData.x;\n    const y = rrectData.y;\n    const width = rrectData.width;\n    const height = rrectData.height;\n\n    const radius = rrectData.radius;\n\n    const recPoints = [];\n\n    recPoints.push(x, y + radius);\n    quadraticBezierCurve(x, y + height - radius, x, y + height, x + radius, y + height, recPoints);\n    quadraticBezierCurve(x + width - radius, y + height, x + width, y + height, x + width, y + height - radius, recPoints);\n    quadraticBezierCurve(x + width, y + radius, x + width, y, x + width - radius, y, recPoints);\n    quadraticBezierCurve(x + radius, y, x, y, x, y + radius + 0.0000000001, recPoints);\n\n    // this tiny number deals with the issue that occurs when points overlap and earcut fails to triangulate the item.\n    // TODO - fix this properly, this is not very elegant.. but it works for now.\n\n    if (graphicsData.fill)\n    {\n        const color = hex2rgb(graphicsData.fillColor);\n        const alpha = graphicsData.fillAlpha;\n\n        const r = color[0] * alpha;\n        const g = color[1] * alpha;\n        const b = color[2] * alpha;\n\n        const verts = webGLData.points;\n        const indices = webGLData.indices;\n\n        const vecPos = verts.length / 6;\n\n        const triangles = earcut(recPoints, null, 2);\n\n        for (let i = 0, j = triangles.length; i < j; i += 3)\n        {\n            indices.push(triangles[i] + vecPos);\n            indices.push(triangles[i] + vecPos);\n            indices.push(triangles[i + 1] + vecPos);\n            indices.push(triangles[i + 2] + vecPos);\n            indices.push(triangles[i + 2] + vecPos);\n        }\n\n        for (let i = 0, j = recPoints.length; i < j; i++)\n        {\n            verts.push(recPoints[i], recPoints[++i], r, g, b, alpha);\n        }\n    }\n\n    if (graphicsData.lineWidth)\n    {\n        const tempPoints = graphicsData.points;\n\n        graphicsData.points = recPoints;\n\n        buildLine(graphicsData, webGLData);\n\n        graphicsData.points = tempPoints;\n    }\n}\n\n/**\n * Calculate the points for a quadratic bezier curve. (helper function..)\n * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {number} fromX - Origin point x\n * @param {number} fromY - Origin point x\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number[]} [out=[]] - The output array to add points into. If not passed, a new array is created.\n * @return {number[]} an array of points\n */\nfunction quadraticBezierCurve(fromX, fromY, cpX, cpY, toX, toY, out = [])\n{\n    const n = 20;\n    const points = out;\n\n    let xa = 0;\n    let ya = 0;\n    let xb = 0;\n    let yb = 0;\n    let x = 0;\n    let y = 0;\n\n    function getPt(n1, n2, perc)\n    {\n        const diff = n2 - n1;\n\n        return n1 + (diff * perc);\n    }\n\n    for (let i = 0, j = 0; i <= n; ++i)\n    {\n        j = i / n;\n\n        // The Green Line\n        xa = getPt(fromX, cpX, j);\n        ya = getPt(fromY, cpY, j);\n        xb = getPt(cpX, toX, j);\n        yb = getPt(cpY, toY, j);\n\n        // The Black Dot\n        x = getPt(xa, xb, j);\n        y = getPt(ya, yb, j);\n\n        points.push(x, y);\n    }\n\n    return points;\n}\n","import buildLine from './buildLine';\nimport { SHAPES } from '../../../const';\nimport { hex2rgb } from '../../../utils';\n\n/**\n * Builds a circle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object to draw\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nexport default function buildCircle(graphicsData, webGLData)\n{\n    // need to convert points to a nice regular data\n    const circleData = graphicsData.shape;\n    const x = circleData.x;\n    const y = circleData.y;\n    let width;\n    let height;\n\n    // TODO - bit hacky??\n    if (graphicsData.type === SHAPES.CIRC)\n    {\n        width = circleData.radius;\n        height = circleData.radius;\n    }\n    else\n    {\n        width = circleData.width;\n        height = circleData.height;\n    }\n\n    const totalSegs = Math.floor(30 * Math.sqrt(circleData.radius))\n        || Math.floor(15 * Math.sqrt(circleData.width + circleData.height));\n\n    const seg = (Math.PI * 2) / totalSegs;\n\n    if (graphicsData.fill)\n    {\n        const color = hex2rgb(graphicsData.fillColor);\n        const alpha = graphicsData.fillAlpha;\n\n        const r = color[0] * alpha;\n        const g = color[1] * alpha;\n        const b = color[2] * alpha;\n\n        const verts = webGLData.points;\n        const indices = webGLData.indices;\n\n        let vecPos = verts.length / 6;\n\n        indices.push(vecPos);\n\n        for (let i = 0; i < totalSegs + 1; i++)\n        {\n            verts.push(x, y, r, g, b, alpha);\n\n            verts.push(\n                x + (Math.sin(seg * i) * width),\n                y + (Math.cos(seg * i) * height),\n                r, g, b, alpha\n            );\n\n            indices.push(vecPos++, vecPos++);\n        }\n\n        indices.push(vecPos - 1);\n    }\n\n    if (graphicsData.lineWidth)\n    {\n        const tempPoints = graphicsData.points;\n\n        graphicsData.points = [];\n\n        for (let i = 0; i < totalSegs + 1; i++)\n        {\n            graphicsData.points.push(\n                x + (Math.sin(seg * i) * width),\n                y + (Math.cos(seg * i) * height)\n            );\n        }\n\n        buildLine(graphicsData, webGLData);\n\n        graphicsData.points = tempPoints;\n    }\n}\n","import { hex2rgb } from '../../utils';\nimport { SHAPES } from '../../const';\nimport ObjectRenderer from '../../renderers/webgl/utils/ObjectRenderer';\nimport WebGLRenderer from '../../renderers/webgl/WebGLRenderer';\nimport WebGLGraphicsData from './WebGLGraphicsData';\nimport PrimitiveShader from './shaders/PrimitiveShader';\n\nimport buildPoly from './utils/buildPoly';\nimport buildRectangle from './utils/buildRectangle';\nimport buildRoundedRectangle from './utils/buildRoundedRectangle';\nimport buildCircle from './utils/buildCircle';\n\n/**\n * Renders the graphics object.\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.ObjectRenderer\n */\nexport default class GraphicsRenderer extends ObjectRenderer\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this object renderer works for.\n     */\n    constructor(renderer)\n    {\n        super(renderer);\n\n        this.graphicsDataPool = [];\n\n        this.primitiveShader = null;\n\n        this.gl = renderer.gl;\n\n        // easy access!\n        this.CONTEXT_UID = 0;\n    }\n\n    /**\n     * Called when there is a WebGL context change\n     *\n     * @private\n     *\n     */\n    onContextChange()\n    {\n        this.gl = this.renderer.gl;\n        this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n        this.primitiveShader = new PrimitiveShader(this.gl);\n    }\n\n    /**\n     * Destroys this renderer.\n     *\n     */\n    destroy()\n    {\n        ObjectRenderer.prototype.destroy.call(this);\n\n        for (let i = 0; i < this.graphicsDataPool.length; ++i)\n        {\n            this.graphicsDataPool[i].destroy();\n        }\n\n        this.graphicsDataPool = null;\n    }\n\n    /**\n     * Renders a graphics object.\n     *\n     * @param {PIXI.Graphics} graphics - The graphics object to render.\n     */\n    render(graphics)\n    {\n        const renderer = this.renderer;\n        const gl = renderer.gl;\n\n        let webGLData;\n        let webGL = graphics._webGL[this.CONTEXT_UID];\n\n        if (!webGL || graphics.dirty !== webGL.dirty)\n        {\n            this.updateGraphics(graphics);\n\n            webGL = graphics._webGL[this.CONTEXT_UID];\n        }\n\n        // This  could be speeded up for sure!\n        const shader = this.primitiveShader;\n\n        renderer.bindShader(shader);\n        renderer.state.setBlendMode(graphics.blendMode);\n\n        for (let i = 0, n = webGL.data.length; i < n; i++)\n        {\n            webGLData = webGL.data[i];\n            const shaderTemp = webGLData.shader;\n\n            renderer.bindShader(shaderTemp);\n            shaderTemp.uniforms.translationMatrix = graphics.transform.worldTransform.toArray(true);\n            shaderTemp.uniforms.tint = hex2rgb(graphics.tint);\n            shaderTemp.uniforms.alpha = graphics.worldAlpha;\n\n            renderer.bindVao(webGLData.vao);\n            webGLData.vao.draw(gl.TRIANGLE_STRIP, webGLData.indices.length);\n        }\n    }\n\n    /**\n     * Updates the graphics object\n     *\n     * @private\n     * @param {PIXI.Graphics} graphics - The graphics object to update\n     */\n    updateGraphics(graphics)\n    {\n        const gl = this.renderer.gl;\n\n         // get the contexts graphics object\n        let webGL = graphics._webGL[this.CONTEXT_UID];\n\n        // if the graphics object does not exist in the webGL context time to create it!\n        if (!webGL)\n        {\n            webGL = graphics._webGL[this.CONTEXT_UID] = { lastIndex: 0, data: [], gl, clearDirty: -1, dirty: -1 };\n        }\n\n        // flag the graphics as not dirty as we are about to update it...\n        webGL.dirty = graphics.dirty;\n\n        // if the user cleared the graphics object we will need to clear every object\n        if (graphics.clearDirty !== webGL.clearDirty)\n        {\n            webGL.clearDirty = graphics.clearDirty;\n\n            // loop through and return all the webGLDatas to the object pool so than can be reused later on\n            for (let i = 0; i < webGL.data.length; i++)\n            {\n                this.graphicsDataPool.push(webGL.data[i]);\n            }\n\n            // clear the array and reset the index..\n            webGL.data.length = 0;\n            webGL.lastIndex = 0;\n        }\n\n        let webGLData;\n\n        // loop through the graphics datas and construct each one..\n        // if the object is a complex fill then the new stencil buffer technique will be used\n        // other wise graphics objects will be pushed into a batch..\n        for (let i = webGL.lastIndex; i < graphics.graphicsData.length; i++)\n        {\n            const data = graphics.graphicsData[i];\n\n            // TODO - this can be simplified\n            webGLData = this.getWebGLData(webGL, 0);\n\n            if (data.type === SHAPES.POLY)\n            {\n                buildPoly(data, webGLData);\n            }\n            if (data.type === SHAPES.RECT)\n            {\n                buildRectangle(data, webGLData);\n            }\n            else if (data.type === SHAPES.CIRC || data.type === SHAPES.ELIP)\n            {\n                buildCircle(data, webGLData);\n            }\n            else if (data.type === SHAPES.RREC)\n            {\n                buildRoundedRectangle(data, webGLData);\n            }\n\n            webGL.lastIndex++;\n        }\n\n        this.renderer.bindVao(null);\n\n        // upload all the dirty data...\n        for (let i = 0; i < webGL.data.length; i++)\n        {\n            webGLData = webGL.data[i];\n\n            if (webGLData.dirty)\n            {\n                webGLData.upload();\n            }\n        }\n    }\n\n    /**\n     *\n     * @private\n     * @param {WebGLRenderingContext} gl - the current WebGL drawing context\n     * @param {number} type - TODO @Alvin\n     * @return {*} TODO\n     */\n    getWebGLData(gl, type)\n    {\n        let webGLData = gl.data[gl.data.length - 1];\n\n        if (!webGLData || webGLData.points.length > 320000)\n        {\n            webGLData = this.graphicsDataPool.pop()\n                || new WebGLGraphicsData(this.renderer.gl, this.primitiveShader, this.renderer.state.attribsState);\n\n            webGLData.reset(type);\n            gl.data.push(webGLData);\n        }\n\n        webGLData.dirty = true;\n\n        return webGLData;\n    }\n}\n\nWebGLRenderer.registerPlugin('graphics', GraphicsRenderer);\n","import CanvasRenderer from '../../renderers/canvas/CanvasRenderer';\nimport { SHAPES } from '../../const';\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they\n * now share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's CanvasGraphicsRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/CanvasGraphicsRenderer.java\n */\n\n/**\n * Renderer dedicated to drawing and batching graphics objects.\n *\n * @class\n * @private\n * @memberof PIXI\n */\nexport default class CanvasGraphicsRenderer\n{\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - The current PIXI renderer.\n     */\n    constructor(renderer)\n    {\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders a Graphics object to a canvas.\n     *\n     * @param {PIXI.Graphics} graphics - the actual graphics object to render\n     */\n    render(graphics)\n    {\n        const renderer = this.renderer;\n        const context = renderer.context;\n        const worldAlpha = graphics.worldAlpha;\n        const transform = graphics.transform.worldTransform;\n        const resolution = renderer.resolution;\n\n         // if the tint has changed, set the graphics object to dirty.\n        if (this._prevTint !== this.tint)\n        {\n            this.dirty = true;\n        }\n\n        context.setTransform(\n            transform.a * resolution,\n            transform.b * resolution,\n            transform.c * resolution,\n            transform.d * resolution,\n            transform.tx * resolution,\n            transform.ty * resolution\n        );\n\n        if (graphics.dirty)\n        {\n            this.updateGraphicsTint(graphics);\n            graphics.dirty = false;\n        }\n\n        renderer.setBlendMode(graphics.blendMode);\n\n        for (let i = 0; i < graphics.graphicsData.length; i++)\n        {\n            const data = graphics.graphicsData[i];\n            const shape = data.shape;\n\n            const fillColor = data._fillTint;\n            const lineColor = data._lineTint;\n\n            context.lineWidth = data.lineWidth;\n\n            if (data.type === SHAPES.POLY)\n            {\n                context.beginPath();\n\n                this.renderPolygon(shape.points, shape.closed, context);\n\n                for (let j = 0; j < data.holes.length; j++)\n                {\n                    this.renderPolygon(data.holes[j].points, true, context);\n                }\n\n                if (data.fill)\n                {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = `#${(`00000${(fillColor | 0).toString(16)}`).substr(-6)}`;\n                    context.fill();\n                }\n                if (data.lineWidth)\n                {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = `#${(`00000${(lineColor | 0).toString(16)}`).substr(-6)}`;\n                    context.stroke();\n                }\n            }\n            else if (data.type === SHAPES.RECT)\n            {\n                if (data.fillColor || data.fillColor === 0)\n                {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = `#${(`00000${(fillColor | 0).toString(16)}`).substr(-6)}`;\n                    context.fillRect(shape.x, shape.y, shape.width, shape.height);\n                }\n                if (data.lineWidth)\n                {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = `#${(`00000${(lineColor | 0).toString(16)}`).substr(-6)}`;\n                    context.strokeRect(shape.x, shape.y, shape.width, shape.height);\n                }\n            }\n            else if (data.type === SHAPES.CIRC)\n            {\n                // TODO - need to be Undefined!\n                context.beginPath();\n                context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n                context.closePath();\n\n                if (data.fill)\n                {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = `#${(`00000${(fillColor | 0).toString(16)}`).substr(-6)}`;\n                    context.fill();\n                }\n                if (data.lineWidth)\n                {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = `#${(`00000${(lineColor | 0).toString(16)}`).substr(-6)}`;\n                    context.stroke();\n                }\n            }\n            else if (data.type === SHAPES.ELIP)\n            {\n                // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n                const w = shape.width * 2;\n                const h = shape.height * 2;\n\n                const x = shape.x - (w / 2);\n                const y = shape.y - (h / 2);\n\n                context.beginPath();\n\n                const kappa = 0.5522848;\n                const ox = (w / 2) * kappa; // control point offset horizontal\n                const oy = (h / 2) * kappa; // control point offset vertical\n                const xe = x + w;           // x-end\n                const ye = y + h;           // y-end\n                const xm = x + (w / 2);       // x-middle\n                const ym = y + (h / 2);       // y-middle\n\n                context.moveTo(x, ym);\n                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n                context.closePath();\n\n                if (data.fill)\n                {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = `#${(`00000${(fillColor | 0).toString(16)}`).substr(-6)}`;\n                    context.fill();\n                }\n                if (data.lineWidth)\n                {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = `#${(`00000${(lineColor | 0).toString(16)}`).substr(-6)}`;\n                    context.stroke();\n                }\n            }\n            else if (data.type === SHAPES.RREC)\n            {\n                const rx = shape.x;\n                const ry = shape.y;\n                const width = shape.width;\n                const height = shape.height;\n                let radius = shape.radius;\n\n                const maxRadius = Math.min(width, height) / 2 | 0;\n\n                radius = radius > maxRadius ? maxRadius : radius;\n\n                context.beginPath();\n                context.moveTo(rx, ry + radius);\n                context.lineTo(rx, ry + height - radius);\n                context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n                context.lineTo(rx + width - radius, ry + height);\n                context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n                context.lineTo(rx + width, ry + radius);\n                context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n                context.lineTo(rx + radius, ry);\n                context.quadraticCurveTo(rx, ry, rx, ry + radius);\n                context.closePath();\n\n                if (data.fillColor || data.fillColor === 0)\n                {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = `#${(`00000${(fillColor | 0).toString(16)}`).substr(-6)}`;\n                    context.fill();\n                }\n\n                if (data.lineWidth)\n                {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = `#${(`00000${(lineColor | 0).toString(16)}`).substr(-6)}`;\n                    context.stroke();\n                }\n            }\n        }\n    }\n\n    /**\n     * Updates the tint of a graphics object\n     *\n     * @private\n     * @param {PIXI.Graphics} graphics - the graphics that will have its tint updated\n     */\n    updateGraphicsTint(graphics)\n    {\n        graphics._prevTint = graphics.tint;\n\n        const tintR = ((graphics.tint >> 16) & 0xFF) / 255;\n        const tintG = ((graphics.tint >> 8) & 0xFF) / 255;\n        const tintB = (graphics.tint & 0xFF) / 255;\n\n        for (let i = 0; i < graphics.graphicsData.length; ++i)\n        {\n            const data = graphics.graphicsData[i];\n\n            const fillColor = data.fillColor | 0;\n            const lineColor = data.lineColor | 0;\n\n            // super inline cos im an optimization NAZI :)\n            data._fillTint = (\n                (((fillColor >> 16) & 0xFF) / 255 * tintR * 255 << 16)\n                + (((fillColor >> 8) & 0xFF) / 255 * tintG * 255 << 8)\n                + (((fillColor & 0xFF) / 255) * tintB * 255)\n            );\n\n            data._lineTint = (\n                (((lineColor >> 16) & 0xFF) / 255 * tintR * 255 << 16)\n                + (((lineColor >> 8) & 0xFF) / 255 * tintG * 255 << 8)\n                + (((lineColor & 0xFF) / 255) * tintB * 255)\n            );\n        }\n    }\n\n    /**\n     * Renders a polygon.\n     *\n     * @param {PIXI.Point[]} points - The points to render\n     * @param {boolean} close - Should the polygon be closed\n     * @param {CanvasRenderingContext2D} context - The rendering context to use\n     */\n    renderPolygon(points, close, context)\n    {\n        context.moveTo(points[0], points[1]);\n\n        for (let j = 1; j < points.length / 2; ++j)\n        {\n            context.lineTo(points[j * 2], points[(j * 2) + 1]);\n        }\n\n        if (close)\n        {\n            context.closePath();\n        }\n    }\n\n    /**\n     * destroy graphics object\n     *\n     */\n    destroy()\n    {\n        this.renderer = null;\n    }\n}\n\nCanvasRenderer.registerPlugin('graphics', CanvasGraphicsRenderer);\n","/**\n * @namespace PIXI\n */\nexport * from './const';\nexport * from './math';\n\nimport * as utils from './utils';\nimport * as ticker from './ticker';\nimport settings from './settings';\nimport CanvasRenderer from './renderers/canvas/CanvasRenderer';\nimport WebGLRenderer from './renderers/webgl/WebGLRenderer';\n\nexport { settings, utils, ticker, CanvasRenderer, WebGLRenderer };\n\nexport { default as glCore } from 'pixi-gl-core';\n\nexport { default as DisplayObject } from './display/DisplayObject';\nexport { default as Container } from './display/Container';\nexport { default as Transform } from './display/Transform';\nexport { default as TransformStatic } from './display/TransformStatic';\nexport { default as TransformBase } from './display/TransformBase';\nexport { default as Sprite } from './sprites/Sprite';\nexport { default as CanvasSpriteRenderer } from './sprites/canvas/CanvasSpriteRenderer';\nexport { default as CanvasTinter } from './sprites/canvas/CanvasTinter';\nexport { default as SpriteRenderer } from './sprites/webgl/SpriteRenderer';\nexport { default as Text } from './text/Text';\nexport { default as TextStyle } from './text/TextStyle';\nexport { default as Graphics } from './graphics/Graphics';\nexport { default as GraphicsData } from './graphics/GraphicsData';\nexport { default as GraphicsRenderer } from './graphics/webgl/GraphicsRenderer';\nexport { default as CanvasGraphicsRenderer } from './graphics/canvas/CanvasGraphicsRenderer';\nexport { default as Texture } from './textures/Texture';\nexport { default as BaseTexture } from './textures/BaseTexture';\nexport { default as RenderTexture } from './textures/RenderTexture';\nexport { default as BaseRenderTexture } from './textures/BaseRenderTexture';\nexport { default as VideoBaseTexture } from './textures/VideoBaseTexture';\nexport { default as TextureUvs } from './textures/TextureUvs';\nexport { default as CanvasRenderTarget } from './renderers/canvas/utils/CanvasRenderTarget';\nexport { default as Shader } from './Shader';\nexport { default as WebGLManager } from './renderers/webgl/managers/WebGLManager';\nexport { default as ObjectRenderer } from './renderers/webgl/utils/ObjectRenderer';\nexport { default as RenderTarget } from './renderers/webgl/utils/RenderTarget';\nexport { default as Quad } from './renderers/webgl/utils/Quad';\nexport { default as SpriteMaskFilter } from './renderers/webgl/filters/spriteMask/SpriteMaskFilter';\nexport { default as Filter } from './renderers/webgl/filters/Filter';\n\n/**\n * This helper function will automatically detect which renderer you should be using.\n * WebGL is the preferred renderer as it is a lot faster. If webGL is not supported by\n * the browser then this function will return a canvas renderer\n *\n * @memberof PIXI\n * @function autoDetectRenderer\n * @param {number} [width=800] - the width of the renderers view\n * @param {number} [height=600] - the height of the renderers view\n * @param {object} [options] - The optional renderer parameters\n * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation, enable this if you\n *      need to call toDataUrl on the webgl context\n * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer, retina would be 2\n * @param {boolean} [noWebGL=false] - prevents selection of WebGL renderer, even if such is present\n * @return {PIXI.WebGLRenderer|PIXI.CanvasRenderer} Returns WebGL renderer if available, otherwise CanvasRenderer\n */\nexport function autoDetectRenderer(width = 800, height = 600, options, noWebGL)\n{\n    if (!noWebGL && utils.isWebGLSupported())\n    {\n        return new WebGLRenderer(width, height, options);\n    }\n\n    return new CanvasRenderer(width, height, options);\n}\n","import * as core from '../core';\n\n/**\n * Holds all information related to an Interaction event\n *\n * @class\n * @memberof PIXI.interaction\n */\nexport default class InteractionData\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        /**\n         * This point stores the global coords of where the touch/mouse event happened\n         *\n         * @member {PIXI.Point}\n         */\n        this.global = new core.Point();\n\n        /**\n         * The target Sprite that was interacted with\n         *\n         * @member {PIXI.Sprite}\n         */\n        this.target = null;\n\n        /**\n         * When passed to an event handler, this will be the original DOM Event that was captured\n         *\n         * @member {Event}\n         */\n        this.originalEvent = null;\n    }\n\n    /**\n     * This will return the local coordinates of the specified displayObject for this InteractionData\n     *\n     * @param {PIXI.DisplayObject} displayObject - The DisplayObject that you would like the local\n     *  coords off\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional (otherwise\n     *  will create a new point)\n     * @param {PIXI.Point} [globalPos] - A Point object containing your custom global coords, optional\n     *  (otherwise will use the current global coords)\n     * @return {PIXI.Point} A point containing the coordinates of the InteractionData position relative\n     *  to the DisplayObject\n     */\n    getLocalPosition(displayObject, point, globalPos)\n    {\n        return displayObject.worldTransform.applyInverse(globalPos || this.global, point);\n    }\n}\n","/**\n * Event class that mimics native DOM events.\n *\n * @class\n * @memberof PIXI.interaction\n */\nexport default class InteractionEvent\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        /**\n         * Which this event will continue propagating in the tree\n         *\n         * @member {boolean}\n         */\n        this.stopped = false;\n\n        /**\n         * The object to which event is dispatched.\n         *\n         * @member {PIXI.DisplayObject}\n         */\n        this.target = null;\n\n        /**\n         * The object whose event listener’s callback is currently being invoked.\n         *\n         * @member {PIXI.DisplayObject}\n         */\n        this.currentTarget = null;\n\n        /*\n         * Type of the event\n         *\n         * @member {string}\n         */\n        this.type = null;\n\n        /*\n         * InteractionData related to this event\n         *\n         * @member {PIXI.interaction.InteractionData}\n         */\n        this.data = null;\n    }\n\n    /**\n     * Prevents event from reaching any objects other than the current object.\n     *\n     */\n    stopPropagation()\n    {\n        this.stopped = true;\n    }\n\n    /**\n     * Prevents event from reaching any objects other than the current object.\n     *\n     * @private\n     */\n    _reset()\n    {\n        this.stopped = false;\n        this.currentTarget = null;\n        this.target = null;\n    }\n}\n","/**\n * Default property values of interactive objects\n * Used by {@link PIXI.interaction.InteractionManager} to automatically give all DisplayObjects these properties\n *\n * @mixin\n * @name interactiveTarget\n * @memberof PIXI.interaction\n * @example\n *      function MyObject() {}\n *\n *      Object.assign(\n *          MyObject.prototype,\n *          PIXI.interaction.interactiveTarget\n *      );\n */\nexport default {\n    /**\n     * Determines if the displayObject be clicked/touched\n     *\n     * @inner {boolean}\n     */\n    interactive: false,\n\n    /**\n     * Determines if the children to the displayObject can be clicked/touched\n     * Setting this to false allows pixi to bypass a recursive hitTest function\n     *\n     * @inner {boolean}\n     */\n    interactiveChildren: true,\n\n    /**\n     * Interaction shape. Children will be hit first, then this shape will be checked.\n     * Setting this will cause this shape to be checked in hit tests rather than the displayObject's bounds.\n     *\n     * @inner {PIXI.Rectangle|PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.RoundedRectangle}\n     */\n    hitArea: null,\n\n    /**\n     * If enabled, the mouse cursor will change when hovered over the displayObject if it is interactive\n     *\n     * @inner {boolean}\n     */\n    buttonMode: false,\n\n    /**\n     * If buttonMode is enabled, this defines what CSS cursor property is used when the mouse cursor\n     * is hovered over the displayObject\n     *\n     * @see https://developer.mozilla.org/en/docs/Web/CSS/cursor\n     *\n     * @inner {string}\n     */\n    defaultCursor: 'pointer',\n\n    // some internal checks..\n    /**\n     * Internal check to detect if the mouse cursor is hovered over the displayObject\n     *\n     * @inner {boolean}\n     * @private\n     */\n    _over: false,\n\n    /**\n     * Internal check to detect if the left mouse button is pressed on the displayObject\n     *\n     * @inner {boolean}\n     * @private\n     */\n    _isLeftDown: false,\n\n    /**\n     * Internal check to detect if the right mouse button is pressed on the displayObject\n     *\n     * @inner {boolean}\n     * @private\n     */\n    _isRightDown: false,\n\n    /**\n     * Internal check to detect if the pointer cursor is hovered over the displayObject\n     *\n     * @inner {boolean}\n     * @private\n     */\n    _pointerOver: false,\n\n    /**\n     * Internal check to detect if the pointer is down on the displayObject\n     *\n     * @inner {boolean}\n     * @private\n     */\n    _pointerDown: false,\n\n    /**\n     * Internal check to detect if a user has touched the displayObject\n     *\n     * @inner {boolean}\n     * @private\n     */\n    _touchDown: false,\n};\n","import * as core from '../core';\nimport InteractionData from './InteractionData';\nimport InteractionEvent from './InteractionEvent';\nimport EventEmitter from 'eventemitter3';\nimport interactiveTarget from './interactiveTarget';\nimport MobileDevice from 'ismobilejs';\n\n// Mix interactiveTarget into core.DisplayObject.prototype\nObject.assign(\n    core.DisplayObject.prototype,\n    interactiveTarget\n);\n\n/**\n * The interaction manager deals with mouse and touch events. Any DisplayObject can be interactive\n * if its interactive parameter is set to true\n * This manager also supports multitouch.\n *\n * @class\n * @extends EventEmitter\n * @memberof PIXI.interaction\n */\nexport default class InteractionManager extends EventEmitter\n{\n    /**\n     * @param {PIXI.CanvasRenderer|PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     * @param {object} [options] - The options for the manager.\n     * @param {boolean} [options.autoPreventDefault=true] - Should the manager automatically prevent default browser actions.\n     * @param {number} [options.interactionFrequency=10] - Frequency increases the interaction events will be checked.\n     */\n    constructor(renderer, options)\n    {\n        super();\n\n        options = options || {};\n\n        /**\n         * The renderer this interaction manager works for.\n         *\n         * @member {PIXI.SystemRenderer}\n         */\n        this.renderer = renderer;\n\n        /**\n         * Should default browser actions automatically be prevented.\n         * Does not apply to pointer events for backwards compatibility\n         * preventDefault on pointer events stops mouse events from firing\n         * Thus, for every pointer event, there will always be either a mouse of touch event alongside it.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        this.autoPreventDefault = options.autoPreventDefault !== undefined ? options.autoPreventDefault : true;\n\n        /**\n         * As this frequency increases the interaction events will be checked more often.\n         *\n         * @member {number}\n         * @default 10\n         */\n        this.interactionFrequency = options.interactionFrequency || 10;\n\n        /**\n         * The mouse data\n         *\n         * @member {PIXI.interaction.InteractionData}\n         */\n        this.mouse = new InteractionData();\n\n        // setting the mouse to start off far off screen will mean that mouse over does\n        //  not get called before we even move the mouse.\n        this.mouse.global.set(-999999);\n\n        /**\n         * The pointer data\n         *\n         * @member {PIXI.interaction.InteractionData}\n         */\n        this.pointer = new InteractionData();\n\n        // setting the pointer to start off far off screen will mean that pointer over does\n        //  not get called before we even move the pointer.\n        this.pointer.global.set(-999999);\n\n        /**\n         * An event data object to handle all the event tracking/dispatching\n         *\n         * @member {object}\n         */\n        this.eventData = new InteractionEvent();\n\n        /**\n         * Tiny little interactiveData pool !\n         *\n         * @member {PIXI.interaction.InteractionData[]}\n         */\n        this.interactiveDataPool = [];\n\n        /**\n         * The DOM element to bind to.\n         *\n         * @private\n         * @member {HTMLElement}\n         */\n        this.interactionDOMElement = null;\n\n        /**\n         * This property determins if mousemove and touchmove events are fired only when the cursror\n         * is over the object.\n         * Setting to true will make things work more in line with how the DOM verison works.\n         * Setting to false can make things easier for things like dragging\n         * It is currently set to false as this is how pixi used to work. This will be set to true in\n         * future versions of pixi.\n         *\n         * @private\n         * @member {boolean}\n         */\n        this.moveWhenInside = false;\n\n        /**\n         * Have events been attached to the dom element?\n         *\n         * @private\n         * @member {boolean}\n         */\n        this.eventsAdded = false;\n\n        /**\n         * Is the mouse hovering over the renderer?\n         *\n         * @private\n         * @member {boolean}\n         */\n        this.mouseOverRenderer = false;\n\n        /**\n         * Does the device support touch events\n         * https://www.w3.org/TR/touch-events/\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        this.supportsTouchEvents = 'ontouchstart' in window;\n\n        /**\n         * Does the device support pointer events\n         * https://www.w3.org/Submission/pointer-events/\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        this.supportsPointerEvents = !!window.PointerEvent;\n\n        /**\n         * Are touch events being 'normalized' and converted into pointer events if pointer events are not supported\n         * For example, on a touch screen mobile device, a touchstart would also be emitted as a pointerdown\n         *\n         * @private\n         * @readonly\n         * @member {boolean}\n         */\n        this.normalizeTouchEvents = !this.supportsPointerEvents && this.supportsTouchEvents;\n\n        /**\n         * Are mouse events being 'normalized' and converted into pointer events if pointer events are not supported\n         * For example, on a desktop pc, a mousedown would also be emitted as a pointerdown\n         *\n         * @private\n         * @readonly\n         * @member {boolean}\n         */\n        this.normalizeMouseEvents = !this.supportsPointerEvents && !MobileDevice.any;\n\n        // this will make it so that you don't have to call bind all the time\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this.onMouseUp = this.onMouseUp.bind(this);\n        this.processMouseUp = this.processMouseUp.bind(this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.processMouseDown = this.processMouseDown.bind(this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.processMouseMove = this.processMouseMove.bind(this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.processMouseOverOut = this.processMouseOverOut.bind(this);\n\n        /**\n        * @private\n        * @member {Function}\n        */\n        this.onMouseOver = this.onMouseOver.bind(this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this.onPointerUp = this.onPointerUp.bind(this);\n        this.processPointerUp = this.processPointerUp.bind(this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this.onPointerDown = this.onPointerDown.bind(this);\n        this.processPointerDown = this.processPointerDown.bind(this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this.onPointerMove = this.onPointerMove.bind(this);\n        this.processPointerMove = this.processPointerMove.bind(this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this.onPointerOut = this.onPointerOut.bind(this);\n        this.processPointerOverOut = this.processPointerOverOut.bind(this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this.onPointerOver = this.onPointerOver.bind(this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this.onTouchStart = this.onTouchStart.bind(this);\n        this.processTouchStart = this.processTouchStart.bind(this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this.onTouchEnd = this.onTouchEnd.bind(this);\n        this.processTouchEnd = this.processTouchEnd.bind(this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this.onTouchMove = this.onTouchMove.bind(this);\n        this.processTouchMove = this.processTouchMove.bind(this);\n\n        /**\n         * Every update cursor will be reset to this value, if some element wont override it in\n         * its hitTest.\n         *\n         * @member {string}\n         * @default 'inherit'\n         */\n        this.defaultCursorStyle = 'inherit';\n\n        /**\n         * The css style of the cursor that is being used.\n         *\n         * @member {string}\n         */\n        this.currentCursorStyle = 'inherit';\n\n        /**\n         * Internal cached let.\n         *\n         * @private\n         * @member {PIXI.Point}\n         */\n        this._tempPoint = new core.Point();\n\n        /**\n         * The current resolution / device pixel ratio.\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.resolution = 1;\n\n        this.setTargetElement(this.renderer.view, this.renderer.resolution);\n\n        /**\n         * Fired when a pointer device button (usually a mouse button) is pressed on the display\n         * object.\n         *\n         * @event mousedown\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device secondary button (usually a mouse right-button) is pressed\n         * on the display object.\n         *\n         * @event rightdown\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button (usually a mouse button) is released over the display\n         * object.\n         *\n         * @event mouseup\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device secondary button (usually a mouse right-button) is released\n         * over the display object.\n         *\n         * @event rightup\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button (usually a mouse button) is pressed and released on\n         * the display object.\n         *\n         * @event click\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device secondary button (usually a mouse right-button) is pressed\n         * and released on the display object.\n         *\n         * @event rightclick\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button (usually a mouse button) is released outside the\n         * display object that initially registered a\n         * [mousedown]{@link PIXI.interaction.InteractionManager#event:mousedown}.\n         *\n         * @event mouseupoutside\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device secondary button (usually a mouse right-button) is released\n         * outside the display object that initially registered a\n         * [rightdown]{@link PIXI.interaction.InteractionManager#event:rightdown}.\n         *\n         * @event rightupoutside\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device (usually a mouse) is moved while over the display object\n         *\n         * @event mousemove\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device (usually a mouse) is moved onto the display object\n         *\n         * @event mouseover\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device (usually a mouse) is moved off the display object\n         *\n         * @event mouseout\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button is pressed on the display object.\n         *\n         * @event pointerdown\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button is released over the display object.\n         *\n         * @event pointerup\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button is pressed and released on the display object.\n         *\n         * @event pointertap\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button is released outside the display object that initially\n         * registered a [pointerdown]{@link PIXI.interaction.InteractionManager#event:pointerdown}.\n         *\n         * @event pointerupoutside\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device is moved while over the display object\n         *\n         * @event pointermove\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device is moved onto the display object\n         *\n         * @event pointerover\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device is moved off the display object\n         *\n         * @event pointerout\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is placed on the display object.\n         *\n         * @event touchstart\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is removed from the display object.\n         *\n         * @event touchend\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is placed and removed from the display object.\n         *\n         * @event tap\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is removed outside of the display object that initially\n         * registered a [touchstart]{@link PIXI.interaction.InteractionManager#event:touchstart}.\n         *\n         * @event touchendoutside\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is moved along the display object.\n         *\n         * @event touchmove\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n    }\n\n    /**\n     * Sets the DOM element which will receive mouse/touch events. This is useful for when you have\n     * other DOM elements on top of the renderers Canvas element. With this you'll be bale to deletegate\n     * another DOM element to receive those events.\n     *\n     * @param {HTMLCanvasElement} element - the DOM element which will receive mouse and touch events.\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the new element (relative to the canvas).\n     * @private\n     */\n    setTargetElement(element, resolution = 1)\n    {\n        this.removeEvents();\n\n        this.interactionDOMElement = element;\n\n        this.resolution = resolution;\n\n        this.addEvents();\n    }\n\n    /**\n     * Registers all the DOM events\n     *\n     * @private\n     */\n    addEvents()\n    {\n        if (!this.interactionDOMElement)\n        {\n            return;\n        }\n\n        core.ticker.shared.add(this.update, this);\n\n        if (window.navigator.msPointerEnabled)\n        {\n            this.interactionDOMElement.style['-ms-content-zooming'] = 'none';\n            this.interactionDOMElement.style['-ms-touch-action'] = 'none';\n        }\n        else if (this.supportsPointerEvents)\n        {\n            this.interactionDOMElement.style['touch-action'] = 'none';\n        }\n\n        /**\n         * These events are added first, so that if pointer events are normalised, they are fired\n         * in the same order as non-normalised events. ie. pointer event 1st, mouse / touch 2nd\n         */\n        if (this.supportsPointerEvents)\n        {\n            window.document.addEventListener('pointermove', this.onPointerMove, true);\n            this.interactionDOMElement.addEventListener('pointerdown', this.onPointerDown, true);\n            this.interactionDOMElement.addEventListener('pointerout', this.onPointerOut, true);\n            this.interactionDOMElement.addEventListener('pointerover', this.onPointerOver, true);\n            window.addEventListener('pointerup', this.onPointerUp, true);\n        }\n        else\n        {\n            /**\n             * If pointer events aren't available on a device, this will turn either the touch or\n             * mouse events into pointer events. This allows a developer to just listen for emitted\n             * pointer events on interactive sprites\n             */\n            if (this.normalizeTouchEvents)\n            {\n                this.interactionDOMElement.addEventListener('touchstart', this.onPointerDown, true);\n                this.interactionDOMElement.addEventListener('touchend', this.onPointerUp, true);\n                this.interactionDOMElement.addEventListener('touchmove', this.onPointerMove, true);\n            }\n\n            if (this.normalizeMouseEvents)\n            {\n                window.document.addEventListener('mousemove', this.onPointerMove, true);\n                this.interactionDOMElement.addEventListener('mousedown', this.onPointerDown, true);\n                this.interactionDOMElement.addEventListener('mouseout', this.onPointerOut, true);\n                this.interactionDOMElement.addEventListener('mouseover', this.onPointerOver, true);\n                window.addEventListener('mouseup', this.onPointerUp, true);\n            }\n        }\n\n        window.document.addEventListener('mousemove', this.onMouseMove, true);\n        this.interactionDOMElement.addEventListener('mousedown', this.onMouseDown, true);\n        this.interactionDOMElement.addEventListener('mouseout', this.onMouseOut, true);\n        this.interactionDOMElement.addEventListener('mouseover', this.onMouseOver, true);\n        window.addEventListener('mouseup', this.onMouseUp, true);\n\n        if (this.supportsTouchEvents)\n        {\n            this.interactionDOMElement.addEventListener('touchstart', this.onTouchStart, true);\n            this.interactionDOMElement.addEventListener('touchend', this.onTouchEnd, true);\n            this.interactionDOMElement.addEventListener('touchmove', this.onTouchMove, true);\n        }\n\n        this.eventsAdded = true;\n    }\n\n    /**\n     * Removes all the DOM events that were previously registered\n     *\n     * @private\n     */\n    removeEvents()\n    {\n        if (!this.interactionDOMElement)\n        {\n            return;\n        }\n\n        core.ticker.shared.remove(this.update, this);\n\n        if (window.navigator.msPointerEnabled)\n        {\n            this.interactionDOMElement.style['-ms-content-zooming'] = '';\n            this.interactionDOMElement.style['-ms-touch-action'] = '';\n        }\n        else if (this.supportsPointerEvents)\n        {\n            this.interactionDOMElement.style['touch-action'] = '';\n        }\n\n        if (this.supportsPointerEvents)\n        {\n            window.document.removeEventListener('pointermove', this.onPointerMove, true);\n            this.interactionDOMElement.removeEventListener('pointerdown', this.onPointerDown, true);\n            this.interactionDOMElement.removeEventListener('pointerout', this.onPointerOut, true);\n            this.interactionDOMElement.removeEventListener('pointerover', this.onPointerOver, true);\n            window.removeEventListener('pointerup', this.onPointerUp, true);\n        }\n        else\n        {\n            /**\n             * If pointer events aren't available on a device, this will turn either the touch or\n             * mouse events into pointer events. This allows a developer to just listen for emitted\n             * pointer events on interactive sprites\n             */\n            if (this.normalizeTouchEvents)\n            {\n                this.interactionDOMElement.removeEventListener('touchstart', this.onPointerDown, true);\n                this.interactionDOMElement.removeEventListener('touchend', this.onPointerUp, true);\n                this.interactionDOMElement.removeEventListener('touchmove', this.onPointerMove, true);\n            }\n\n            if (this.normalizeMouseEvents)\n            {\n                window.document.removeEventListener('mousemove', this.onPointerMove, true);\n                this.interactionDOMElement.removeEventListener('mousedown', this.onPointerDown, true);\n                this.interactionDOMElement.removeEventListener('mouseout', this.onPointerOut, true);\n                this.interactionDOMElement.removeEventListener('mouseover', this.onPointerOver, true);\n                window.removeEventListener('mouseup', this.onPointerUp, true);\n            }\n        }\n\n        window.document.removeEventListener('mousemove', this.onMouseMove, true);\n        this.interactionDOMElement.removeEventListener('mousedown', this.onMouseDown, true);\n        this.interactionDOMElement.removeEventListener('mouseout', this.onMouseOut, true);\n        this.interactionDOMElement.removeEventListener('mouseover', this.onMouseOver, true);\n        window.removeEventListener('mouseup', this.onMouseUp, true);\n\n        if (this.supportsTouchEvents)\n        {\n            this.interactionDOMElement.removeEventListener('touchstart', this.onTouchStart, true);\n            this.interactionDOMElement.removeEventListener('touchend', this.onTouchEnd, true);\n            this.interactionDOMElement.removeEventListener('touchmove', this.onTouchMove, true);\n        }\n\n        this.interactionDOMElement = null;\n\n        this.eventsAdded = false;\n    }\n\n    /**\n     * Updates the state of interactive objects.\n     * Invoked by a throttled ticker update from {@link PIXI.ticker.shared}.\n     *\n     * @param {number} deltaTime - time delta since last tick\n     */\n    update(deltaTime)\n    {\n        this._deltaTime += deltaTime;\n\n        if (this._deltaTime < this.interactionFrequency)\n        {\n            return;\n        }\n\n        this._deltaTime = 0;\n\n        if (!this.interactionDOMElement)\n        {\n            return;\n        }\n\n        // if the user move the mouse this check has already been dfone using the mouse move!\n        if (this.didMove)\n        {\n            this.didMove = false;\n\n            return;\n        }\n\n        this.cursor = this.defaultCursorStyle;\n\n        // Resets the flag as set by a stopPropagation call. This flag is usually reset by a user interaction of any kind,\n        // but there was a scenario of a display object moving under a static mouse cursor.\n        // In this case, mouseover and mouseevents would not pass the flag test in dispatchEvent function\n        this.eventData._reset();\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseOverOut, true);\n\n        if (this.currentCursorStyle !== this.cursor)\n        {\n            this.currentCursorStyle = this.cursor;\n            this.interactionDOMElement.style.cursor = this.cursor;\n        }\n\n        // TODO\n    }\n\n    /**\n     * Dispatches an event on the display object that was interacted with\n     *\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - the display object in question\n     * @param {string} eventString - the name of the event (e.g, mousedown)\n     * @param {object} eventData - the event data object\n     * @private\n     */\n    dispatchEvent(displayObject, eventString, eventData)\n    {\n        if (!eventData.stopped)\n        {\n            eventData.currentTarget = displayObject;\n            eventData.type = eventString;\n\n            displayObject.emit(eventString, eventData);\n\n            if (displayObject[eventString])\n            {\n                displayObject[eventString](eventData);\n            }\n        }\n    }\n\n    /**\n     * Maps x and y coords from a DOM object and maps them correctly to the pixi view. The\n     * resulting value is stored in the point. This takes into account the fact that the DOM\n     * element could be scaled and positioned anywhere on the screen.\n     *\n     * @param  {PIXI.Point} point - the point that the result will be stored in\n     * @param  {number} x - the x coord of the position to map\n     * @param  {number} y - the y coord of the position to map\n     */\n    mapPositionToPoint(point, x, y)\n    {\n        let rect;\n\n        // IE 11 fix\n        if (!this.interactionDOMElement.parentElement)\n        {\n            rect = { x: 0, y: 0, width: 0, height: 0 };\n        }\n        else\n        {\n            rect = this.interactionDOMElement.getBoundingClientRect();\n        }\n\n        point.x = ((x - rect.left) * (this.interactionDOMElement.width / rect.width)) / this.resolution;\n        point.y = ((y - rect.top) * (this.interactionDOMElement.height / rect.height)) / this.resolution;\n    }\n\n    /**\n     * This function is provides a neat way of crawling through the scene graph and running a\n     * specified function on all interactive objects it finds. It will also take care of hit\n     * testing the interactive objects and passes the hit across in the function.\n     *\n     * @param {PIXI.Point} point - the point that is tested for collision\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - the displayObject\n     *  that will be hit test (recursively crawls its children)\n     * @param {Function} [func] - the function that will be called on each interactive object. The\n     *  displayObject and hit will be passed to the function\n     * @param {boolean} [hitTest] - this indicates if the objects inside should be hit test against the point\n     * @param {boolean} [interactive] - Whether the displayObject is interactive\n     * @return {boolean} returns true if the displayObject hit the point\n     */\n    processInteractive(point, displayObject, func, hitTest, interactive)\n    {\n        if (!displayObject || !displayObject.visible)\n        {\n            return false;\n        }\n\n        // Took a little while to rework this function correctly! But now it is done and nice and optimised. ^_^\n        //\n        // This function will now loop through all objects and then only hit test the objects it HAS\n        // to, not all of them. MUCH faster..\n        // An object will be hit test if the following is true:\n        //\n        // 1: It is interactive.\n        // 2: It belongs to a parent that is interactive AND one of the parents children have not already been hit.\n        //\n        // As another little optimisation once an interactive object has been hit we can carry on\n        // through the scenegraph, but we know that there will be no more hits! So we can avoid extra hit tests\n        // A final optimisation is that an object is not hit test directly if a child has already been hit.\n\n        interactive = displayObject.interactive || interactive;\n\n        let hit = false;\n        let interactiveParent = interactive;\n\n        // if the displayobject has a hitArea, then it does not need to hitTest children.\n        if (displayObject.hitArea)\n        {\n            interactiveParent = false;\n        }\n\n        // it has a mask! Then lets hit test that before continuing..\n        if (hitTest && displayObject._mask)\n        {\n            if (!displayObject._mask.containsPoint(point))\n            {\n                hitTest = false;\n            }\n        }\n\n        // it has a filterArea! Same as mask but easier, its a rectangle\n        if (hitTest && displayObject.filterArea)\n        {\n            if (!displayObject.filterArea.contains(point.x, point.y))\n            {\n                hitTest = false;\n            }\n        }\n\n        // ** FREE TIP **! If an object is not interactive or has no buttons in it\n        // (such as a game scene!) set interactiveChildren to false for that displayObject.\n        // This will allow pixi to completely ignore and bypass checking the displayObjects children.\n        if (displayObject.interactiveChildren && displayObject.children)\n        {\n            const children = displayObject.children;\n\n            for (let i = children.length - 1; i >= 0; i--)\n            {\n                const child = children[i];\n\n                // time to get recursive.. if this function will return if something is hit..\n                if (this.processInteractive(point, child, func, hitTest, interactiveParent))\n                {\n                    // its a good idea to check if a child has lost its parent.\n                    // this means it has been removed whilst looping so its best\n                    if (!child.parent)\n                    {\n                        continue;\n                    }\n\n                    hit = true;\n\n                    // we no longer need to hit test any more objects in this container as we we\n                    // now know the parent has been hit\n                    interactiveParent = false;\n\n                    // If the child is interactive , that means that the object hit was actually\n                    // interactive and not just the child of an interactive object.\n                    // This means we no longer need to hit test anything else. We still need to run\n                    // through all objects, but we don't need to perform any hit tests.\n\n                    // {\n                    hitTest = false;\n                    // }\n\n                    // we can break now as we have hit an object.\n                }\n            }\n        }\n\n        // no point running this if the item is not interactive or does not have an interactive parent.\n        if (interactive)\n        {\n            // if we are hit testing (as in we have no hit any objects yet)\n            // We also don't need to worry about hit testing if once of the displayObjects children\n            // has already been hit!\n            if (hitTest && !hit)\n            {\n                if (displayObject.hitArea)\n                {\n                    displayObject.worldTransform.applyInverse(point, this._tempPoint);\n                    hit = displayObject.hitArea.contains(this._tempPoint.x, this._tempPoint.y);\n                }\n                else if (displayObject.containsPoint)\n                {\n                    hit = displayObject.containsPoint(point);\n                }\n            }\n\n            if (displayObject.interactive)\n            {\n                if (hit && !this.eventData.target)\n                {\n                    this.eventData.target = displayObject;\n                    this.mouse.target = displayObject;\n                    this.pointer.target = displayObject;\n                }\n\n                func(displayObject, hit);\n            }\n        }\n\n        return hit;\n    }\n\n    /**\n     * Is called when the mouse button is pressed down on the renderer element\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of a mouse button being pressed down\n     */\n    onMouseDown(event)\n    {\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        // Update internal mouse reference\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        if (this.autoPreventDefault)\n        {\n            this.mouse.originalEvent.preventDefault();\n        }\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseDown, true);\n\n        const isRightButton = event.button === 2 || event.which === 3;\n\n        this.emit(isRightButton ? 'rightdown' : 'mousedown', this.eventData);\n    }\n\n    /**\n     * Processes the result of the mouse down check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n    processMouseDown(displayObject, hit)\n    {\n        const e = this.mouse.originalEvent;\n\n        const isRightButton = e.button === 2 || e.which === 3;\n\n        if (hit)\n        {\n            displayObject[isRightButton ? '_isRightDown' : '_isLeftDown'] = true;\n            this.dispatchEvent(displayObject, isRightButton ? 'rightdown' : 'mousedown', this.eventData);\n        }\n    }\n\n    /**\n     * Is called when the mouse button is released on the renderer element\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of a mouse button being released\n     */\n    onMouseUp(event)\n    {\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        // Update internal mouse reference\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseUp, true);\n\n        const isRightButton = event.button === 2 || event.which === 3;\n\n        this.emit(isRightButton ? 'rightup' : 'mouseup', this.eventData);\n    }\n\n    /**\n     * Processes the result of the mouse up check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n    processMouseUp(displayObject, hit)\n    {\n        const e = this.mouse.originalEvent;\n\n        const isRightButton = e.button === 2 || e.which === 3;\n        const isDown = isRightButton ? '_isRightDown' : '_isLeftDown';\n\n        if (hit)\n        {\n            this.dispatchEvent(displayObject, isRightButton ? 'rightup' : 'mouseup', this.eventData);\n\n            if (displayObject[isDown])\n            {\n                displayObject[isDown] = false;\n                this.dispatchEvent(displayObject, isRightButton ? 'rightclick' : 'click', this.eventData);\n            }\n        }\n        else if (displayObject[isDown])\n        {\n            displayObject[isDown] = false;\n            this.dispatchEvent(displayObject, isRightButton ? 'rightupoutside' : 'mouseupoutside', this.eventData);\n        }\n    }\n\n    /**\n     * Is called when the mouse moves across the renderer element\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of the mouse moving\n     */\n    onMouseMove(event)\n    {\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        this.didMove = true;\n\n        this.cursor = this.defaultCursorStyle;\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseMove, true);\n\n        this.emit('mousemove', this.eventData);\n\n        if (this.currentCursorStyle !== this.cursor)\n        {\n            this.currentCursorStyle = this.cursor;\n            this.interactionDOMElement.style.cursor = this.cursor;\n        }\n\n        // TODO BUG for parents interactive object (border order issue)\n    }\n\n    /**\n     * Processes the result of the mouse move check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n    processMouseMove(displayObject, hit)\n    {\n        this.processMouseOverOut(displayObject, hit);\n\n        // only display on mouse over\n        if (!this.moveWhenInside || hit)\n        {\n            this.dispatchEvent(displayObject, 'mousemove', this.eventData);\n        }\n    }\n\n    /**\n     * Is called when the mouse is moved out of the renderer element\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of the mouse being moved out\n     */\n    onMouseOut(event)\n    {\n        this.mouseOverRenderer = false;\n\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        // Update internal mouse reference\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        this.interactionDOMElement.style.cursor = this.defaultCursorStyle;\n\n        // TODO optimize by not check EVERY TIME! maybe half as often? //\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseOverOut, false);\n\n        this.emit('mouseout', this.eventData);\n    }\n\n    /**\n     * Processes the result of the mouse over/out check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n    processMouseOverOut(displayObject, hit)\n    {\n        if (hit && this.mouseOverRenderer)\n        {\n            if (!displayObject._mouseOver)\n            {\n                displayObject._mouseOver = true;\n                this.dispatchEvent(displayObject, 'mouseover', this.eventData);\n            }\n\n            if (displayObject.buttonMode)\n            {\n                this.cursor = displayObject.defaultCursor;\n            }\n        }\n        else if (displayObject._mouseOver)\n        {\n            displayObject._mouseOver = false;\n            this.dispatchEvent(displayObject, 'mouseout', this.eventData);\n        }\n    }\n\n    /**\n     * Is called when the mouse enters the renderer element area\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of the mouse moving into the renderer view\n     */\n    onMouseOver(event)\n    {\n        this.mouseOverRenderer = true;\n\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        this.emit('mouseover', this.eventData);\n    }\n\n    /**\n     * Is called when the pointer button is pressed down on the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer button being pressed down\n     */\n    onPointerDown(event)\n    {\n        this.normalizeToPointerData(event);\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        // Update internal pointer reference\n        this.mapPositionToPoint(this.pointer.global, event.clientX, event.clientY);\n\n        /**\n         * No need to prevent default on natural pointer events, as there are no side effects\n         * Normalized events, however, may have the double mousedown/touchstart issue on the native android browser,\n         * so still need to be prevented.\n         */\n        if (this.autoPreventDefault && (this.normalizeMouseEvents || this.normalizeTouchEvents))\n        {\n            this.pointer.originalEvent.preventDefault();\n        }\n\n        this.processInteractive(this.pointer.global, this.renderer._lastObjectRendered, this.processPointerDown, true);\n\n        this.emit('pointerdown', this.eventData);\n    }\n\n    /**\n     * Processes the result of the pointer down check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n    processPointerDown(displayObject, hit)\n    {\n        if (hit)\n        {\n            displayObject._pointerDown = true;\n            this.dispatchEvent(displayObject, 'pointerdown', this.eventData);\n        }\n    }\n\n    /**\n     * Is called when the pointer button is released on the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer button being released\n     */\n    onPointerUp(event)\n    {\n        this.normalizeToPointerData(event);\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        // Update internal pointer reference\n        this.mapPositionToPoint(this.pointer.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.pointer.global, this.renderer._lastObjectRendered, this.processPointerUp, true);\n\n        this.emit('pointerup', this.eventData);\n    }\n\n    /**\n     * Processes the result of the pointer up check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n    processPointerUp(displayObject, hit)\n    {\n        if (hit)\n        {\n            this.dispatchEvent(displayObject, 'pointerup', this.eventData);\n\n            if (displayObject._pointerDown)\n            {\n                displayObject._pointerDown = false;\n                this.dispatchEvent(displayObject, 'pointertap', this.eventData);\n            }\n        }\n        else if (displayObject._pointerDown)\n        {\n            displayObject._pointerDown = false;\n            this.dispatchEvent(displayObject, 'pointerupoutside', this.eventData);\n        }\n    }\n\n    /**\n     * Is called when the pointer moves across the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer moving\n     */\n    onPointerMove(event)\n    {\n        this.normalizeToPointerData(event);\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        this.mapPositionToPoint(this.pointer.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.pointer.global, this.renderer._lastObjectRendered, this.processPointerMove, true);\n\n        this.emit('pointermove', this.eventData);\n    }\n\n    /**\n     * Processes the result of the pointer move check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n    processPointerMove(displayObject, hit)\n    {\n        if (!this.pointer.originalEvent.changedTouches)\n        {\n            this.processPointerOverOut(displayObject, hit);\n        }\n\n        if (!this.moveWhenInside || hit)\n        {\n            this.dispatchEvent(displayObject, 'pointermove', this.eventData);\n        }\n    }\n\n    /**\n     * Is called when the pointer is moved out of the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer being moved out\n     */\n    onPointerOut(event)\n    {\n        this.normalizeToPointerData(event);\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        // Update internal pointer reference\n        this.mapPositionToPoint(this.pointer.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.pointer.global, this.renderer._lastObjectRendered, this.processPointerOverOut, false);\n\n        this.emit('pointerout', this.eventData);\n    }\n\n    /**\n     * Processes the result of the pointer over/out check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n    processPointerOverOut(displayObject, hit)\n    {\n        if (hit && this.mouseOverRenderer)\n        {\n            if (!displayObject._pointerOver)\n            {\n                displayObject._pointerOver = true;\n                this.dispatchEvent(displayObject, 'pointerover', this.eventData);\n            }\n        }\n        else if (displayObject._pointerOver)\n        {\n            displayObject._pointerOver = false;\n            this.dispatchEvent(displayObject, 'pointerout', this.eventData);\n        }\n    }\n\n    /**\n     * Is called when the pointer is moved into the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer button being moved into the renderer view\n     */\n    onPointerOver(event)\n    {\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        this.emit('pointerover', this.eventData);\n    }\n\n    /**\n     * Is called when a touch is started on the renderer element\n     *\n     * @private\n     * @param {TouchEvent} event - The DOM event of a touch starting on the renderer view\n     */\n    onTouchStart(event)\n    {\n        if (this.autoPreventDefault)\n        {\n            event.preventDefault();\n        }\n\n        const changedTouches = event.changedTouches;\n        const cLength = changedTouches.length;\n\n        for (let i = 0; i < cLength; i++)\n        {\n            const touch = changedTouches[i];\n            const touchData = this.getTouchData(touch);\n\n            touchData.originalEvent = event;\n\n            this.eventData.data = touchData;\n            this.eventData._reset();\n\n            this.processInteractive(touchData.global, this.renderer._lastObjectRendered, this.processTouchStart, true);\n\n            this.emit('touchstart', this.eventData);\n\n            this.returnTouchData(touchData);\n        }\n    }\n\n    /**\n     * Processes the result of a touch check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n    processTouchStart(displayObject, hit)\n    {\n        if (hit)\n        {\n            displayObject._touchDown = true;\n            this.dispatchEvent(displayObject, 'touchstart', this.eventData);\n        }\n    }\n\n    /**\n     * Is called when a touch ends on the renderer element\n     *\n     * @private\n     * @param {TouchEvent} event - The DOM event of a touch ending on the renderer view\n     */\n    onTouchEnd(event)\n    {\n        if (this.autoPreventDefault)\n        {\n            event.preventDefault();\n        }\n\n        const changedTouches = event.changedTouches;\n        const cLength = changedTouches.length;\n\n        for (let i = 0; i < cLength; i++)\n        {\n            const touchEvent = changedTouches[i];\n\n            const touchData = this.getTouchData(touchEvent);\n\n            touchData.originalEvent = event;\n\n            // TODO this should be passed along.. no set\n            this.eventData.data = touchData;\n            this.eventData._reset();\n\n            this.processInteractive(touchData.global, this.renderer._lastObjectRendered, this.processTouchEnd, true);\n\n            this.emit('touchend', this.eventData);\n\n            this.returnTouchData(touchData);\n        }\n    }\n\n    /**\n     * Processes the result of the end of a touch and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n    processTouchEnd(displayObject, hit)\n    {\n        if (hit)\n        {\n            this.dispatchEvent(displayObject, 'touchend', this.eventData);\n\n            if (displayObject._touchDown)\n            {\n                displayObject._touchDown = false;\n                this.dispatchEvent(displayObject, 'tap', this.eventData);\n            }\n        }\n        else if (displayObject._touchDown)\n        {\n            displayObject._touchDown = false;\n            this.dispatchEvent(displayObject, 'touchendoutside', this.eventData);\n        }\n    }\n\n    /**\n     * Is called when a touch is moved across the renderer element\n     *\n     * @private\n     * @param {TouchEvent} event - The DOM event of a touch moving accross the renderer view\n     */\n    onTouchMove(event)\n    {\n        if (this.autoPreventDefault)\n        {\n            event.preventDefault();\n        }\n\n        const changedTouches = event.changedTouches;\n        const cLength = changedTouches.length;\n\n        for (let i = 0; i < cLength; i++)\n        {\n            const touchEvent = changedTouches[i];\n\n            const touchData = this.getTouchData(touchEvent);\n\n            touchData.originalEvent = event;\n\n            this.eventData.data = touchData;\n            this.eventData._reset();\n\n            this.processInteractive(\n                touchData.global,\n                this.renderer._lastObjectRendered,\n                this.processTouchMove,\n                this.moveWhenInside\n            );\n\n            this.emit('touchmove', this.eventData);\n\n            this.returnTouchData(touchData);\n        }\n    }\n\n    /**\n     * Processes the result of a touch move check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n    processTouchMove(displayObject, hit)\n    {\n        if (!this.moveWhenInside || hit)\n        {\n            this.dispatchEvent(displayObject, 'touchmove', this.eventData);\n        }\n    }\n\n    /**\n     * Grabs an interaction data object from the internal pool\n     *\n     * @private\n     * @param {Touch} touch - The touch data we need to pair with an interactionData object\n     * @return {PIXI.interaction.InteractionData} The built data object.\n     */\n    getTouchData(touch)\n    {\n        const touchData = this.interactiveDataPool.pop() || new InteractionData();\n\n        touchData.identifier = touch.identifier;\n        this.mapPositionToPoint(touchData.global, touch.clientX, touch.clientY);\n\n        if (navigator.isCocoonJS)\n        {\n            touchData.global.x = touchData.global.x / this.resolution;\n            touchData.global.y = touchData.global.y / this.resolution;\n        }\n\n        touch.globalX = touchData.global.x;\n        touch.globalY = touchData.global.y;\n\n        return touchData;\n    }\n\n    /**\n     * Returns an interaction data object to the internal pool\n     *\n     * @private\n     * @param {PIXI.interaction.InteractionData} touchData - The touch data object we want to return to the pool\n     */\n    returnTouchData(touchData)\n    {\n        this.interactiveDataPool.push(touchData);\n    }\n\n    /**\n     * Ensures that the original event object contains all data that a regular pointer event would have\n     *\n     * @private\n     * @param {TouchEvent|MouseEvent} event - The original event data from a touch or mouse event\n     */\n    normalizeToPointerData(event)\n    {\n        if (this.normalizeTouchEvents && event.changedTouches)\n        {\n            if (typeof event.button === 'undefined') event.button = event.touches.length ? 1 : 0;\n            if (typeof event.buttons === 'undefined') event.buttons = event.touches.length ? 1 : 0;\n            if (typeof event.isPrimary === 'undefined') event.isPrimary = event.touches.length === 1;\n            if (typeof event.width === 'undefined') event.width = event.changedTouches[0].radiusX || 1;\n            if (typeof event.height === 'undefined') event.height = event.changedTouches[0].radiusY || 1;\n            if (typeof event.tiltX === 'undefined') event.tiltX = 0;\n            if (typeof event.tiltY === 'undefined') event.tiltY = 0;\n            if (typeof event.pointerType === 'undefined') event.pointerType = 'touch';\n            if (typeof event.pointerId === 'undefined') event.pointerId = event.changedTouches[0].identifier || 0;\n            if (typeof event.pressure === 'undefined') event.pressure = event.changedTouches[0].force || 0.5;\n            if (typeof event.rotation === 'undefined') event.rotation = event.changedTouches[0].rotationAngle || 0;\n\n            if (typeof event.clientX === 'undefined') event.clientX = event.changedTouches[0].clientX;\n            if (typeof event.clientY === 'undefined') event.clientY = event.changedTouches[0].clientY;\n            if (typeof event.pageX === 'undefined') event.pageX = event.changedTouches[0].pageX;\n            if (typeof event.pageY === 'undefined') event.pageY = event.changedTouches[0].pageY;\n            if (typeof event.screenX === 'undefined') event.screenX = event.changedTouches[0].screenX;\n            if (typeof event.screenY === 'undefined') event.screenY = event.changedTouches[0].screenY;\n            if (typeof event.layerX === 'undefined') event.layerX = event.offsetX = event.clientX;\n            if (typeof event.layerY === 'undefined') event.layerY = event.offsetY = event.clientY;\n        }\n        else if (this.normalizeMouseEvents)\n        {\n            if (typeof event.isPrimary === 'undefined') event.isPrimary = true;\n            if (typeof event.width === 'undefined') event.width = 1;\n            if (typeof event.height === 'undefined') event.height = 1;\n            if (typeof event.tiltX === 'undefined') event.tiltX = 0;\n            if (typeof event.tiltY === 'undefined') event.tiltY = 0;\n            if (typeof event.pointerType === 'undefined') event.pointerType = 'mouse';\n            if (typeof event.pointerId === 'undefined') event.pointerId = 1;\n            if (typeof event.pressure === 'undefined') event.pressure = 0.5;\n            if (typeof event.rotation === 'undefined') event.rotation = 0;\n        }\n    }\n\n    /**\n     * Destroys the interaction manager\n     *\n     */\n    destroy()\n    {\n        this.removeEvents();\n\n        this.removeAllListeners();\n\n        this.renderer = null;\n\n        this.mouse = null;\n\n        this.eventData = null;\n\n        this.interactiveDataPool = null;\n\n        this.interactionDOMElement = null;\n\n        this.onMouseDown = null;\n        this.processMouseDown = null;\n\n        this.onMouseUp = null;\n        this.processMouseUp = null;\n\n        this.onMouseMove = null;\n        this.processMouseMove = null;\n\n        this.onMouseOut = null;\n        this.processMouseOverOut = null;\n\n        this.onMouseOver = null;\n\n        this.onPointerDown = null;\n        this.processPointerDown = null;\n\n        this.onPointerUp = null;\n        this.processPointerUp = null;\n\n        this.onPointerMove = null;\n        this.processPointerMove = null;\n\n        this.onPointerOut = null;\n        this.processPointerOverOut = null;\n\n        this.onPointerOver = null;\n\n        this.onTouchStart = null;\n        this.processTouchStart = null;\n\n        this.onTouchEnd = null;\n        this.processTouchEnd = null;\n\n        this.onTouchMove = null;\n        this.processTouchMove = null;\n\n        this._tempPoint = null;\n    }\n}\n\ncore.WebGLRenderer.registerPlugin('interaction', InteractionManager);\ncore.CanvasRenderer.registerPlugin('interaction', InteractionManager);\n","/**\n * @namespace PIXI.interaction\n */\nexport { default as InteractionData } from './InteractionData';\nexport { default as InteractionManager } from './InteractionManager';\nexport { default as interactiveTarget } from './interactiveTarget';\n","import * as core from '../core';\n\n/**\n * The ParticleContainer class is a really fast version of the Container built solely for speed,\n * so use when you need a lot of sprites or particles. The tradeoff of the ParticleContainer is that advanced\n * functionality will not work. ParticleContainer implements only the basic object transform (position, scale, rotation).\n * Any other functionality like tinting, masking, etc will not work on sprites in this batch.\n *\n * It's extremely easy to use :\n *\n * ```js\n * let container = new ParticleContainer();\n *\n * for (let i = 0; i < 100; ++i)\n * {\n *     let sprite = new PIXI.Sprite.fromImage(\"myImage.png\");\n *     container.addChild(sprite);\n * }\n * ```\n *\n * And here you have a hundred sprites that will be renderer at the speed of light.\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI.particles\n */\nexport default class ParticleContainer extends core.Container\n{\n    /**\n     * @param {number} [maxSize=15000] - The maximum number of particles that can be renderer by the container.\n     * @param {object} [properties] - The properties of children that should be uploaded to the gpu and applied.\n     * @param {boolean} [properties.scale=false] - When true, scale be uploaded and applied.\n     * @param {boolean} [properties.position=true] - When true, position be uploaded and applied.\n     * @param {boolean} [properties.rotation=false] - When true, rotation be uploaded and applied.\n     * @param {boolean} [properties.uvs=false] - When true, uvs be uploaded and applied.\n     * @param {boolean} [properties.alpha=false] - When true, alpha be uploaded and applied.\n     * @param {number} [batchSize=15000] - Number of particles per batch.\n     */\n    constructor(maxSize = 1500, properties, batchSize = 16384)\n    {\n        super();\n\n        // Making sure the batch size is valid\n        // 65535 is max vertex index in the index buffer (see ParticleRenderer)\n        // so max number of particles is 65536 / 4 = 16384\n        const maxBatchSize = 16384;\n\n        if (batchSize > maxBatchSize)\n        {\n            batchSize = maxBatchSize;\n        }\n\n        if (batchSize > maxSize)\n        {\n            batchSize = maxSize;\n        }\n\n        /**\n         * Set properties to be dynamic (true) / static (false)\n         *\n         * @member {boolean[]}\n         * @private\n         */\n        this._properties = [false, true, false, false, false];\n\n        /**\n         * @member {number}\n         * @private\n         */\n        this._maxSize = maxSize;\n\n        /**\n         * @member {number}\n         * @private\n         */\n        this._batchSize = batchSize;\n\n        /**\n         * @member {object<number, WebGLBuffer>}\n         * @private\n         */\n        this._glBuffers = {};\n\n        /**\n         * @member {number}\n         * @private\n         */\n        this._bufferToUpdate = 0;\n\n        /**\n         * @member {boolean}\n         *\n         */\n        this.interactiveChildren = false;\n\n        /**\n         * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL`\n         * to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL\n         * @see PIXI.BLEND_MODES\n         */\n        this.blendMode = core.BLEND_MODES.NORMAL;\n\n        /**\n         * Used for canvas renderering. If true then the elements will be positioned at the\n         * nearest pixel. This provides a nice speed boost.\n         *\n         * @member {boolean}\n         * @default true;\n         */\n        this.roundPixels = true;\n\n        /**\n         * The texture used to render the children.\n         *\n         * @readonly\n         * @member {BaseTexture}\n         */\n        this.baseTexture = null;\n\n        this.setProperties(properties);\n    }\n\n    /**\n     * Sets the private properties array to dynamic / static based on the passed properties object\n     *\n     * @param {object} properties - The properties to be uploaded\n     */\n    setProperties(properties)\n    {\n        if (properties)\n        {\n            this._properties[0] = 'scale' in properties ? !!properties.scale : this._properties[0];\n            this._properties[1] = 'position' in properties ? !!properties.position : this._properties[1];\n            this._properties[2] = 'rotation' in properties ? !!properties.rotation : this._properties[2];\n            this._properties[3] = 'uvs' in properties ? !!properties.uvs : this._properties[3];\n            this._properties[4] = 'alpha' in properties ? !!properties.alpha : this._properties[4];\n        }\n    }\n\n    /**\n     * Updates the object transform for rendering\n     *\n     * @private\n     */\n    updateTransform()\n    {\n        // TODO don't need to!\n        this.displayObjectUpdateTransform();\n        //  PIXI.Container.prototype.updateTransform.call( this );\n    }\n\n    /**\n     * Renders the container using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The webgl renderer\n     */\n    renderWebGL(renderer)\n    {\n        if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable)\n        {\n            return;\n        }\n\n        if (!this.baseTexture)\n        {\n            this.baseTexture = this.children[0]._texture.baseTexture;\n            if (!this.baseTexture.hasLoaded)\n            {\n                this.baseTexture.once('update', () => this.onChildrenChange(0));\n            }\n        }\n\n        renderer.setObjectRenderer(renderer.plugins.particle);\n        renderer.plugins.particle.render(this);\n    }\n\n    /**\n     * Set the flag that static data should be updated to true\n     *\n     * @private\n     * @param {number} smallestChildIndex - The smallest child index\n     */\n    onChildrenChange(smallestChildIndex)\n    {\n        const bufferIndex = Math.floor(smallestChildIndex / this._batchSize);\n\n        if (bufferIndex < this._bufferToUpdate)\n        {\n            this._bufferToUpdate = bufferIndex;\n        }\n    }\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The canvas renderer\n     */\n    renderCanvas(renderer)\n    {\n        if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable)\n        {\n            return;\n        }\n\n        const context = renderer.context;\n        const transform = this.worldTransform;\n        let isRotated = true;\n\n        let positionX = 0;\n        let positionY = 0;\n\n        let finalWidth = 0;\n        let finalHeight = 0;\n\n        const compositeOperation = renderer.blendModes[this.blendMode];\n\n        if (compositeOperation !== context.globalCompositeOperation)\n        {\n            context.globalCompositeOperation = compositeOperation;\n        }\n\n        context.globalAlpha = this.worldAlpha;\n\n        this.displayObjectUpdateTransform();\n\n        for (let i = 0; i < this.children.length; ++i)\n        {\n            const child = this.children[i];\n\n            if (!child.visible)\n            {\n                continue;\n            }\n\n            const frame = child.texture.frame;\n\n            context.globalAlpha = this.worldAlpha * child.alpha;\n\n            if (child.rotation % (Math.PI * 2) === 0)\n            {\n                // this is the fastest  way to optimise! - if rotation is 0 then we can avoid any kind of setTransform call\n                if (isRotated)\n                {\n                    context.setTransform(\n                        transform.a,\n                        transform.b,\n                        transform.c,\n                        transform.d,\n                        transform.tx * renderer.resolution,\n                        transform.ty * renderer.resolution\n                    );\n\n                    isRotated = false;\n                }\n\n                positionX = ((child.anchor.x) * (-frame.width * child.scale.x)) + child.position.x + 0.5;\n                positionY = ((child.anchor.y) * (-frame.height * child.scale.y)) + child.position.y + 0.5;\n\n                finalWidth = frame.width * child.scale.x;\n                finalHeight = frame.height * child.scale.y;\n            }\n            else\n            {\n                if (!isRotated)\n                {\n                    isRotated = true;\n                }\n\n                child.displayObjectUpdateTransform();\n\n                const childTransform = child.worldTransform;\n\n                if (renderer.roundPixels)\n                {\n                    context.setTransform(\n                        childTransform.a,\n                        childTransform.b,\n                        childTransform.c,\n                        childTransform.d,\n                        (childTransform.tx * renderer.resolution) | 0,\n                        (childTransform.ty * renderer.resolution) | 0\n                    );\n                }\n                else\n                {\n                    context.setTransform(\n                        childTransform.a,\n                        childTransform.b,\n                        childTransform.c,\n                        childTransform.d,\n                        childTransform.tx * renderer.resolution,\n                        childTransform.ty * renderer.resolution\n                    );\n                }\n\n                positionX = ((child.anchor.x) * (-frame.width)) + 0.5;\n                positionY = ((child.anchor.y) * (-frame.height)) + 0.5;\n\n                finalWidth = frame.width;\n                finalHeight = frame.height;\n            }\n\n            const resolution = child.texture.baseTexture.resolution;\n\n            context.drawImage(\n                child.texture.baseTexture.source,\n                frame.x * resolution,\n                frame.y * resolution,\n                frame.width * resolution,\n                frame.height * resolution,\n                positionX * resolution,\n                positionY * resolution,\n                finalWidth * resolution,\n                finalHeight * resolution\n            );\n        }\n    }\n\n    /**\n     * Destroys the container\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their\n     *  destroy method called as well. 'options' will be passed on to those calls.\n     */\n    destroy(options)\n    {\n        super.destroy(options);\n\n        if (this._buffers)\n        {\n            for (let i = 0; i < this._buffers.length; ++i)\n            {\n                this._buffers[i].destroy();\n            }\n        }\n\n        this._properties = null;\n        this._buffers = null;\n    }\n}\n","import Shader from '../../core/Shader';\n\n/**\n * @class\n * @extends PIXI.Shader\n * @memberof PIXI\n */\nexport default class ParticleShader extends Shader\n{\n    /**\n     * @param {PIXI.Shader} gl - The webgl shader manager this shader works for.\n     */\n    constructor(gl)\n    {\n        super(\n            gl,\n            // vertex shader\n            [\n                'attribute vec2 aVertexPosition;',\n                'attribute vec2 aTextureCoord;',\n                'attribute float aColor;',\n\n                'attribute vec2 aPositionCoord;',\n                'attribute vec2 aScale;',\n                'attribute float aRotation;',\n\n                'uniform mat3 projectionMatrix;',\n\n                'varying vec2 vTextureCoord;',\n                'varying float vColor;',\n\n                'void main(void){',\n                '   vec2 v = aVertexPosition;',\n\n                '   v.x = (aVertexPosition.x) * cos(aRotation) - (aVertexPosition.y) * sin(aRotation);',\n                '   v.y = (aVertexPosition.x) * sin(aRotation) + (aVertexPosition.y) * cos(aRotation);',\n                '   v = v + aPositionCoord;',\n\n                '   gl_Position = vec4((projectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);',\n\n                '   vTextureCoord = aTextureCoord;',\n                '   vColor = aColor;',\n                '}',\n            ].join('\\n'),\n            // hello\n            [\n                'varying vec2 vTextureCoord;',\n                'varying float vColor;',\n\n                'uniform sampler2D uSampler;',\n                'uniform float uAlpha;',\n\n                'void main(void){',\n                '  vec4 color = texture2D(uSampler, vTextureCoord) * vColor * uAlpha;',\n                '  if (color.a == 0.0) discard;',\n                '  gl_FragColor = color;',\n                '}',\n            ].join('\\n')\n        );\n    }\n}\n","import glCore from 'pixi-gl-core';\nimport createIndicesForQuads from '../../core/utils/createIndicesForQuads';\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that\n * they now share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's ParticleBuffer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleBuffer.java\n */\n\n/**\n * The particle buffer manages the static and dynamic buffers for a particle container.\n *\n * @class\n * @private\n * @memberof PIXI\n */\nexport default class ParticleBuffer\n{\n    /**\n     * @param {WebGLRenderingContext} gl - The rendering context.\n     * @param {object} properties - The properties to upload.\n     * @param {boolean[]} dynamicPropertyFlags - Flags for which properties are dynamic.\n     * @param {number} size - The size of the batch.\n     */\n    constructor(gl, properties, dynamicPropertyFlags, size)\n    {\n        /**\n         * The current WebGL drawing context.\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        /**\n         * Size of a single vertex.\n         *\n         * @member {number}\n         */\n        this.vertSize = 2;\n\n        /**\n         * Size of a single vertex in bytes.\n         *\n         * @member {number}\n         */\n        this.vertByteSize = this.vertSize * 4;\n\n        /**\n         * The number of particles the buffer can hold\n         *\n         * @member {number}\n         */\n        this.size = size;\n\n        /**\n         * A list of the properties that are dynamic.\n         *\n         * @member {object[]}\n         */\n        this.dynamicProperties = [];\n\n        /**\n         * A list of the properties that are static.\n         *\n         * @member {object[]}\n         */\n        this.staticProperties = [];\n\n        for (let i = 0; i < properties.length; ++i)\n        {\n            let property = properties[i];\n\n            // Make copy of properties object so that when we edit the offset it doesn't\n            // change all other instances of the object literal\n            property = {\n                attribute: property.attribute,\n                size: property.size,\n                uploadFunction: property.uploadFunction,\n                offset: property.offset,\n            };\n\n            if (dynamicPropertyFlags[i])\n            {\n                this.dynamicProperties.push(property);\n            }\n            else\n            {\n                this.staticProperties.push(property);\n            }\n        }\n\n        this.staticStride = 0;\n        this.staticBuffer = null;\n        this.staticData = null;\n\n        this.dynamicStride = 0;\n        this.dynamicBuffer = null;\n        this.dynamicData = null;\n\n        this.initBuffers();\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */\n    initBuffers()\n    {\n        const gl = this.gl;\n        let dynamicOffset = 0;\n\n        /**\n         * Holds the indices of the geometry (quads) to draw\n         *\n         * @member {Uint16Array}\n         */\n        this.indices = createIndicesForQuads(this.size);\n        this.indexBuffer = glCore.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n        this.dynamicStride = 0;\n\n        for (let i = 0; i < this.dynamicProperties.length; ++i)\n        {\n            const property = this.dynamicProperties[i];\n\n            property.offset = dynamicOffset;\n            dynamicOffset += property.size;\n            this.dynamicStride += property.size;\n        }\n\n        this.dynamicData = new Float32Array(this.size * this.dynamicStride * 4);\n        this.dynamicBuffer = glCore.GLBuffer.createVertexBuffer(gl, this.dynamicData, gl.STREAM_DRAW);\n\n        // static //\n        let staticOffset = 0;\n\n        this.staticStride = 0;\n\n        for (let i = 0; i < this.staticProperties.length; ++i)\n        {\n            const property = this.staticProperties[i];\n\n            property.offset = staticOffset;\n            staticOffset += property.size;\n            this.staticStride += property.size;\n        }\n\n        this.staticData = new Float32Array(this.size * this.staticStride * 4);\n        this.staticBuffer = glCore.GLBuffer.createVertexBuffer(gl, this.staticData, gl.STATIC_DRAW);\n\n        this.vao = new glCore.VertexArrayObject(gl)\n        .addIndex(this.indexBuffer);\n\n        for (let i = 0; i < this.dynamicProperties.length; ++i)\n        {\n            const property = this.dynamicProperties[i];\n\n            this.vao.addAttribute(\n                this.dynamicBuffer,\n                property.attribute,\n                gl.FLOAT,\n                false,\n                this.dynamicStride * 4,\n                property.offset * 4\n            );\n        }\n\n        for (let i = 0; i < this.staticProperties.length; ++i)\n        {\n            const property = this.staticProperties[i];\n\n            this.vao.addAttribute(\n                this.staticBuffer,\n                property.attribute,\n                gl.FLOAT,\n                false,\n                this.staticStride * 4,\n                property.offset * 4\n            );\n        }\n    }\n\n    /**\n     * Uploads the dynamic properties.\n     *\n     * @param {PIXI.DisplayObject[]} children - The children to upload.\n     * @param {number} startIndex - The index to start at.\n     * @param {number} amount - The number to upload.\n     */\n    uploadDynamic(children, startIndex, amount)\n    {\n        for (let i = 0; i < this.dynamicProperties.length; i++)\n        {\n            const property = this.dynamicProperties[i];\n\n            property.uploadFunction(children, startIndex, amount, this.dynamicData, this.dynamicStride, property.offset);\n        }\n\n        this.dynamicBuffer.upload();\n    }\n\n    /**\n     * Uploads the static properties.\n     *\n     * @param {PIXI.DisplayObject[]} children - The children to upload.\n     * @param {number} startIndex - The index to start at.\n     * @param {number} amount - The number to upload.\n     */\n    uploadStatic(children, startIndex, amount)\n    {\n        for (let i = 0; i < this.staticProperties.length; i++)\n        {\n            const property = this.staticProperties[i];\n\n            property.uploadFunction(children, startIndex, amount, this.staticData, this.staticStride, property.offset);\n        }\n\n        this.staticBuffer.upload();\n    }\n\n    /**\n     * Destroys the ParticleBuffer.\n     *\n     */\n    destroy()\n    {\n        this.dynamicProperties = null;\n        this.dynamicData = null;\n        this.dynamicBuffer.destroy();\n\n        this.staticProperties = null;\n        this.staticData = null;\n        this.staticBuffer.destroy();\n    }\n\n}\n","import * as core from '../../core';\nimport ParticleShader from './ParticleShader';\nimport ParticleBuffer from './ParticleBuffer';\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they now\n * share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's ParticleRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleRenderer.java\n */\n\n/**\n *\n * @class\n * @private\n * @memberof PIXI\n */\nexport default class ParticleRenderer extends core.ObjectRenderer\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this sprite batch works for.\n     */\n    constructor(renderer)\n    {\n        super(renderer);\n\n        // 65535 is max vertex index in the index buffer (see ParticleRenderer)\n        // so max number of particles is 65536 / 4 = 16384\n        // and max number of element in the index buffer is 16384 * 6 = 98304\n        // Creating a full index buffer, overhead is 98304 * 2 = 196Ko\n        // let numIndices = 98304;\n\n        /**\n         * The default shader that is used if a sprite doesn't have a more specific one.\n         *\n         * @member {PIXI.Shader}\n         */\n        this.shader = null;\n\n        this.indexBuffer = null;\n\n        this.properties = null;\n\n        this.tempMatrix = new core.Matrix();\n\n        this.CONTEXT_UID = 0;\n    }\n\n    /**\n     * When there is a WebGL context change\n     *\n     * @private\n     */\n    onContextChange()\n    {\n        const gl = this.renderer.gl;\n\n        this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n\n        // setup default shader\n        this.shader = new ParticleShader(gl);\n\n        this.properties = [\n            // verticesData\n            {\n                attribute: this.shader.attributes.aVertexPosition,\n                size: 2,\n                uploadFunction: this.uploadVertices,\n                offset: 0,\n            },\n            // positionData\n            {\n                attribute: this.shader.attributes.aPositionCoord,\n                size: 2,\n                uploadFunction: this.uploadPosition,\n                offset: 0,\n            },\n            // rotationData\n            {\n                attribute: this.shader.attributes.aRotation,\n                size: 1,\n                uploadFunction: this.uploadRotation,\n                offset: 0,\n            },\n            // uvsData\n            {\n                attribute: this.shader.attributes.aTextureCoord,\n                size: 2,\n                uploadFunction: this.uploadUvs,\n                offset: 0,\n            },\n            // alphaData\n            {\n                attribute: this.shader.attributes.aColor,\n                size: 1,\n                uploadFunction: this.uploadAlpha,\n                offset: 0,\n            },\n        ];\n    }\n\n    /**\n     * Starts a new particle batch.\n     *\n     */\n    start()\n    {\n        this.renderer.bindShader(this.shader);\n    }\n\n    /**\n     * Renders the particle container object.\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     */\n    render(container)\n    {\n        const children = container.children;\n        const maxSize = container._maxSize;\n        const batchSize = container._batchSize;\n        const renderer = this.renderer;\n        let totalChildren = children.length;\n\n        if (totalChildren === 0)\n        {\n            return;\n        }\n        else if (totalChildren > maxSize)\n        {\n            totalChildren = maxSize;\n        }\n\n        let buffers = container._glBuffers[renderer.CONTEXT_UID];\n\n        if (!buffers)\n        {\n            buffers = container._glBuffers[renderer.CONTEXT_UID] = this.generateBuffers(container);\n        }\n\n        // if the uvs have not updated then no point rendering just yet!\n        this.renderer.setBlendMode(container.blendMode);\n\n        const gl = renderer.gl;\n\n        const m = container.worldTransform.copy(this.tempMatrix);\n\n        m.prepend(renderer._activeRenderTarget.projectionMatrix);\n\n        this.shader.uniforms.projectionMatrix = m.toArray(true);\n        this.shader.uniforms.uAlpha = container.worldAlpha;\n\n        // make sure the texture is bound..\n        const baseTexture = children[0]._texture.baseTexture;\n\n        this.shader.uniforms.uSampler = renderer.bindTexture(baseTexture);\n\n        // now lets upload and render the buffers..\n        for (let i = 0, j = 0; i < totalChildren; i += batchSize, j += 1)\n        {\n            let amount = (totalChildren - i);\n\n            if (amount > batchSize)\n            {\n                amount = batchSize;\n            }\n\n            const buffer = buffers[j];\n\n            // we always upload the dynamic\n            buffer.uploadDynamic(children, i, amount);\n\n            // we only upload the static content when we have to!\n            if (container._bufferToUpdate === j)\n            {\n                buffer.uploadStatic(children, i, amount);\n                container._bufferToUpdate = j + 1;\n            }\n\n            // bind the buffer\n            renderer.bindVao(buffer.vao);\n            buffer.vao.draw(gl.TRIANGLES, amount * 6);\n        }\n    }\n\n    /**\n     * Creates one particle buffer for each child in the container we want to render and updates internal properties\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     * @return {PIXI.ParticleBuffer[]} The buffers\n     */\n    generateBuffers(container)\n    {\n        const gl = this.renderer.gl;\n        const buffers = [];\n        const size = container._maxSize;\n        const batchSize = container._batchSize;\n        const dynamicPropertyFlags = container._properties;\n\n        for (let i = 0; i < size; i += batchSize)\n        {\n            buffers.push(new ParticleBuffer(gl, this.properties, dynamicPropertyFlags, batchSize));\n        }\n\n        return buffers;\n    }\n\n    /**\n     * Uploads the verticies.\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their vertices uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n    uploadVertices(children, startIndex, amount, array, stride, offset)\n    {\n        let w0 = 0;\n        let w1 = 0;\n        let h0 = 0;\n        let h1 = 0;\n\n        for (let i = 0; i < amount; ++i)\n        {\n            const sprite = children[startIndex + i];\n            const texture = sprite._texture;\n            const sx = sprite.scale.x;\n            const sy = sprite.scale.y;\n            const trim = texture.trim;\n            const orig = texture.orig;\n\n            if (trim)\n            {\n                // if the sprite is trimmed and is not a tilingsprite then we need to add the\n                // extra space before transforming the sprite coords..\n                w1 = trim.x - (sprite.anchor.x * orig.width);\n                w0 = w1 + trim.width;\n\n                h1 = trim.y - (sprite.anchor.y * orig.height);\n                h0 = h1 + trim.height;\n            }\n            else\n            {\n                w0 = (orig.width) * (1 - sprite.anchor.x);\n                w1 = (orig.width) * -sprite.anchor.x;\n\n                h0 = orig.height * (1 - sprite.anchor.y);\n                h1 = orig.height * -sprite.anchor.y;\n            }\n\n            array[offset] = w1 * sx;\n            array[offset + 1] = h1 * sy;\n\n            array[offset + stride] = w0 * sx;\n            array[offset + stride + 1] = h1 * sy;\n\n            array[offset + (stride * 2)] = w0 * sx;\n            array[offset + (stride * 2) + 1] = h0 * sy;\n\n            array[offset + (stride * 3)] = w1 * sx;\n            array[offset + (stride * 3) + 1] = h0 * sy;\n\n            offset += stride * 4;\n        }\n    }\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their positions uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n    uploadPosition(children, startIndex, amount, array, stride, offset)\n    {\n        for (let i = 0; i < amount; i++)\n        {\n            const spritePosition = children[startIndex + i].position;\n\n            array[offset] = spritePosition.x;\n            array[offset + 1] = spritePosition.y;\n\n            array[offset + stride] = spritePosition.x;\n            array[offset + stride + 1] = spritePosition.y;\n\n            array[offset + (stride * 2)] = spritePosition.x;\n            array[offset + (stride * 2) + 1] = spritePosition.y;\n\n            array[offset + (stride * 3)] = spritePosition.x;\n            array[offset + (stride * 3) + 1] = spritePosition.y;\n\n            offset += stride * 4;\n        }\n    }\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n    uploadRotation(children, startIndex, amount, array, stride, offset)\n    {\n        for (let i = 0; i < amount; i++)\n        {\n            const spriteRotation = children[startIndex + i].rotation;\n\n            array[offset] = spriteRotation;\n            array[offset + stride] = spriteRotation;\n            array[offset + (stride * 2)] = spriteRotation;\n            array[offset + (stride * 3)] = spriteRotation;\n\n            offset += stride * 4;\n        }\n    }\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n    uploadUvs(children, startIndex, amount, array, stride, offset)\n    {\n        for (let i = 0; i < amount; ++i)\n        {\n            const textureUvs = children[startIndex + i]._texture._uvs;\n\n            if (textureUvs)\n            {\n                array[offset] = textureUvs.x0;\n                array[offset + 1] = textureUvs.y0;\n\n                array[offset + stride] = textureUvs.x1;\n                array[offset + stride + 1] = textureUvs.y1;\n\n                array[offset + (stride * 2)] = textureUvs.x2;\n                array[offset + (stride * 2) + 1] = textureUvs.y2;\n\n                array[offset + (stride * 3)] = textureUvs.x3;\n                array[offset + (stride * 3) + 1] = textureUvs.y3;\n\n                offset += stride * 4;\n            }\n            else\n            {\n                // TODO you know this can be easier!\n                array[offset] = 0;\n                array[offset + 1] = 0;\n\n                array[offset + stride] = 0;\n                array[offset + stride + 1] = 0;\n\n                array[offset + (stride * 2)] = 0;\n                array[offset + (stride * 2) + 1] = 0;\n\n                array[offset + (stride * 3)] = 0;\n                array[offset + (stride * 3) + 1] = 0;\n\n                offset += stride * 4;\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n    uploadAlpha(children, startIndex, amount, array, stride, offset)\n    {\n        for (let i = 0; i < amount; i++)\n        {\n            const spriteAlpha = children[startIndex + i].alpha;\n\n            array[offset] = spriteAlpha;\n            array[offset + stride] = spriteAlpha;\n            array[offset + (stride * 2)] = spriteAlpha;\n            array[offset + (stride * 3)] = spriteAlpha;\n\n            offset += stride * 4;\n        }\n    }\n\n    /**\n     * Destroys the ParticleRenderer.\n     *\n     */\n    destroy()\n    {\n        if (this.renderer.gl)\n        {\n            this.renderer.gl.deleteBuffer(this.indexBuffer);\n        }\n\n        super.destroy();\n\n        this.shader.destroy();\n\n        this.indices = null;\n        this.tempMatrix = null;\n    }\n\n}\n\ncore.WebGLRenderer.registerPlugin('particle', ParticleRenderer);\n","/**\n * @namespace PIXI.particles\n */\nexport { default as ParticleContainer } from './ParticleContainer';\nexport { default as ParticleRenderer } from './webgl/ParticleRenderer';\n","// import polyfills\nimport './polyfill';\n\n// export core\n// export * from './deprecation';\nexport * from './core';\n\n// export libs\n// import * as accessibility from './accessibility';\n//import * as extract from './extract';\n// import * as extras from './extras';\n// import * as filters from './filters';\nimport * as interaction from './interaction';\n// import * as loaders from './loaders';\n// import * as mesh from './mesh';\nimport * as particles from './particles';\n// import * as prepare from './prepare';\n\nexport {\n    // accessibility,\n    // extract,\n    // extras,\n    // filters,\n    interaction,\n    // loaders,\n    // mesh,\n    particles\n    // prepare\n};\n\n/**\n * A premade instance of the loader that can be used to load resources.\n *\n * @name loader\n * @memberof PIXI\n * @property {PIXI.loaders.Loader}\n */\n// const loader = loaders && loaders.Loader ? new loaders.Loader() : null; // check is there in case user excludes loader lib\n\n// export { loader };\n\n// Always export pixi globally.\n// global.PIXI = exports; // eslint-disable-line\n"],"names":["Object","assign","objectAssign","ONE_FRAME_TIME","Date","now","prototype","getTime","global","performance","startTime","lastTime","vendors","x","length","requestAnimationFrame","p","cancelAnimationFrame","callback","TypeError","currentTime","delay","setTimeout","id","clearTimeout","Math","sign","mathSign","Number","isNaN","window","ArrayBuffer","Array","Float32Array","Uint32Array","Uint16Array","canUploadSameBuffer","ios","navigator","platform","test","VERSION","PI_2","PI","RAD_TO_DEG","DEG_TO_RAD","RENDERER_TYPE","BLEND_MODES","DRAW_MODES","SCALE_MODES","WRAP_MODES","GC_MODES","URL_FILE_EXTENSION","DATA_URI","SVG_SIZE","SHAPES","PRECISION","TRANSFORM_MODE","TEXT_GRADIENT","CAN_UPLOAD_SAME_BUFFER","Point","y","set","ObservablePoint","cb","scope","_x","_y","call","point","value","Matrix","a","b","c","d","tx","ty","array","transpose","out","pos","newPos","angle","cos","sin","a1","c1","tx1","matrix","b1","d1","pivotX","pivotY","scaleX","scaleY","rotation","skewX","skewY","sr","cr","cy","sy","nsx","cx","transform","atan2","delta","abs","skew","scale","sqrt","position","n","ux","uy","vx","vy","tempMatrices","mul","signum","init","i","row","push","j","_ux","_uy","_vx","_vy","k","mat","GroupD8","ind","rotationSecond","rotationFirst","inv","dx","dy","S","N","E","W","SE","SW","NE","NW","append","Rectangle","width","height","type","RECT","rectangle","paddingX","paddingY","rect","EMPTY","x1","min","x2","max","y1","y2","Circle","radius","CIRC","r2","Ellipse","ELIP","normx","normy","Polygon","points","isArray","il","closed","POLY","slice","inside","xi","yi","xj","yj","intersect","RoundedRectangle","RREC","radius2","this","maxRecommendedTextures","Device","tablet","phone","pluginTarget","obj","__plugins","registerPlugin","pluginName","ctor","initPlugins","plugins","o","destroyPlugins","destroy","mixin","nextUid","saidHello","uid","hex2rgb","hex","hex2string","toString","substr","rgb2hex","rgb","getResolutionOfUrl","url","resolution","settings","RETINA_PREFIX","exec","parseFloat","decomposeDataUri","dataUri","dataUriMatch","toLowerCase","undefined","getUrlFileExtension","extension","getSvgSize","svgString","sizeMatch","size","round","skipHello","sayHello","userAgent","indexOf","args","console","log","apply","isWebGLSupported","contextOptions","stencil","failIfMajorPerformanceCaveat","WebGLRenderingContext","canvas","document","createElement","gl","getContext","success","getContextAttributes","loseContext","getExtension","e","removeItems","arr","startIdx","removeCount","len","TextureCache","BaseTextureCache","TICK","TARGET_FPMS","Ticker","_emitter","EventEmitter","_requestId","_maxElapsedMS","autoStart","deltaTime","elapsedMS","speed","started","_tick","time","update","listeners","_requestIfNeeded","start","fn","context","on","_startIfPossible","once","off","_cancelIfNeeded","emit","fps","minFPMS","shared","TransformBase","worldTransform","localTransform","_worldID","_parentID","parentTransform","pt","wt","lt","updateWorldTransform","updateTransform","IDENTITY","TransformStatic","onChange","pivot","updateSkew","_rotation","_sr","_cr","_cy","_sy","_nsx","_cx","_localID","_currentLocalID","decompose","Transform","Bounds","minX","Infinity","minY","maxX","maxY","updateID","vertices","x0","y0","beginOffset","endOffset","rawX","rawY","bounds","mask","_minX","_minY","_maxX","_maxY","area","DisplayObject","TransformClass","STATIC","tempDisplayObjectParent","alpha","visible","renderable","parent","worldAlpha","filterArea","_filters","_enabledFilters","_bounds","_boundsID","_lastBoundsID","_boundsRect","_localBoundsRect","_mask","_recursivePostUpdateTransform","_tempDisplayObjectParent","skipUpdate","calculateBounds","getRectangle","transformRef","parentRef","getBounds","displayObjectUpdateTransform","from","toGlobal","applyInverse","renderer","container","addChild","Error","removeAllListeners","removeChild","_currentBounds","interactive","interactiveChildren","copy","item","Container","children","child","argumentsLength","arguments","onChildrenChange","index","splice","child2","index1","getChildIndex","index2","currentIndex","getChildAt","beginIndex","endIndex","begin","end","range","removed","RangeError","clear","_calculateBounds","addBoundsMask","addBoundsArea","addBounds","renderAdvancedWebGL","_renderWebGL","renderWebGL","flush","filters","enabled","filterManager","pushFilter","maskManager","pushMask","popMask","popFilter","_renderCanvas","renderCanvas","options","destroyChildren","oldChildren","removeChildren","getLocalBounds","_width","_height","containerUpdateTransform","tempAnchor","determineCrossOrigin","loc","location","href","_url","parse","samePort","port","hostname","protocol","RESOLUTION","MIPMAP_TEXTURES","SCALE_MODE","WRAP_MODE","BaseTexture","source","scaleMode","touched","realWidth","realHeight","hasLoaded","isLoading","origSource","imageType","sourceScale","premultipliedAlpha","imageUrl","isPowerOfTwo","mipmap","wrapMode","_glTextures","_enabled","_virtalBoundId","loadSource","naturalWidth","videoWidth","naturalHeight","videoHeight","bitTwiddle","isPow2","wasLoading","onload","onerror","firstSourceLoaded","src","complete","_updateImageType","_loadSvgSource","_sourceLoaded","mediaType","firstSubType","subType","split","_loadSvgSourceUsingDataUri","_loadSvgSourceUsingXhr","encoding","atob","data","_loadSvgSourceUsingString","svgXhr","XMLHttpRequest","readyState","DONE","status","response","open","send","svgSize","svgWidth","svgHeight","_pixiId","drawImage","isCocoonJS","dispose","newSrc","crossorigin","baseTexture","image","Image","crossOrigin","BaseRenderTexture","_glRenderTargets","_canvasRenderTarget","valid","VideoBaseTexture","HAVE_ENOUGH_DATA","HAVE_FUTURE_DATA","_autoUpdate","_isAutoUpdating","autoPlay","bind","_onCanPlay","addEventListener","_onPlayStart","_onPlayStop","__loaded","_isSourceReady","paused","ended","autoUpdate","add","remove","removeEventListener","_isSourcePlaying","play","video","videoSrc","setAttribute","appendChild","createSource","mime","load","fromVideo","fromUrls","fromUrl","path","lastIndexOf","TextureUvs","x3","y3","uvsUint32","frame","baseFrame","rotate","tw","th","w2","h2","cX","cY","uX","uY","Texture","orig","trim","noFrame","_frame","requiresUpdate","_uvs","_rotate","onBaseTextureUpdated","onBaseTextureLoaded","_updateID","destroyBase","_updateUvs","texture","fromImage","frameId","fromCanvas","fromVideoUrl","videoUrl","isVideo","match","HTMLImageElement","HTMLCanvasElement","HTMLVideoElement","_emptyDestroy","_emptyOn","_emptyOnce","_emptyEmit","RenderTexture","baseRenderTexture","_legacyRenderer","warn","legacyRenderer","doNotResizeBaseTexture","resize","tempMatrix","RENDER_OPTIONS","SystemRenderer","system","UNKNOWN","view","transparent","autoResize","blendModes","preserveDrawingBuffer","clearBeforeRender","roundPixels","_backgroundColor","_backgroundColorRgba","_backgroundColorString","backgroundColor","_lastObjectRendered","style","displayObject","renderTexture","create","render","removeView","parentNode","CanvasMaskManager","maskData","save","cacheAlpha","setTransform","_texture","renderGraphicsShape","clip","graphics","graphicsData","beginPath","shape","moveTo","lineTo","closePath","arc","w","h","kappa","ox","oy","xe","ye","xm","ym","bezierCurveTo","rx","ry","maxRadius","quadraticCurveTo","restore","CanvasRenderTarget","clearRect","val","createColoredCanvas","color","fillStyle","fillRect","canUseNewCanvasBlendModes","magenta","yellow","globalCompositeOperation","imageData","getImageData","mapCanvasBlendModesToPixi","NORMAL","ADD","MULTIPLY","SCREEN","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATION","COLOR","LUMINOSITY","CanvasRenderer","CANVAS","rootContext","refresh","smoothProperty","imageSmoothingEnabled","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","oImageSmoothingEnabled","msImageSmoothingEnabled","_activeBlendMode","renderingToScreen","skipUpdateTransform","cacheParent","tempWt","identity","globalAlpha","screencanvas","tempContext","blendMode","LINEAR","WebGLManager","onContextChange","defaultValue","glCore","shader","extractUniformsFromSrc","vertexSrc","fragmentSrc","vertUniforms","extractUniformsFromString","fragUniforms","string","maskRegex","RegExp","uniforms","nameSplit","lines","replace","line","splitLine","name","SOURCE_KEY_MAP","Filter","defaultVertexSrc","defaultFragmentSrc","uniformData","glShaders","glShaderKey","padding","input","output","applyFilter","join","SpriteMaskFilter","sprite","maskMatrix","readFileSync","__dirname","maskSprite","otherMatrix","calculateSpriteMatrix","MaskManager","scissor","scissorData","scissorRenderTarget","enableScissor","alphaMaskPool","alphaMaskIndex","target","pushSpriteMask","stencilManager","stencilMaskStack","isFastRect","rot","pushStencilMask","pushScissorMask","popSpriteMask","popScissorMask","popStencilMask","alphaMaskFilter","AlphaMaskFilter","currentRenderer","stop","pushStencil","popStencil","renderTarget","_activeRenderTarget","fit","enable","SCISSOR_TEST","root","disable","StencilManager","STENCIL_TEST","setObjectRenderer","attachStencilBuffer","sms","STENCIL_BUFFER_BIT","stencilFunc","ALWAYS","colorMask","stencilOp","KEEP","INCR","NOTEQUAL","pop","DECR","stencilStack","RenderTarget","frameBuffer","clearColor","projectionMatrix","defaultFrame","destinationFrame","sourceFrame","stencilBuffer","filterData","GLFramebuffer","createRGBA","NEAREST","enableNearestScaling","enableLinearScaling","framebuffer","setFrame","cc","enableStencil","calculateProjection","viewport","pm","projectionFrame","createIndicesForQuads","totalIndices","indices","Quad","state","uvs","interleaved","vertexBuffer","GLBuffer","createVertexBuffer","STATIC_DRAW","indexBuffer","createIndexBuffer","vao","VertexArrayObject","addIndex","addAttribute","attributes","aVertexPosition","FLOAT","aTextureCoord","targetTextureFrame","upload","deleteBuffer","checkPrecision","substring","unshift","Shader","GLShader","calculateScreenSpaceMatrix","outputMatrix","textureSize","mappedMatrix","translate","calculateNormalizedScreenSpaceMatrix","translateScaleX","translateScaleY","TEMP_MATRIX","ratio","invert","prepend","anchor","FilterState","FilterManager","quad","attribState","shaderCache","pool","filterStack","filterState","currentState","stack","targetBounds","pad","getPotRenderTarget","bindRenderTarget","lastState","map","freePotRenderTarget","flip","flop","t","filter","CONTEXT_UID","bindVao","initVao","bindShader","syncUniforms","setBlendMode","tex","boundTextures","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","draw","TRIANGLES","textureCount","filterClamp","toArray","filterTransforms","emptyPool","minWidth","minHeight","nextPow2","key","textures","ObjectRenderer","object","TextureManager","_managedTextures","isRenderTexture","glTexture","GLTexture","premultiplyAlpha","updateTexture","destroyTexture","enableMipmap","CLAMP","enableWrapClamp","REPEAT","enableWrapRepeat","enableWrapMirrorRepeat","skipRemove","unbindTexture","GC_MODE","GC_MAX_IDLE","GC_MAX_CHECK_COUNT","TextureGarbageCollector","count","checkCount","maxIdle","checkCountMax","mode","MANUAL","run","tm","textureManager","managedTextures","wasRemoved","unload","mapWebGLBlendModesToPixi","ONE","ONE_MINUS_SRC_ALPHA","DST_ALPHA","DST_COLOR","ONE_MINUS_SRC_COLOR","BLEND","DEPTH_TEST","FRONT_FACE","CULL_FACE","BLEND_FUNC","WebGLState","activeState","Uint8Array","defaultState","stackIndex","maxAttribs","getParameter","MAX_VERTEX_ATTRIBS","nativeVaoExtension","setState","setBlend","setDepthTest","setFrontFace","setCullFace","blendFunc","frontFace","tempAttribState","disableVertexAttribArray","bindVertexArrayOES","resetAttributes","pixelStorei","UNPACK_FLIP_Y_WEBGL","mapWebGLDrawModesToPixi","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLE_STRIP","TRIANGLE_FAN","validateContext","WebGLRenderer","WEBGL","handleContextLost","handleContextRestored","_contextOptions","antialias","emptyRenderer","createContext","_initContext","drawModes","_activeShader","_activeVao","_nextTextureLocation","isContextLost","restoreContext","maxTextures","MAX_TEXTURE_IMAGE_UNITS","emptyTextures","textureGC","resetToDefault","rootRenderTarget","emptyGLTexture","fromData","tempObj","empty","bindRenderTexture","objectRenderer","activate","setMaskStack","forceLocation","unbind","event","preventDefault","removeAll","useProgram","tempPoint","Sprite","_anchor","_onAnchorUpdate","_tint","_tintRGB","tint","cachedTint","vertexData","vertexTrimmedData","_transformID","_textureID","w0","w1","h0","h1","calculateVertices","addQuad","calculateTrimmedVertices","babelHelpers.get","destroyBaseTexture","s","_onTextureUpdate","imageId","CanvasTinter","roundColor","stringColor","tintCache","tintMethod","convertTintToImage","tintImage","toDataURL","crop","clone","rgbValues","r","g","pixelData","pixels","putImageData","step","cacheStepsPerColorChannel","canUseMultiply","tintWithMultiply","tintWithPerPixel","canvasRenderWorldTransform","CanvasSpriteRenderer","smoothingEnabled","matrixAppendRotationInv","tintedTexture","getTintedTexture","fragTemplate","generateMultiTextureShader","generateSampleSrc","sampleValues","uSamplers","checkMaxIfStatmentsInShader","maxIfs","createTempContext","tinyCanvas","createShader","FRAGMENT_SHADER","generateIfTestSrc","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","Buffer","float32View","uint32View","positions","colors","SPRITE_BATCH_SIZE","SPRITE_MAX_TEXTURES","TEXTURE_TICK","SpriteRenderer","vertSize","vertByteSize","buffers","groups","ids","blend","sprites","vertexBuffers","vaos","vaoMax","vertexCount","onPrerender","MAX_TEXTURES","STREAM_DRAW","createVao","UNSIGNED_SHORT","aColor","UNSIGNED_BYTE","aTextureId","currentBlendMode","np2","log2","buffer","rendererBoundTextures","touch","nextTexture","currentTexture","groupCount","currentGroup","tIndex","group","groupTextureCount","drawElements","defaultStyle","LINEAR_VERTICAL","TextStyle","styleID","clonedProperties","_defaults","_align","align","_breakWords","breakWords","_dropShadow","dropShadow","_dropShadowAngle","dropShadowAngle","_dropShadowBlur","dropShadowBlur","_dropShadowColor","dropShadowColor","outputColor","getColor","_dropShadowDistance","dropShadowDistance","_fill","fill","_fillGradientType","fillGradientType","_fontFamily","fontFamily","_fontSize","fontSize","_fontStyle","fontStyle","_fontVariant","fontVariant","_fontWeight","fontWeight","_letterSpacing","letterSpacing","_lineHeight","lineHeight","_lineJoin","lineJoin","_miterLimit","miterLimit","_padding","_stroke","stroke","_strokeThickness","strokeThickness","_textBaseline","textBaseline","_wordWrap","wordWrap","_wordWrapWidth","wordWrapWidth","defaultDestroyOptions","Text","text","_text","_style","_styleListener","_font","localStyleID","respectDirty","dirty","getFontStyle","font","outputText","lineWidths","maxLineWidth","fontProperties","calculateFontProperties","lineWidth","measureText","ceil","strokeStyle","linePositionX","linePositionY","shadowColor","shadowBlur","xShadowOffset","yShadowOffset","ascent","drawLetterSpacing","_generateFillStyle","isStroke","strokeText","fillText","characters","String","currentPosition","current","updateText","result","spaceLeft","words","wordWidth","characterWidth","wordWidthWithSpace","gradient","totalIterations","currentIteration","createLinearGradient","addColorStop","fontSizeString","fontPropertiesCache","properties","fontPropertiesCanvas","fontPropertiesContext","baseline","imagedata","idx","descent","GraphicsData","lineColor","lineAlpha","fillColor","fillAlpha","_lineTint","_fillTint","holes","fromX","fromY","cpX","cpY","cpX2","cpY2","toX","toY","dt","dt2","dt3","t2","t3","canvasRenderer","tempColor1","tempColor2","Graphics","_prevTint","currentPath","_webGL","isMask","boundsPadding","_localBounds","fastRectDirty","clearDirty","boundsDirty","cachedSpriteDirty","_spriteRect","_fastRect","updateLocalBounds","drawShape","xa","ya","a2","b2","mm","dd","tt","k1","k2","j1","j2","px","py","qx","qy","startAngle","endAngle","anticlockwise","sweep","segs","startX","startY","theta","theta2","cTheta","sTheta","segMinus","remainder","real","filling","_renderSpriteRect","_SPRITE_TEXTURE","t1","lb","addFrame","contains","rw","rh","canvasBuffer","close","hole","addHole","_webgl","WebGLGraphicsData","attribsState","glPoints","glIndices","PrimitiveShader","buildLine","webGLData","firstPoint","lastPoint","midPointX","midPointY","verts","indexCount","indexStart","p1x","p1y","p2x","p2y","p3x","p3y","perpx","perpy","perp2x","perp2y","perp3x","perp3y","dist","c2","denom","pdist","equals","buildPoly","holeArray","concat","triangles","earcut","vertPos","buildRectangle","rectData","tempPoints","buildRoundedRectangle","rrectData","recPoints","vecPos","quadraticBezierCurve","xb","yb","getPt","n1","n2","perc","diff","buildCircle","circleData","totalSegs","floor","seg","GraphicsRenderer","graphicsDataPool","primitiveShader","webGL","updateGraphics","shaderTemp","translationMatrix","lastIndex","getWebGLData","reset","CanvasGraphicsRenderer","updateGraphicsTint","renderPolygon","strokeRect","tintR","tintG","tintB","autoDetectRenderer","noWebGL","utils","InteractionData","core","originalEvent","globalPos","InteractionEvent","stopped","currentTarget","interactiveTarget","InteractionManager","autoPreventDefault","interactionFrequency","mouse","pointer","eventData","interactiveDataPool","interactionDOMElement","moveWhenInside","eventsAdded","mouseOverRenderer","supportsTouchEvents","supportsPointerEvents","PointerEvent","normalizeTouchEvents","normalizeMouseEvents","MobileDevice","any","onMouseUp","processMouseUp","onMouseDown","processMouseDown","onMouseMove","processMouseMove","onMouseOut","processMouseOverOut","onMouseOver","onPointerUp","processPointerUp","onPointerDown","processPointerDown","onPointerMove","processPointerMove","onPointerOut","processPointerOverOut","onPointerOver","onTouchStart","processTouchStart","onTouchEnd","processTouchEnd","onTouchMove","processTouchMove","defaultCursorStyle","currentCursorStyle","_tempPoint","setTargetElement","element","removeEvents","addEvents","msPointerEnabled","_deltaTime","didMove","cursor","_reset","processInteractive","eventString","parentElement","getBoundingClientRect","left","top","func","hitTest","hit","interactiveParent","hitArea","containsPoint","mapPositionToPoint","clientX","clientY","isRightButton","button","which","dispatchEvent","isDown","_mouseOver","buttonMode","defaultCursor","normalizeToPointerData","_pointerDown","changedTouches","_pointerOver","cLength","touchData","getTouchData","returnTouchData","_touchDown","touchEvent","identifier","globalX","globalY","touches","buttons","isPrimary","radiusX","radiusY","tiltX","tiltY","pointerType","pointerId","pressure","force","rotationAngle","pageX","pageY","screenX","screenY","layerX","offsetX","layerY","offsetY","ParticleContainer","maxSize","batchSize","maxBatchSize","_properties","_maxSize","_batchSize","_glBuffers","_bufferToUpdate","setProperties","particle","smallestChildIndex","bufferIndex","isRotated","positionX","positionY","finalWidth","finalHeight","compositeOperation","childTransform","_buffers","ParticleShader","ParticleBuffer","dynamicPropertyFlags","dynamicProperties","staticProperties","property","attribute","uploadFunction","offset","staticStride","staticBuffer","staticData","dynamicStride","dynamicBuffer","dynamicData","initBuffers","dynamicOffset","staticOffset","startIndex","amount","ParticleRenderer","uploadVertices","aPositionCoord","uploadPosition","aRotation","uploadRotation","uploadUvs","uploadAlpha","totalChildren","generateBuffers","m","uAlpha","uSampler","uploadDynamic","uploadStatic","stride","sx","spritePosition","spriteRotation","textureUvs","spriteAlpha"],"mappings":"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"}